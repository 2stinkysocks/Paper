--- a/net/minecraft/network/protocol/game/ServerboundUseItemOnPacket.java
+++ b/net/minecraft/network/protocol/game/ServerboundUseItemOnPacket.java
@@ -1,42 +1,41 @@
+// mc-dev import
 package net.minecraft.network.protocol.game;
 
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
-import net.minecraft.world.InteractionHand;
+import net.minecraft.world.EnumHand;
 import net.minecraft.world.phys.BlockHitResult;
 
 public class ServerboundUseItemOnPacket implements Packet<ServerGamePacketListener> {
 
     private final BlockHitResult blockHit;
-    private final InteractionHand hand;
+    private final EnumHand hand;
     private final int sequence;
 
-    public ServerboundUseItemOnPacket(InteractionHand interactionhand, BlockHitResult blockhitresult, int i) {
-        this.hand = interactionhand;
-        this.blockHit = blockhitresult;
-        this.sequence = i;
+    public ServerboundUseItemOnPacket(EnumHand hand, BlockHitResult blockHit, int sequence) {
+        this.hand = hand;
+        this.blockHit = blockHit;
+        this.sequence = sequence;
     }
 
-    public ServerboundUseItemOnPacket(FriendlyByteBuf friendlybytebuf) {
-        this.hand = (InteractionHand) friendlybytebuf.readEnum(InteractionHand.class);
-        this.blockHit = friendlybytebuf.readBlockHitResult();
-        this.sequence = friendlybytebuf.readVarInt();
+    public ServerboundUseItemOnPacket(FriendlyByteBuf buffer) {
+        this.hand = (EnumHand) buffer.readEnum(EnumHand.class);
+        this.blockHit = buffer.readBlockHitResult();
+        this.sequence = buffer.readVarInt();
     }
 
     @Override
-    @Override
-    public void write(FriendlyByteBuf friendlybytebuf) {
-        friendlybytebuf.writeEnum(this.hand);
-        friendlybytebuf.writeBlockHitResult(this.blockHit);
-        friendlybytebuf.writeVarInt(this.sequence);
+    public void write(FriendlyByteBuf buffer) {
+        buffer.writeEnum(this.hand);
+        buffer.writeBlockHitResult(this.blockHit);
+        buffer.writeVarInt(this.sequence);
     }
 
-    @Override
-    public void handle(ServerGamePacketListener servergamepacketlistener) {
-        servergamepacketlistener.handleUseItemOn(this);
+    public void handle(ServerGamePacketListener handler) {
+        handler.handleUseItemOn(this);
     }
 
-    public InteractionHand getHand() {
+    public EnumHand getHand() {
         return this.hand;
     }
 
