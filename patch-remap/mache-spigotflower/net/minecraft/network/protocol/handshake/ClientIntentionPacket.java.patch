--- a/net/minecraft/network/protocol/handshake/ClientIntentionPacket.java
+++ b/net/minecraft/network/protocol/handshake/ClientIntentionPacket.java
@@ -1,3 +1,4 @@
+// mc-dev import
 package net.minecraft.network.protocol.handshake;
 
 import net.minecraft.network.ConnectionProtocol;
@@ -8,26 +9,23 @@
 
     private static final int MAX_HOST_LENGTH = 255;
 
-    public ClientIntentionPacket(FriendlyByteBuf friendlybytebuf) {
-        this(friendlybytebuf.readVarInt(), friendlybytebuf.readUtf(255), friendlybytebuf.readUnsignedShort(), ClientIntent.byId(friendlybytebuf.readVarInt()));
+    public ClientIntentionPacket(FriendlyByteBuf buffer) {
+        this(buffer.readVarInt(), buffer.readUtf(255), buffer.readUnsignedShort(), ClientIntent.byId(buffer.readVarInt()));
     }
 
     @Override
-    @Override
-    public void write(FriendlyByteBuf friendlybytebuf) {
-        friendlybytebuf.writeVarInt(this.protocolVersion);
-        friendlybytebuf.writeUtf(this.hostName);
-        friendlybytebuf.writeShort(this.port);
-        friendlybytebuf.writeVarInt(this.intention.id());
+    public void write(FriendlyByteBuf buffer) {
+        buffer.writeVarInt(this.protocolVersion);
+        buffer.writeUtf(this.hostName);
+        buffer.writeShort(this.port);
+        buffer.writeVarInt(this.intention.id());
     }
 
-    @Override
-    public void handle(ServerHandshakePacketListener serverhandshakepacketlistener) {
-        serverhandshakepacketlistener.handleIntention(this);
+    public void handle(ServerHandshakePacketListener handler) {
+        handler.handleIntention(this);
     }
 
     @Override
-    @Override
     public ConnectionProtocol nextProtocol() {
         return this.intention.protocol();
     }
