--- a/net/minecraft/world/entity/projectile/ThrownEgg.java
+++ b/net/minecraft/world/entity/projectile/ThrownEgg.java
@@ -1,34 +1,38 @@
 package net.minecraft.world.entity.projectile;
 
-import net.minecraft.core.particles.ItemParticleOption;
-import net.minecraft.core.particles.ParticleTypes;
-import net.minecraft.world.entity.EntityType;
-import net.minecraft.world.entity.LivingEntity;
-import net.minecraft.world.entity.animal.Chicken;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
+import net.minecraft.core.particles.ItemParticleOption;
+import net.minecraft.core.particles.ParticleTypes;
+import net.minecraft.server.level.ServerPlayer;
+import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.LivingEntity;
+import org.bukkit.entity.Ageable;
+import org.bukkit.entity.EntityType;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerEggThrowEvent;
+// CraftBukkit end
 
 public class ThrownEgg extends ThrowableItemProjectile {
 
-    public ThrownEgg(EntityType<? extends ThrownEgg> entitytype, Level level) {
-        super(entitytype, level);
+    public ThrownEgg(net.minecraft.world.entity.EntityType<? extends ThrownEgg> entityType, Level level) {
+        super(entityType, level);
     }
 
-    public ThrownEgg(Level level, LivingEntity livingentity) {
-        super(EntityType.EGG, livingentity, level);
+    public ThrownEgg(Level level, LivingEntity shooter) {
+        super(net.minecraft.world.entity.EntityType.EGG, shooter, level);
     }
 
-    public ThrownEgg(Level level, double d0, double d1, double d2) {
-        super(EntityType.EGG, d0, d1, d2, level);
+    public ThrownEgg(Level level, double x, double d1, double y) {
+        super(net.minecraft.world.entity.EntityType.EGG, x, d1, y, level);
     }
 
     @Override
-    @Override
-    public void handleEntityEvent(byte b0) {
-        if (b0 == 3) {
+    public void handleEntityEvent(byte id) {
+        if (id == 3) {
             double d0 = 0.08D;
 
             for (int i = 0; i < 8; ++i) {
@@ -39,31 +43,56 @@
     }
 
     @Override
-    @Override
-    protected void onHitEntity(EntityHitResult entityhitresult) {
-        super.onHitEntity(entityhitresult);
-        entityhitresult.getEntity().hurt(this.damageSources().thrown(this, this.getOwner()), 0.0F);
+    protected void onHitEntity(EntityHitResult result) {
+        super.onHitEntity(result);
+        result.getEntity().hurt(this.damageSources().thrown(this, this.getOwner()), 0.0F);
     }
 
     @Override
-    @Override
-    protected void onHit(HitResult hitresult) {
-        super.onHit(hitresult);
+    protected void onHit(HitResult result) {
+        super.onHit(result);
         if (!this.level().isClientSide) {
-            if (this.random.nextInt(8) == 0) {
+            // CraftBukkit start
+            boolean hatching = this.random.nextInt(8) == 0;
+            if (true) {
+            // CraftBukkit end
                 byte b0 = 1;
 
                 if (this.random.nextInt(32) == 0) {
                     b0 = 4;
                 }
 
+                // CraftBukkit start
+                EntityType hatchingType = EntityType.CHICKEN;
+
+                Entity shooter = this.getOwner();
+                if (!hatching) {
+                    b0 = 0;
+                }
+                if (shooter instanceof ServerPlayer) {
+                    PlayerEggThrowEvent event = new PlayerEggThrowEvent((Player) shooter.getBukkitEntity(), (org.bukkit.entity.Egg) this.getBukkitEntity(), hatching, b0, hatchingType);
+                    this.level().getCraftServer().getPluginManager().callEvent(event);
+
+                    b0 = event.getNumHatches();
+                    hatching = event.isHatching();
+                    hatchingType = event.getHatchingType();
+                    // If hatching is set to false, ensure child count is 0
+                    if (!hatching) {
+                        b0 = 0;
+                    }
+                }
+                // CraftBukkit end
+
                 for (int i = 0; i < b0; ++i) {
-                    Chicken chicken = (Chicken) EntityType.CHICKEN.create(this.level());
+                    Entity entitychicken = this.level().getWorld().makeEntity(new org.bukkit.Location(this.level().getWorld(), this.getX(), this.getY(), this.getZ(), this.getYRot(), 0.0F), hatchingType.getEntityClass()); // CraftBukkit
 
-                    if (chicken != null) {
-                        chicken.setAge(-24000);
-                        chicken.moveTo(this.getX(), this.getY(), this.getZ(), this.getYRot(), 0.0F);
-                        this.level().addFreshEntity(chicken);
+                    if (entitychicken != null) {
+                        // CraftBukkit start
+                        if (entitychicken.getBukkitEntity() instanceof Ageable) {
+                            ((Ageable) entitychicken.getBukkitEntity()).setBaby();
+                        }
+                        this.level().addFreshEntity(entitychicken, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.EGG);
+                        // CraftBukkit end
                     }
                 }
             }
@@ -75,7 +104,6 @@
     }
 
     @Override
-    @Override
     protected Item getDefaultItem() {
         return Items.EGG;
     }
