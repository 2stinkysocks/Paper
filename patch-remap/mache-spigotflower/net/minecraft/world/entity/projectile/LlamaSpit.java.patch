--- a/net/minecraft/world/entity/projectile/LlamaSpit.java
+++ b/net/minecraft/world/entity/projectile/LlamaSpit.java
@@ -16,27 +16,26 @@
 
 public class LlamaSpit extends Projectile {
 
-    public LlamaSpit(EntityType<? extends LlamaSpit> entitytype, Level level) {
-        super(entitytype, level);
+    public LlamaSpit(EntityType<? extends LlamaSpit> entityType, Level level) {
+        super(entityType, level);
     }
 
-    public LlamaSpit(Level level, Llama llama) {
+    public LlamaSpit(Level level, Llama spitter) {
         this(EntityType.LLAMA_SPIT, level);
-        this.setOwner(llama);
-        this.setPos(llama.getX() - (double) (llama.getBbWidth() + 1.0F) * 0.5D * (double) Mth.sin(llama.yBodyRot * 0.017453292F), llama.getEyeY() - 0.10000000149011612D, llama.getZ() + (double) (llama.getBbWidth() + 1.0F) * 0.5D * (double) Mth.cos(llama.yBodyRot * 0.017453292F));
+        this.setOwner(spitter);
+        this.setPos(spitter.getX() - (double) (spitter.getBbWidth() + 1.0F) * 0.5D * (double) Mth.sin(spitter.yBodyRot * 0.017453292F), spitter.getEyeY() - 0.10000000149011612D, spitter.getZ() + (double) (spitter.getBbWidth() + 1.0F) * 0.5D * (double) Mth.cos(spitter.yBodyRot * 0.017453292F));
     }
 
     @Override
-    @Override
     public void tick() {
         super.tick();
-        Vec3 vec3 = this.getDeltaMovement();
-        HitResult hitresult = ProjectileUtil.getHitResultOnMoveVector(this, this::canHitEntity);
+        Vec3 vec3d = this.getDeltaMovement();
+        HitResult movingobjectposition = ProjectileUtil.getHitResultOnMoveVector(this, this::canHitEntity);
 
-        this.onHit(hitresult);
-        double d0 = this.getX() + vec3.x;
-        double d1 = this.getY() + vec3.y;
-        double d2 = this.getZ() + vec3.z;
+        this.preOnHit(movingobjectposition); // CraftBukkit - projectile hit event
+        double d0 = this.getX() + vec3d.x;
+        double d1 = this.getY() + vec3d.y;
+        double d2 = this.getZ() + vec3d.z;
 
         this.updateRotation();
         float f = 0.99F;
@@ -47,7 +46,7 @@
         } else if (this.isInWaterOrBubble()) {
             this.discard();
         } else {
-            this.setDeltaMovement(vec3.scale(0.9900000095367432D));
+            this.setDeltaMovement(vec3d.scale(0.9900000095367432D));
             if (!this.isNoGravity()) {
                 this.setDeltaMovement(this.getDeltaMovement().add(0.0D, -0.05999999865889549D, 0.0D));
             }
@@ -57,23 +56,21 @@
     }
 
     @Override
-    @Override
-    protected void onHitEntity(EntityHitResult entityhitresult) {
-        super.onHitEntity(entityhitresult);
+    protected void onHitEntity(EntityHitResult result) {
+        super.onHitEntity(result);
         Entity entity = this.getOwner();
 
         if (entity instanceof LivingEntity) {
-            LivingEntity livingentity = (LivingEntity) entity;
+            LivingEntity entityliving = (LivingEntity) entity;
 
-            entityhitresult.getEntity().hurt(this.damageSources().mobProjectile(this, livingentity), 1.0F);
+            result.getEntity().hurt(this.damageSources().mobProjectile(this, entityliving), 1.0F);
         }
 
     }
 
     @Override
-    @Override
-    protected void onHitBlock(BlockHitResult blockhitresult) {
-        super.onHitBlock(blockhitresult);
+    protected void onHitBlock(BlockHitResult result) {
+        super.onHitBlock(result);
         if (!this.level().isClientSide) {
             this.discard();
         }
@@ -81,16 +78,14 @@
     }
 
     @Override
-    @Override
     protected void defineSynchedData() {}
 
     @Override
-    @Override
-    public void recreateFromPacket(ClientboundAddEntityPacket clientboundaddentitypacket) {
-        super.recreateFromPacket(clientboundaddentitypacket);
-        double d0 = clientboundaddentitypacket.getXa();
-        double d1 = clientboundaddentitypacket.getYa();
-        double d2 = clientboundaddentitypacket.getZa();
+    public void recreateFromPacket(ClientboundAddEntityPacket packet) {
+        super.recreateFromPacket(packet);
+        double d0 = packet.getXa();
+        double d1 = packet.getYa();
+        double d2 = packet.getZa();
 
         for (int i = 0; i < 7; ++i) {
             double d3 = 0.4D + 0.1D * (double) i;
