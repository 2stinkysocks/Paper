--- a/net/minecraft/world/entity/animal/horse/TraderLlama.java
+++ b/net/minecraft/world/entity/animal/horse/TraderLlama.java
@@ -7,9 +7,9 @@
 import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
+import net.minecraft.world.entity.EnumMobSpawn;
+import net.minecraft.world.entity.GroupDataEntity;
 import net.minecraft.world.entity.LivingEntity;
-import net.minecraft.world.entity.MobSpawnType;
-import net.minecraft.world.entity.SpawnGroupData;
 import net.minecraft.world.entity.ai.goal.Goal;
 import net.minecraft.world.entity.ai.goal.PanicGoal;
 import net.minecraft.world.entity.ai.goal.target.TargetGoal;
@@ -23,54 +23,48 @@
 
     private int despawnDelay = 47999;
 
-    public TraderLlama(EntityType<? extends TraderLlama> entitytype, Level level) {
-        super(entitytype, level);
+    public TraderLlama(EntityType<? extends TraderLlama> entityType, Level level) {
+        super(entityType, level);
     }
 
     @Override
-    @Override
     public boolean isTraderLlama() {
         return true;
     }
 
     @Nullable
     @Override
-    @Override
     protected Llama makeNewLlama() {
         return (Llama) EntityType.TRADER_LLAMA.create(this.level());
     }
 
     @Override
-    @Override
-    public void addAdditionalSaveData(CompoundTag compoundtag) {
-        super.addAdditionalSaveData(compoundtag);
-        compoundtag.putInt("DespawnDelay", this.despawnDelay);
+    public void addAdditionalSaveData(CompoundTag compound) {
+        super.addAdditionalSaveData(compound);
+        compound.putInt("DespawnDelay", this.despawnDelay);
     }
 
     @Override
-    @Override
-    public void readAdditionalSaveData(CompoundTag compoundtag) {
-        super.readAdditionalSaveData(compoundtag);
-        if (compoundtag.contains("DespawnDelay", 99)) {
-            this.despawnDelay = compoundtag.getInt("DespawnDelay");
+    public void readAdditionalSaveData(CompoundTag compound) {
+        super.readAdditionalSaveData(compound);
+        if (compound.contains("DespawnDelay", 99)) {
+            this.despawnDelay = compound.getInt("DespawnDelay");
         }
 
     }
 
     @Override
-    @Override
     protected void registerGoals() {
         super.registerGoals();
         this.goalSelector.addGoal(1, new PanicGoal(this, 2.0D));
         this.targetSelector.addGoal(1, new TraderLlama.TraderLlamaDefendWanderingTraderGoal(this));
     }
 
-    public void setDespawnDelay(int i) {
-        this.despawnDelay = i;
+    public void setDespawnDelay(int despawnDelay) {
+        this.despawnDelay = despawnDelay;
     }
 
     @Override
-    @Override
     protected void doPlayerRide(Player player) {
         Entity entity = this.getLeashHolder();
 
@@ -80,7 +74,6 @@
     }
 
     @Override
-    @Override
     public void aiStep() {
         super.aiStep();
         if (!this.level().isClientSide) {
@@ -114,17 +107,16 @@
 
     @Nullable
     @Override
-    @Override
-    public SpawnGroupData finalizeSpawn(ServerLevelAccessor serverlevelaccessor, DifficultyInstance difficultyinstance, MobSpawnType mobspawntype, @Nullable SpawnGroupData spawngroupdata, @Nullable CompoundTag compoundtag) {
-        if (mobspawntype == MobSpawnType.EVENT) {
+    public GroupDataEntity finalizeSpawn(ServerLevelAccessor level, DifficultyInstance difficulty, EnumMobSpawn reason, @Nullable GroupDataEntity spawnData, @Nullable CompoundTag dataTag) {
+        if (reason == EnumMobSpawn.EVENT) {
             this.setAge(0);
         }
 
-        if (spawngroupdata == null) {
-            spawngroupdata = new AgeableMob.AgeableMobGroupData(false);
+        if (spawnData == null) {
+            spawnData = new AgeableMob.AgeableMobGroupData(false);
         }
 
-        return super.finalizeSpawn(serverlevelaccessor, difficultyinstance, mobspawntype, (SpawnGroupData) spawngroupdata, compoundtag);
+        return super.finalizeSpawn(level, difficulty, reason, (GroupDataEntity) spawnData, dataTag);
     }
 
     protected static class TraderLlamaDefendWanderingTraderGoal extends TargetGoal {
@@ -136,11 +128,10 @@
         public TraderLlamaDefendWanderingTraderGoal(Llama llama) {
             super(llama, false);
             this.llama = llama;
-            this.setFlags(EnumSet.of(Goal.Flag.TARGET));
+            this.setFlags(EnumSet.of(Goal.Type.TARGET));
         }
 
         @Override
-        @Override
         public boolean canUse() {
             if (!this.llama.isLeashed()) {
                 return false;
@@ -150,10 +141,10 @@
                 if (!(entity instanceof WanderingTrader)) {
                     return false;
                 } else {
-                    WanderingTrader wanderingtrader = (WanderingTrader) entity;
+                    WanderingTrader entityvillagertrader = (WanderingTrader) entity;
 
-                    this.ownerLastHurtBy = wanderingtrader.getLastHurtByMob();
-                    int i = wanderingtrader.getLastHurtByMobTimestamp();
+                    this.ownerLastHurtBy = entityvillagertrader.getLastHurtByMob();
+                    int i = entityvillagertrader.getLastHurtByMobTimestamp();
 
                     return i != this.timestamp && this.canAttack(this.ownerLastHurtBy, TargetingConditions.DEFAULT);
                 }
@@ -161,9 +152,8 @@
         }
 
         @Override
-        @Override
         public void start() {
-            this.mob.setTarget(this.ownerLastHurtBy);
+            this.mob.setTarget(this.ownerLastHurtBy, org.bukkit.event.entity.EntityTargetEvent.TargetReason.TARGET_ATTACKED_OWNER, true); // CraftBukkit
             Entity entity = this.llama.getLeashHolder();
 
             if (entity instanceof WanderingTrader) {
