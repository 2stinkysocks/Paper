--- a/net/minecraft/world/entity/ai/village/VillageSiege.java
+++ b/net/minecraft/world/entity/ai/village/VillageSiege.java
@@ -9,8 +9,8 @@
 import net.minecraft.tags.BiomeTags;
 import net.minecraft.util.Mth;
 import net.minecraft.world.entity.EntityType;
-import net.minecraft.world.entity.MobSpawnType;
-import net.minecraft.world.entity.SpawnGroupData;
+import net.minecraft.world.entity.EnumMobSpawn;
+import net.minecraft.world.entity.GroupDataEntity;
 import net.minecraft.world.entity.monster.Monster;
 import net.minecraft.world.entity.monster.Zombie;
 import net.minecraft.world.entity.player.Player;
@@ -35,20 +35,19 @@
     }
 
     @Override
-    @Override
-    public int tick(ServerLevel serverlevel, boolean flag, boolean flag1) {
-        if (!serverlevel.isDay() && flag) {
-            float f = serverlevel.getTimeOfDay(0.0F);
+    public int tick(ServerLevel level, boolean spawnHostiles, boolean spawnPassives) {
+        if (!level.isDay() && spawnHostiles) {
+            float f = level.getTimeOfDay(0.0F);
 
             if ((double) f == 0.5D) {
-                this.siegeState = serverlevel.random.nextInt(10) == 0 ? VillageSiege.State.SIEGE_TONIGHT : VillageSiege.State.SIEGE_DONE;
+                this.siegeState = level.random.nextInt(10) == 0 ? VillageSiege.State.SIEGE_TONIGHT : VillageSiege.State.SIEGE_DONE;
             }
 
             if (this.siegeState == VillageSiege.State.SIEGE_DONE) {
                 return 0;
             } else {
                 if (!this.hasSetupSiege) {
-                    if (!this.tryToSetupSiege(serverlevel)) {
+                    if (!this.tryToSetupSiege(level)) {
                         return 0;
                     }
 
@@ -61,7 +60,7 @@
                 } else {
                     this.nextSpawnTime = 2;
                     if (this.zombiesToSpawn > 0) {
-                        this.trySpawn(serverlevel);
+                        this.trySpawn(level);
                         --this.zombiesToSpawn;
                     } else {
                         this.siegeState = VillageSiege.State.SIEGE_DONE;
@@ -77,23 +76,23 @@
         }
     }
 
-    private boolean tryToSetupSiege(ServerLevel serverlevel) {
-        Iterator iterator = serverlevel.players().iterator();
+    private boolean tryToSetupSiege(ServerLevel level) {
+        Iterator iterator = level.players().iterator();
 
         while (iterator.hasNext()) {
-            Player player = (Player) iterator.next();
+            Player entityhuman = (Player) iterator.next();
 
-            if (!player.isSpectator()) {
-                BlockPos blockpos = player.blockPosition();
+            if (!entityhuman.isSpectator()) {
+                BlockPos blockposition = entityhuman.blockPosition();
 
-                if (serverlevel.isVillage(blockpos) && !serverlevel.getBiome(blockpos).is(BiomeTags.WITHOUT_ZOMBIE_SIEGES)) {
+                if (level.isVillage(blockposition) && !level.getBiome(blockposition).is(BiomeTags.WITHOUT_ZOMBIE_SIEGES)) {
                     for (int i = 0; i < 10; ++i) {
-                        float f = serverlevel.random.nextFloat() * 6.2831855F;
+                        float f = level.random.nextFloat() * 6.2831855F;
 
-                        this.spawnX = blockpos.getX() + Mth.floor(Mth.cos(f) * 32.0F);
-                        this.spawnY = blockpos.getY();
-                        this.spawnZ = blockpos.getZ() + Mth.floor(Mth.sin(f) * 32.0F);
-                        if (this.findRandomSpawnPos(serverlevel, new BlockPos(this.spawnX, this.spawnY, this.spawnZ)) != null) {
+                        this.spawnX = blockposition.getX() + Mth.floor(Mth.cos(f) * 32.0F);
+                        this.spawnY = blockposition.getY();
+                        this.spawnZ = blockposition.getZ() + Mth.floor(Mth.sin(f) * 32.0F);
+                        if (this.findRandomSpawnPos(level, new BlockPos(this.spawnX, this.spawnY, this.spawnZ)) != null) {
                             this.nextSpawnTime = 0;
                             this.zombiesToSpawn = 20;
                             break;
@@ -108,35 +107,35 @@
         return false;
     }
 
-    private void trySpawn(ServerLevel serverlevel) {
-        Vec3 vec3 = this.findRandomSpawnPos(serverlevel, new BlockPos(this.spawnX, this.spawnY, this.spawnZ));
+    private void trySpawn(ServerLevel level) {
+        Vec3 vec3d = this.findRandomSpawnPos(level, new BlockPos(this.spawnX, this.spawnY, this.spawnZ));
 
-        if (vec3 != null) {
-            Zombie zombie;
+        if (vec3d != null) {
+            Zombie entityzombie;
 
             try {
-                zombie = new Zombie(serverlevel);
-                zombie.finalizeSpawn(serverlevel, serverlevel.getCurrentDifficultyAt(zombie.blockPosition()), MobSpawnType.EVENT, (SpawnGroupData) null, (CompoundTag) null);
+                entityzombie = new Zombie(level);
+                entityzombie.finalizeSpawn(level, level.getCurrentDifficultyAt(entityzombie.blockPosition()), EnumMobSpawn.EVENT, (GroupDataEntity) null, (CompoundTag) null);
             } catch (Exception exception) {
-                VillageSiege.LOGGER.warn("Failed to create zombie for village siege at {}", vec3, exception);
+                VillageSiege.LOGGER.warn("Failed to create zombie for village siege at {}", vec3d, exception);
                 return;
             }
 
-            zombie.moveTo(vec3.x, vec3.y, vec3.z, serverlevel.random.nextFloat() * 360.0F, 0.0F);
-            serverlevel.addFreshEntityWithPassengers(zombie);
+            entityzombie.moveTo(vec3d.x, vec3d.y, vec3d.z, level.random.nextFloat() * 360.0F, 0.0F);
+            level.addFreshEntityWithPassengers(entityzombie, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.VILLAGE_INVASION); // CraftBukkit
         }
     }
 
     @Nullable
-    private Vec3 findRandomSpawnPos(ServerLevel serverlevel, BlockPos blockpos) {
+    private Vec3 findRandomSpawnPos(ServerLevel level, BlockPos pos) {
         for (int i = 0; i < 10; ++i) {
-            int j = blockpos.getX() + serverlevel.random.nextInt(16) - 8;
-            int k = blockpos.getZ() + serverlevel.random.nextInt(16) - 8;
-            int l = serverlevel.getHeight(Heightmap.Types.WORLD_SURFACE, j, k);
-            BlockPos blockpos1 = new BlockPos(j, l, k);
+            int j = pos.getX() + level.random.nextInt(16) - 8;
+            int k = pos.getZ() + level.random.nextInt(16) - 8;
+            int l = level.getHeight(Heightmap.Types.WORLD_SURFACE, j, k);
+            BlockPos blockposition1 = new BlockPos(j, l, k);
 
-            if (serverlevel.isVillage(blockpos1) && Monster.checkMonsterSpawnRules(EntityType.ZOMBIE, serverlevel, MobSpawnType.EVENT, blockpos1, serverlevel.random)) {
-                return Vec3.atBottomCenterOf(blockpos1);
+            if (level.isVillage(blockposition1) && Monster.checkMonsterSpawnRules(EntityType.ZOMBIE, level, EnumMobSpawn.EVENT, blockposition1, level.random)) {
+                return Vec3.atBottomCenterOf(blockposition1);
             }
         }
 
