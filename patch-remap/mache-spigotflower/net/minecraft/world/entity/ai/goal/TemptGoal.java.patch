--- a/net/minecraft/world/entity/ai/goal/TemptGoal.java
+++ b/net/minecraft/world/entity/ai/goal/TemptGoal.java
@@ -6,8 +6,13 @@
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.PathfinderMob;
 import net.minecraft.world.entity.ai.targeting.TargetingConditions;
-import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.crafting.Ingredient;
+// CraftBukkit start
+import org.bukkit.craftbukkit.entity.CraftLivingEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.EntityTargetLivingEntityEvent;
+// CraftBukkit end
 
 public class TemptGoal extends Goal {
 
@@ -21,39 +26,46 @@
     private double pRotX;
     private double pRotY;
     @Nullable
-    protected Player player;
+    protected LivingEntity player; // CraftBukkit
     private int calmDown;
     private boolean isRunning;
     private final Ingredient items;
     private final boolean canScare;
 
-    public TemptGoal(PathfinderMob pathfindermob, double d0, Ingredient ingredient, boolean flag) {
-        this.mob = pathfindermob;
-        this.speedModifier = d0;
-        this.items = ingredient;
-        this.canScare = flag;
-        this.setFlags(EnumSet.of(Goal.Flag.MOVE, Goal.Flag.LOOK));
+    public TemptGoal(PathfinderMob mob, double speedModifier, Ingredient recipeitemstack, boolean items) {
+        this.mob = mob;
+        this.speedModifier = speedModifier;
+        this.items = recipeitemstack;
+        this.canScare = items;
+        this.setFlags(EnumSet.of(Goal.Type.MOVE, Goal.Type.LOOK));
         this.targetingConditions = TemptGoal.TEMP_TARGETING.copy().selector(this::shouldFollow);
     }
 
     @Override
-    @Override
     public boolean canUse() {
         if (this.calmDown > 0) {
             --this.calmDown;
             return false;
         } else {
             this.player = this.mob.level().getNearestPlayer(this.targetingConditions, this.mob);
+            // CraftBukkit start
+            if (this.player != null) {
+                EntityTargetLivingEntityEvent event = CraftEventFactory.callEntityTargetLivingEvent(this.mob, this.player, EntityTargetEvent.TargetReason.TEMPT);
+                if (event.isCancelled()) {
+                    return false;
+                }
+                this.player = (event.getTarget() == null) ? null : ((CraftLivingEntity) event.getTarget()).getHandle();
+            }
+            // CraftBukkit end
             return this.player != null;
         }
     }
 
-    private boolean shouldFollow(LivingEntity livingentity) {
-        return this.items.test(livingentity.getMainHandItem()) || this.items.test(livingentity.getOffhandItem());
+    private boolean shouldFollow(LivingEntity entity) {
+        return this.items.test(entity.getMainHandItem()) || this.items.test(entity.getOffhandItem());
     }
 
     @Override
-    @Override
     public boolean canContinueToUse() {
         if (this.canScare()) {
             if (this.mob.distanceToSqr((Entity) this.player) < 36.0D) {
@@ -82,7 +94,6 @@
     }
 
     @Override
-    @Override
     public void start() {
         this.px = this.player.getX();
         this.py = this.player.getY();
@@ -91,7 +102,6 @@
     }
 
     @Override
-    @Override
     public void stop() {
         this.player = null;
         this.mob.getNavigation().stop();
@@ -100,7 +110,6 @@
     }
 
     @Override
-    @Override
     public void tick() {
         this.mob.getLookControl().setLookAt(this.player, (float) (this.mob.getMaxHeadYRot() + 20), (float) this.mob.getMaxHeadXRot());
         if (this.mob.distanceToSqr((Entity) this.player) < 6.25D) {
