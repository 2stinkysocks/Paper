--- a/net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal.java
+++ b/net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal.java
@@ -9,42 +9,38 @@
 
     private final TamableAnimal mob;
 
-    public SitWhenOrderedToGoal(TamableAnimal tamableanimal) {
-        this.mob = tamableanimal;
-        this.setFlags(EnumSet.of(Goal.Flag.JUMP, Goal.Flag.MOVE));
+    public SitWhenOrderedToGoal(TamableAnimal mob) {
+        this.mob = mob;
+        this.setFlags(EnumSet.of(Goal.Type.JUMP, Goal.Type.MOVE));
     }
 
     @Override
-    @Override
     public boolean canContinueToUse() {
         return this.mob.isOrderedToSit();
     }
 
     @Override
-    @Override
     public boolean canUse() {
         if (!this.mob.isTame()) {
-            return false;
+            return this.mob.isOrderedToSit() && this.mob.getTarget() == null; // CraftBukkit - Allow sitting for wild animals
         } else if (this.mob.isInWaterOrBubble()) {
             return false;
         } else if (!this.mob.onGround()) {
             return false;
         } else {
-            LivingEntity livingentity = this.mob.getOwner();
+            LivingEntity entityliving = this.mob.getOwner();
 
-            return livingentity == null ? true : (this.mob.distanceToSqr((Entity) livingentity) < 144.0D && livingentity.getLastHurtByMob() != null ? false : this.mob.isOrderedToSit());
+            return entityliving == null ? true : (this.mob.distanceToSqr((Entity) entityliving) < 144.0D && entityliving.getLastHurtByMob() != null ? false : this.mob.isOrderedToSit());
         }
     }
 
     @Override
-    @Override
     public void start() {
         this.mob.getNavigation().stop();
         this.mob.setInSittingPose(true);
     }
 
     @Override
-    @Override
     public void stop() {
         this.mob.setInSittingPose(false);
     }
