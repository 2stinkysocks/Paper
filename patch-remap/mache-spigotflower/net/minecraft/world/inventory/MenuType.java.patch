--- a/net/minecraft/world/inventory/MenuType.java
+++ b/net/minecraft/world/inventory/MenuType.java
@@ -27,8 +27,8 @@
     public static final MenuType<FurnaceMenu> FURNACE = register("furnace", FurnaceMenu::new);
     public static final MenuType<GrindstoneMenu> GRINDSTONE = register("grindstone", GrindstoneMenu::new);
     public static final MenuType<HopperMenu> HOPPER = register("hopper", HopperMenu::new);
-    public static final MenuType<LecternMenu> LECTERN = register("lectern", (i, inventory) -> {
-        return new LecternMenu(i);
+    public static final MenuType<LecternMenu> LECTERN = register("lectern", (i, playerinventory) -> {
+        return new LecternMenu(i, playerinventory); // CraftBukkit
     });
     public static final MenuType<LoomMenu> LOOM = register("loom", LoomMenu::new);
     public static final MenuType<MerchantMenu> MERCHANT = register("merchant", MerchantMenu::new);
@@ -40,25 +40,24 @@
     private final FeatureFlagSet requiredFeatures;
     private final MenuType.MenuSupplier<T> constructor;
 
-    private static <T extends AbstractContainerMenu> MenuType<T> register(String s, MenuType.MenuSupplier<T> menutype_menusupplier) {
-        return (MenuType) Registry.register(BuiltInRegistries.MENU, s, new MenuType<>(menutype_menusupplier, FeatureFlags.VANILLA_SET));
+    private static <T extends AbstractContainerMenu> MenuType<T> register(String key, MenuType.MenuSupplier<T> factory) {
+        return (MenuType) Registry.register(BuiltInRegistries.MENU, key, new MenuType<>(factory, FeatureFlags.VANILLA_SET));
     }
 
-    private static <T extends AbstractContainerMenu> MenuType<T> register(String s, MenuType.MenuSupplier<T> menutype_menusupplier, FeatureFlag... afeatureflag) {
-        return (MenuType) Registry.register(BuiltInRegistries.MENU, s, new MenuType<>(menutype_menusupplier, FeatureFlags.REGISTRY.subset(afeatureflag)));
+    private static <T extends AbstractContainerMenu> MenuType<T> register(String key, MenuType.MenuSupplier<T> factory, FeatureFlag... requiredFeatures) {
+        return (MenuType) Registry.register(BuiltInRegistries.MENU, key, new MenuType<>(factory, FeatureFlags.REGISTRY.subset(requiredFeatures)));
     }
 
-    private MenuType(MenuType.MenuSupplier<T> menutype_menusupplier, FeatureFlagSet featureflagset) {
-        this.constructor = menutype_menusupplier;
-        this.requiredFeatures = featureflagset;
+    private MenuType(MenuType.MenuSupplier<T> constructor, FeatureFlagSet requiredFeatures) {
+        this.constructor = constructor;
+        this.requiredFeatures = requiredFeatures;
     }
 
-    public T create(int i, Inventory inventory) {
-        return this.constructor.create(i, inventory);
+    public T create(int containerId, Inventory playerInventory) {
+        return this.constructor.create(containerId, playerInventory);
     }
 
     @Override
-    @Override
     public FeatureFlagSet requiredFeatures() {
         return this.requiredFeatures;
     }
