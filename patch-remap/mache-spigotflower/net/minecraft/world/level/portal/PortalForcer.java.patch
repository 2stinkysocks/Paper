--- a/net/minecraft/world/level/portal/PortalForcer.java
+++ b/net/minecraft/world/level/portal/PortalForcer.java
@@ -15,7 +15,7 @@
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.NetherPortalBlock;
-import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.block.state.IBlockData;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.border.WorldBorder;
 import net.minecraft.world.level.levelgen.Heightmap;
@@ -37,67 +37,79 @@
     private static final int NOTHING_FOUND = -1;
     private final ServerLevel level;
 
-    public PortalForcer(ServerLevel serverlevel) {
-        this.level = serverlevel;
+    public PortalForcer(ServerLevel level) {
+        this.level = level;
     }
 
-    public Optional<BlockUtil.FoundRectangle> findPortalAround(BlockPos blockpos, boolean flag, WorldBorder worldborder) {
-        PoiManager poimanager = this.level.getPoiManager();
-        int i = flag ? 16 : 128;
+    public Optional<BlockUtil.FoundRectangle> findPortalAround(BlockPos pos, boolean isNether, WorldBorder worldBorder) {
+        // CraftBukkit start
+        return findPortalAround(pos, worldBorder, isNether ? 16 : 128); // Search Radius
+    }
 
-        poimanager.ensureLoadedAndValid(this.level, blockpos, i);
-        Optional<PoiRecord> optional = poimanager.getInSquare((holder) -> {
+    public Optional<BlockUtil.FoundRectangle> findPortalAround(BlockPos blockposition, WorldBorder worldborder, int i) {
+        PoiManager villageplace = this.level.getPoiManager();
+        // int i = flag ? 16 : 128;
+        // CraftBukkit end
+
+        villageplace.ensureLoadedAndValid(this.level, blockposition, i);
+        Optional<PoiRecord> optional = villageplace.getInSquare((holder) -> {
             return holder.is(PoiTypes.NETHER_PORTAL);
-        }, blockpos, i, PoiManager.Occupancy.ANY).filter((poirecord) -> {
-            return worldborder.isWithinBounds(poirecord.getPos());
-        }).sorted(Comparator.comparingDouble((poirecord) -> {
-            return poirecord.getPos().distSqr(blockpos);
-        }).thenComparingInt((poirecord) -> {
-            return poirecord.getPos().getY();
-        })).filter((poirecord) -> {
-            return this.level.getBlockState(poirecord.getPos()).hasProperty(BlockStateProperties.HORIZONTAL_AXIS);
+        }, blockposition, i, PoiManager.Occupancy.ANY).filter((villageplacerecord) -> {
+            return worldborder.isWithinBounds(villageplacerecord.getPos());
+        }).sorted(Comparator.comparingDouble((PoiRecord villageplacerecord) -> { // CraftBukkit - decompile error
+            return villageplacerecord.getPos().distSqr(blockposition);
+        }).thenComparingInt((villageplacerecord) -> {
+            return villageplacerecord.getPos().getY();
+        })).filter((villageplacerecord) -> {
+            return this.level.getBlockState(villageplacerecord.getPos()).hasProperty(BlockStateProperties.HORIZONTAL_AXIS);
         }).findFirst();
 
-        return optional.map((poirecord) -> {
-            BlockPos blockpos1 = poirecord.getPos();
+        return optional.map((villageplacerecord) -> {
+            BlockPos blockposition1 = villageplacerecord.getPos();
 
-            this.level.getChunkSource().addRegionTicket(TicketType.PORTAL, new ChunkPos(blockpos1), 3, blockpos1);
-            BlockState blockstate = this.level.getBlockState(blockpos1);
+            this.level.getChunkSource().addRegionTicket(TicketType.PORTAL, new ChunkPos(blockposition1), 3, blockposition1);
+            IBlockData iblockdata = this.level.getBlockState(blockposition1);
 
-            return BlockUtil.getLargestRectangleAround(blockpos1, (Direction.Axis) blockstate.getValue(BlockStateProperties.HORIZONTAL_AXIS), 21, Direction.Axis.Y, 21, (blockpos2) -> {
-                return this.level.getBlockState(blockpos2) == blockstate;
+            return BlockUtil.getLargestRectangleAround(blockposition1, (Direction.Axis) iblockdata.getValue(BlockStateProperties.HORIZONTAL_AXIS), 21, Direction.Axis.Y, 21, (blockposition2) -> {
+                return this.level.getBlockState(blockposition2) == iblockdata;
             });
         });
     }
 
-    public Optional<BlockUtil.FoundRectangle> createPortal(BlockPos blockpos, Direction.Axis direction_axis) {
-        Direction direction = Direction.get(Direction.AxisDirection.POSITIVE, direction_axis);
+    public Optional<BlockUtil.FoundRectangle> createPortal(BlockPos pos, Direction.Axis axis) {
+        // CraftBukkit start
+        return this.createPortal(pos, axis, null, 16);
+    }
+
+    public Optional<BlockUtil.FoundRectangle> createPortal(BlockPos blockposition, Direction.Axis enumdirection_enumaxis, net.minecraft.world.entity.Entity entity, int createRadius) {
+        // CraftBukkit end
+        Direction enumdirection = Direction.get(Direction.AxisDirection.POSITIVE, enumdirection_enumaxis);
         double d0 = -1.0D;
-        BlockPos blockpos1 = null;
+        BlockPos blockposition1 = null;
         double d1 = -1.0D;
-        BlockPos blockpos2 = null;
+        BlockPos blockposition2 = null;
         WorldBorder worldborder = this.level.getWorldBorder();
         int i = Math.min(this.level.getMaxBuildHeight(), this.level.getMinBuildHeight() + this.level.getLogicalHeight()) - 1;
-        BlockPos.MutableBlockPos blockpos_mutableblockpos = blockpos.mutable();
-        Iterator iterator = BlockPos.spiralAround(blockpos, 16, Direction.EAST, Direction.SOUTH).iterator();
+        BlockPos.MutableBlockPos blockposition_mutableblockposition = blockposition.mutable();
+        Iterator iterator = BlockPos.spiralAround(blockposition, createRadius, Direction.EAST, Direction.SOUTH).iterator(); // CraftBukkit
 
         int j;
         int k;
         int l;
 
         while (iterator.hasNext()) {
-            BlockPos.MutableBlockPos blockpos_mutableblockpos1 = (BlockPos.MutableBlockPos) iterator.next();
+            BlockPos.MutableBlockPos blockposition_mutableblockposition1 = (BlockPos.MutableBlockPos) iterator.next();
 
-            j = Math.min(i, this.level.getHeight(Heightmap.Types.MOTION_BLOCKING, blockpos_mutableblockpos1.getX(), blockpos_mutableblockpos1.getZ()));
+            j = Math.min(i, this.level.getHeight(Heightmap.Types.MOTION_BLOCKING, blockposition_mutableblockposition1.getX(), blockposition_mutableblockposition1.getZ()));
             boolean flag = true;
 
-            if (worldborder.isWithinBounds((BlockPos) blockpos_mutableblockpos1) && worldborder.isWithinBounds((BlockPos) blockpos_mutableblockpos1.move(direction, 1))) {
-                blockpos_mutableblockpos1.move(direction.getOpposite(), 1);
+            if (worldborder.isWithinBounds((BlockPos) blockposition_mutableblockposition1) && worldborder.isWithinBounds((BlockPos) blockposition_mutableblockposition1.move(enumdirection, 1))) {
+                blockposition_mutableblockposition1.move(enumdirection.getOpposite(), 1);
 
                 for (k = j; k >= this.level.getMinBuildHeight(); --k) {
-                    blockpos_mutableblockpos1.setY(k);
-                    if (this.canPortalReplaceBlock(blockpos_mutableblockpos1)) {
-                        for (l = k; k > this.level.getMinBuildHeight() && this.canPortalReplaceBlock(blockpos_mutableblockpos1.move(Direction.DOWN)); --k) {
+                    blockposition_mutableblockposition1.setY(k);
+                    if (this.canPortalReplaceBlock(blockposition_mutableblockposition1)) {
+                        for (l = k; k > this.level.getMinBuildHeight() && this.canPortalReplaceBlock(blockposition_mutableblockposition1.move(Direction.DOWN)); --k) {
                             ;
                         }
 
@@ -105,18 +117,18 @@
                             int i1 = l - k;
 
                             if (i1 <= 0 || i1 >= 3) {
-                                blockpos_mutableblockpos1.setY(k);
-                                if (this.canHostFrame(blockpos_mutableblockpos1, blockpos_mutableblockpos, direction, 0)) {
-                                    double d2 = blockpos.distSqr(blockpos_mutableblockpos1);
+                                blockposition_mutableblockposition1.setY(k);
+                                if (this.canHostFrame(blockposition_mutableblockposition1, blockposition_mutableblockposition, enumdirection, 0)) {
+                                    double d2 = blockposition.distSqr(blockposition_mutableblockposition1);
 
-                                    if (this.canHostFrame(blockpos_mutableblockpos1, blockpos_mutableblockpos, direction, -1) && this.canHostFrame(blockpos_mutableblockpos1, blockpos_mutableblockpos, direction, 1) && (d0 == -1.0D || d0 > d2)) {
+                                    if (this.canHostFrame(blockposition_mutableblockposition1, blockposition_mutableblockposition, enumdirection, -1) && this.canHostFrame(blockposition_mutableblockposition1, blockposition_mutableblockposition, enumdirection, 1) && (d0 == -1.0D || d0 > d2)) {
                                         d0 = d2;
-                                        blockpos1 = blockpos_mutableblockpos1.immutable();
+                                        blockposition1 = blockposition_mutableblockposition1.immutable();
                                     }
 
                                     if (d0 == -1.0D && (d1 == -1.0D || d1 > d2)) {
                                         d1 = d2;
-                                        blockpos2 = blockpos_mutableblockpos1.immutable();
+                                        blockposition2 = blockposition_mutableblockposition1.immutable();
                                     }
                                 }
                             }
@@ -127,13 +139,14 @@
         }
 
         if (d0 == -1.0D && d1 != -1.0D) {
-            blockpos1 = blockpos2;
+            blockposition1 = blockposition2;
             d0 = d1;
         }
 
         int j1;
         int k1;
 
+        org.bukkit.craftbukkit.util.BlockStateListPopulator blockList = new org.bukkit.craftbukkit.util.BlockStateListPopulator(this.level); // CraftBukkit - Use BlockStateListPopulator
         if (d0 == -1.0D) {
             j1 = Math.max(this.level.getMinBuildHeight() - -1, 70);
             k1 = i - 9;
@@ -141,20 +154,20 @@
                 return Optional.empty();
             }
 
-            blockpos1 = (new BlockPos(blockpos.getX(), Mth.clamp(blockpos.getY(), j1, k1), blockpos.getZ())).immutable();
-            Direction direction1 = direction.getClockWise();
+            blockposition1 = (new BlockPos(blockposition.getX(), Mth.clamp(blockposition.getY(), j1, k1), blockposition.getZ())).immutable();
+            Direction enumdirection1 = enumdirection.getClockWise();
 
-            if (!worldborder.isWithinBounds(blockpos1)) {
+            if (!worldborder.isWithinBounds(blockposition1)) {
                 return Optional.empty();
             }
 
             for (int l1 = -1; l1 < 2; ++l1) {
                 for (k = 0; k < 2; ++k) {
                     for (l = -1; l < 3; ++l) {
-                        BlockState blockstate = l < 0 ? Blocks.OBSIDIAN.defaultBlockState() : Blocks.AIR.defaultBlockState();
+                        IBlockData iblockdata = l < 0 ? Blocks.OBSIDIAN.defaultBlockState() : Blocks.AIR.defaultBlockState();
 
-                        blockpos_mutableblockpos.setWithOffset(blockpos1, k * direction.getStepX() + l1 * direction1.getStepX(), l, k * direction.getStepZ() + l1 * direction1.getStepZ());
-                        this.level.setBlockAndUpdate(blockpos_mutableblockpos, blockstate);
+                        blockposition_mutableblockposition.setWithOffset(blockposition1, k * enumdirection.getStepX() + l1 * enumdirection1.getStepX(), l, k * enumdirection.getStepZ() + l1 * enumdirection1.getStepZ());
+                        blockList.setBlock(blockposition_mutableblockposition, iblockdata, 3); // CraftBukkit
                     }
                 }
             }
@@ -163,41 +176,51 @@
         for (j1 = -1; j1 < 3; ++j1) {
             for (k1 = -1; k1 < 4; ++k1) {
                 if (j1 == -1 || j1 == 2 || k1 == -1 || k1 == 3) {
-                    blockpos_mutableblockpos.setWithOffset(blockpos1, j1 * direction.getStepX(), k1, j1 * direction.getStepZ());
-                    this.level.setBlock(blockpos_mutableblockpos, Blocks.OBSIDIAN.defaultBlockState(), 3);
+                    blockposition_mutableblockposition.setWithOffset(blockposition1, j1 * enumdirection.getStepX(), k1, j1 * enumdirection.getStepZ());
+                    blockList.setBlock(blockposition_mutableblockposition, Blocks.OBSIDIAN.defaultBlockState(), 3); // CraftBukkit
                 }
             }
         }
 
-        BlockState blockstate1 = (BlockState) Blocks.NETHER_PORTAL.defaultBlockState().setValue(NetherPortalBlock.AXIS, direction_axis);
+        IBlockData iblockdata1 = (IBlockData) Blocks.NETHER_PORTAL.defaultBlockState().setValue(NetherPortalBlock.AXIS, enumdirection_enumaxis);
 
         for (k1 = 0; k1 < 2; ++k1) {
             for (j = 0; j < 3; ++j) {
-                blockpos_mutableblockpos.setWithOffset(blockpos1, k1 * direction.getStepX(), j, k1 * direction.getStepZ());
-                this.level.setBlock(blockpos_mutableblockpos, blockstate1, 18);
+                blockposition_mutableblockposition.setWithOffset(blockposition1, k1 * enumdirection.getStepX(), j, k1 * enumdirection.getStepZ());
+                blockList.setBlock(blockposition_mutableblockposition, iblockdata1, 18); // CraftBukkit
             }
         }
 
-        return Optional.of(new BlockUtil.FoundRectangle(blockpos1.immutable(), 2, 3));
+        // CraftBukkit start
+        org.bukkit.World bworld = this.level.getWorld();
+        org.bukkit.event.world.PortalCreateEvent event = new org.bukkit.event.world.PortalCreateEvent((java.util.List<org.bukkit.block.BlockState>) (java.util.List) blockList.getList(), bworld, (entity == null) ? null : entity.getBukkitEntity(), org.bukkit.event.world.PortalCreateEvent.CreateReason.NETHER_PAIR);
+
+        this.level.getCraftServer().getPluginManager().callEvent(event);
+        if (event.isCancelled()) {
+            return Optional.empty();
+        }
+        blockList.updateList();
+        // CraftBukkit end
+        return Optional.of(new BlockUtil.FoundRectangle(blockposition1.immutable(), 2, 3));
     }
 
-    private boolean canPortalReplaceBlock(BlockPos.MutableBlockPos blockpos_mutableblockpos) {
-        BlockState blockstate = this.level.getBlockState(blockpos_mutableblockpos);
+    private boolean canPortalReplaceBlock(BlockPos.MutableBlockPos pos) {
+        IBlockData iblockdata = this.level.getBlockState(pos);
 
-        return blockstate.canBeReplaced() && blockstate.getFluidState().isEmpty();
+        return iblockdata.canBeReplaced() && iblockdata.getFluidState().isEmpty();
     }
 
-    private boolean canHostFrame(BlockPos blockpos, BlockPos.MutableBlockPos blockpos_mutableblockpos, Direction direction, int i) {
-        Direction direction1 = direction.getClockWise();
+    private boolean canHostFrame(BlockPos originalPos, BlockPos.MutableBlockPos offsetPos, Direction direction, int offsetScale) {
+        Direction enumdirection1 = direction.getClockWise();
 
         for (int j = -1; j < 3; ++j) {
             for (int k = -1; k < 4; ++k) {
-                blockpos_mutableblockpos.setWithOffset(blockpos, direction.getStepX() * j + direction1.getStepX() * i, k, direction.getStepZ() * j + direction1.getStepZ() * i);
-                if (k < 0 && !this.level.getBlockState(blockpos_mutableblockpos).isSolid()) {
+                offsetPos.setWithOffset(originalPos, direction.getStepX() * j + enumdirection1.getStepX() * offsetScale, k, direction.getStepZ() * j + enumdirection1.getStepZ() * offsetScale);
+                if (k < 0 && !this.level.getBlockState(offsetPos).isSolid()) {
                     return false;
                 }
 
-                if (k >= 0 && !this.canPortalReplaceBlock(blockpos_mutableblockpos)) {
+                if (k >= 0 && !this.canPortalReplaceBlock(offsetPos)) {
                     return false;
                 }
             }
