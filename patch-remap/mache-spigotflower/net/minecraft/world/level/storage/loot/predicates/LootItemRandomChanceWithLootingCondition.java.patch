--- a/net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition.java
+++ b/net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition.java
@@ -18,32 +18,34 @@
     });
 
     @Override
-    @Override
     public LootItemConditionType getType() {
         return LootItemConditions.RANDOM_CHANCE_WITH_LOOTING;
     }
 
     @Override
-    @Override
     public Set<LootContextParam<?>> getReferencedContextParams() {
         return ImmutableSet.of(LootContextParams.KILLER_ENTITY);
     }
 
-    @Override
-    public boolean test(LootContext lootcontext) {
-        Entity entity = (Entity) lootcontext.getParamOrNull(LootContextParams.KILLER_ENTITY);
+    public boolean test(LootContext context) {
+        Entity entity = (Entity) context.getParamOrNull(LootContextParams.KILLER_ENTITY);
         int i = 0;
 
         if (entity instanceof LivingEntity) {
             i = EnchantmentHelper.getMobLooting((LivingEntity) entity);
         }
+        // CraftBukkit start - only use lootingModifier if set by Bukkit
+        if (context.hasParam(LootContextParams.LOOTING_MOD)) {
+            i = context.getParamOrNull(LootContextParams.LOOTING_MOD);
+        }
+        // CraftBukkit end
 
-        return lootcontext.getRandom().nextFloat() < this.percent + (float) i * this.lootingMultiplier;
+        return context.getRandom().nextFloat() < this.percent + (float) i * this.lootingMultiplier;
     }
 
-    public static LootItemCondition.Builder randomChanceAndLootingBoost(float f, float f1) {
+    public static LootItemCondition.Builder randomChanceAndLootingBoost(float chance, float lootingMultiplier) {
         return () -> {
-            return new LootItemRandomChanceWithLootingCondition(f, f1);
+            return new LootItemRandomChanceWithLootingCondition(chance, lootingMultiplier);
         };
     }
 }
