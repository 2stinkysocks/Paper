--- a/net/minecraft/world/level/block/BambooSaplingBlock.java
+++ b/net/minecraft/world/level/block/BambooSaplingBlock.java
@@ -15,7 +15,7 @@
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.block.state.BlockBehaviour;
-import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.block.state.IBlockData;
 import net.minecraft.world.level.block.state.properties.BambooLeaves;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.CollisionContext;
@@ -28,83 +28,73 @@
     protected static final VoxelShape SAPLING_SHAPE = Block.box(4.0D, 0.0D, 4.0D, 12.0D, 12.0D, 12.0D);
 
     @Override
-    @Override
     public MapCodec<BambooSaplingBlock> codec() {
         return BambooSaplingBlock.CODEC;
     }
 
-    public BambooSaplingBlock(BlockBehaviour.Properties blockbehaviour_properties) {
-        super(blockbehaviour_properties);
+    public BambooSaplingBlock(BlockBehaviour.Properties properties) {
+        super(properties);
     }
 
     @Override
-    @Override
-    public VoxelShape getShape(BlockState blockstate, BlockGetter blockgetter, BlockPos blockpos, CollisionContext collisioncontext) {
-        Vec3 vec3 = blockstate.getOffset(blockgetter, blockpos);
+    public VoxelShape getShape(IBlockData state, BlockGetter level, BlockPos pos, CollisionContext context) {
+        Vec3 vec3d = state.getOffset(level, pos);
 
-        return BambooSaplingBlock.SAPLING_SHAPE.move(vec3.x, vec3.y, vec3.z);
+        return BambooSaplingBlock.SAPLING_SHAPE.move(vec3d.x, vec3d.y, vec3d.z);
     }
 
     @Override
-    @Override
-    public void randomTick(BlockState blockstate, ServerLevel serverlevel, BlockPos blockpos, RandomSource randomsource) {
-        if (randomsource.nextInt(3) == 0 && serverlevel.isEmptyBlock(blockpos.above()) && serverlevel.getRawBrightness(blockpos.above(), 0) >= 9) {
-            this.growBamboo(serverlevel, blockpos);
+    public void randomTick(IBlockData state, ServerLevel level, BlockPos pos, RandomSource random) {
+        if (random.nextInt(3) == 0 && level.isEmptyBlock(pos.above()) && level.getRawBrightness(pos.above(), 0) >= 9) {
+            this.growBamboo(level, pos);
         }
 
     }
 
     @Override
-    @Override
-    public boolean canSurvive(BlockState blockstate, LevelReader levelreader, BlockPos blockpos) {
-        return levelreader.getBlockState(blockpos.below()).is(BlockTags.BAMBOO_PLANTABLE_ON);
+    public boolean canSurvive(IBlockData state, LevelReader level, BlockPos pos) {
+        return level.getBlockState(pos.below()).is(BlockTags.BAMBOO_PLANTABLE_ON);
     }
 
     @Override
-    @Override
-    public BlockState updateShape(BlockState blockstate, Direction direction, BlockState blockstate1, LevelAccessor levelaccessor, BlockPos blockpos, BlockPos blockpos1) {
-        if (!blockstate.canSurvive(levelaccessor, blockpos)) {
+    public IBlockData updateShape(IBlockData state, Direction facing, IBlockData facingState, LevelAccessor level, BlockPos currentPos, BlockPos facingPos) {
+        if (!state.canSurvive(level, currentPos)) {
             return Blocks.AIR.defaultBlockState();
         } else {
-            if (direction == Direction.UP && blockstate1.is(Blocks.BAMBOO)) {
-                levelaccessor.setBlock(blockpos, Blocks.BAMBOO.defaultBlockState(), 2);
+            if (facing == Direction.UP && facingState.is(Blocks.BAMBOO)) {
+                level.setBlock(currentPos, Blocks.BAMBOO.defaultBlockState(), 2);
             }
 
-            return super.updateShape(blockstate, direction, blockstate1, levelaccessor, blockpos, blockpos1);
+            return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
         }
     }
 
     @Override
-    @Override
-    public ItemStack getCloneItemStack(LevelReader levelreader, BlockPos blockpos, BlockState blockstate) {
+    public ItemStack getCloneItemStack(LevelReader iworldreader, BlockPos blockposition, IBlockData iblockdata) {
         return new ItemStack(Items.BAMBOO);
     }
 
     @Override
-    @Override
-    public boolean isValidBonemealTarget(LevelReader levelreader, BlockPos blockpos, BlockState blockstate) {
-        return levelreader.getBlockState(blockpos.above()).isAir();
+    public boolean isValidBonemealTarget(LevelReader iworldreader, BlockPos blockposition, IBlockData iblockdata) {
+        return iworldreader.getBlockState(blockposition.above()).isAir();
     }
 
     @Override
-    @Override
-    public boolean isBonemealSuccess(Level level, RandomSource randomsource, BlockPos blockpos, BlockState blockstate) {
+    public boolean isBonemealSuccess(Level level, RandomSource random, BlockPos pos, IBlockData state) {
         return true;
     }
 
     @Override
-    @Override
-    public void performBonemeal(ServerLevel serverlevel, RandomSource randomsource, BlockPos blockpos, BlockState blockstate) {
-        this.growBamboo(serverlevel, blockpos);
+    public void performBonemeal(ServerLevel level, RandomSource random, BlockPos pos, IBlockData state) {
+        this.growBamboo(level, pos);
     }
 
     @Override
-    @Override
-    public float getDestroyProgress(BlockState blockstate, Player player, BlockGetter blockgetter, BlockPos blockpos) {
-        return player.getMainHandItem().getItem() instanceof SwordItem ? 1.0F : super.getDestroyProgress(blockstate, player, blockgetter, blockpos);
+    public float getDestroyProgress(IBlockData state, Player player, BlockGetter level, BlockPos pos) {
+        return player.getMainHandItem().getItem() instanceof SwordItem ? 1.0F : super.getDestroyProgress(state, player, level, pos);
     }
 
-    protected void growBamboo(Level level, BlockPos blockpos) {
-        level.setBlock(blockpos.above(), (BlockState) Blocks.BAMBOO.defaultBlockState().setValue(BambooStalkBlock.LEAVES, BambooLeaves.SMALL), 3);
+    protected void growBamboo(Level level, BlockPos state) {
+        org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockSpreadEvent(level, state, state.above(), (IBlockData) Blocks.BAMBOO.defaultBlockState().setValue(BambooStalkBlock.LEAVES, BambooLeaves.SMALL), 3); // CraftBukkit - BlockSpreadEvent
     }
 }
