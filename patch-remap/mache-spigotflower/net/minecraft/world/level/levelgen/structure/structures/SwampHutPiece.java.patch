--- a/net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece.java
+++ b/net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece.java
@@ -5,8 +5,8 @@
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.util.RandomSource;
 import net.minecraft.world.entity.EntityType;
-import net.minecraft.world.entity.MobSpawnType;
-import net.minecraft.world.entity.SpawnGroupData;
+import net.minecraft.world.entity.EnumMobSpawn;
+import net.minecraft.world.entity.GroupDataEntity;
 import net.minecraft.world.entity.animal.Cat;
 import net.minecraft.world.entity.monster.Witch;
 import net.minecraft.world.level.ChunkPos;
@@ -15,7 +15,7 @@
 import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.StairBlock;
-import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.block.state.IBlockData;
 import net.minecraft.world.level.block.state.properties.StairsShape;
 import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.structure.BoundingBox;
@@ -28,102 +28,100 @@
     private boolean spawnedWitch;
     private boolean spawnedCat;
 
-    public SwampHutPiece(RandomSource randomsource, int i, int j) {
-        super(StructurePieceType.SWAMPLAND_HUT, i, 64, j, 7, 7, 9, getRandomHorizontalDirection(randomsource));
+    public SwampHutPiece(RandomSource random, int x, int z) {
+        super(StructurePieceType.SWAMPLAND_HUT, x, 64, z, 7, 7, 9, getRandomHorizontalDirection(random));
     }
 
-    public SwampHutPiece(CompoundTag compoundtag) {
-        super(StructurePieceType.SWAMPLAND_HUT, compoundtag);
-        this.spawnedWitch = compoundtag.getBoolean("Witch");
-        this.spawnedCat = compoundtag.getBoolean("Cat");
+    public SwampHutPiece(CompoundTag tag) {
+        super(StructurePieceType.SWAMPLAND_HUT, tag);
+        this.spawnedWitch = tag.getBoolean("Witch");
+        this.spawnedCat = tag.getBoolean("Cat");
     }
 
     @Override
-    @Override
-    protected void addAdditionalSaveData(StructurePieceSerializationContext structurepieceserializationcontext, CompoundTag compoundtag) {
-        super.addAdditionalSaveData(structurepieceserializationcontext, compoundtag);
-        compoundtag.putBoolean("Witch", this.spawnedWitch);
-        compoundtag.putBoolean("Cat", this.spawnedCat);
+    protected void addAdditionalSaveData(StructurePieceSerializationContext context, CompoundTag tag) {
+        super.addAdditionalSaveData(context, tag);
+        tag.putBoolean("Witch", this.spawnedWitch);
+        tag.putBoolean("Cat", this.spawnedCat);
     }
 
     @Override
-    @Override
-    public void postProcess(WorldGenLevel worldgenlevel, StructureManager structuremanager, ChunkGenerator chunkgenerator, RandomSource randomsource, BoundingBox boundingbox, ChunkPos chunkpos, BlockPos blockpos) {
-        if (this.updateAverageGroundHeight(worldgenlevel, boundingbox, 0)) {
-            this.generateBox(worldgenlevel, boundingbox, 1, 1, 1, 5, 1, 7, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
-            this.generateBox(worldgenlevel, boundingbox, 1, 4, 2, 5, 4, 7, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
-            this.generateBox(worldgenlevel, boundingbox, 2, 1, 0, 4, 1, 0, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
-            this.generateBox(worldgenlevel, boundingbox, 2, 2, 2, 3, 3, 2, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
-            this.generateBox(worldgenlevel, boundingbox, 1, 2, 3, 1, 3, 6, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
-            this.generateBox(worldgenlevel, boundingbox, 5, 2, 3, 5, 3, 6, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
-            this.generateBox(worldgenlevel, boundingbox, 2, 2, 7, 4, 3, 7, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
-            this.generateBox(worldgenlevel, boundingbox, 1, 0, 2, 1, 3, 2, Blocks.OAK_LOG.defaultBlockState(), Blocks.OAK_LOG.defaultBlockState(), false);
-            this.generateBox(worldgenlevel, boundingbox, 5, 0, 2, 5, 3, 2, Blocks.OAK_LOG.defaultBlockState(), Blocks.OAK_LOG.defaultBlockState(), false);
-            this.generateBox(worldgenlevel, boundingbox, 1, 0, 7, 1, 3, 7, Blocks.OAK_LOG.defaultBlockState(), Blocks.OAK_LOG.defaultBlockState(), false);
-            this.generateBox(worldgenlevel, boundingbox, 5, 0, 7, 5, 3, 7, Blocks.OAK_LOG.defaultBlockState(), Blocks.OAK_LOG.defaultBlockState(), false);
-            this.placeBlock(worldgenlevel, Blocks.OAK_FENCE.defaultBlockState(), 2, 3, 2, boundingbox);
-            this.placeBlock(worldgenlevel, Blocks.OAK_FENCE.defaultBlockState(), 3, 3, 7, boundingbox);
-            this.placeBlock(worldgenlevel, Blocks.AIR.defaultBlockState(), 1, 3, 4, boundingbox);
-            this.placeBlock(worldgenlevel, Blocks.AIR.defaultBlockState(), 5, 3, 4, boundingbox);
-            this.placeBlock(worldgenlevel, Blocks.AIR.defaultBlockState(), 5, 3, 5, boundingbox);
-            this.placeBlock(worldgenlevel, Blocks.POTTED_RED_MUSHROOM.defaultBlockState(), 1, 3, 5, boundingbox);
-            this.placeBlock(worldgenlevel, Blocks.CRAFTING_TABLE.defaultBlockState(), 3, 2, 6, boundingbox);
-            this.placeBlock(worldgenlevel, Blocks.CAULDRON.defaultBlockState(), 4, 2, 6, boundingbox);
-            this.placeBlock(worldgenlevel, Blocks.OAK_FENCE.defaultBlockState(), 1, 2, 1, boundingbox);
-            this.placeBlock(worldgenlevel, Blocks.OAK_FENCE.defaultBlockState(), 5, 2, 1, boundingbox);
-            BlockState blockstate = (BlockState) Blocks.SPRUCE_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.NORTH);
-            BlockState blockstate1 = (BlockState) Blocks.SPRUCE_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.EAST);
-            BlockState blockstate2 = (BlockState) Blocks.SPRUCE_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.WEST);
-            BlockState blockstate3 = (BlockState) Blocks.SPRUCE_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.SOUTH);
+    public void postProcess(WorldGenLevel level, StructureManager structureManager, ChunkGenerator generator, RandomSource random, BoundingBox box, ChunkPos chunkPos, BlockPos pos) {
+        if (this.updateAverageGroundHeight(level, box, 0)) {
+            this.generateBox(level, box, 1, 1, 1, 5, 1, 7, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
+            this.generateBox(level, box, 1, 4, 2, 5, 4, 7, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
+            this.generateBox(level, box, 2, 1, 0, 4, 1, 0, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
+            this.generateBox(level, box, 2, 2, 2, 3, 3, 2, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
+            this.generateBox(level, box, 1, 2, 3, 1, 3, 6, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
+            this.generateBox(level, box, 5, 2, 3, 5, 3, 6, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
+            this.generateBox(level, box, 2, 2, 7, 4, 3, 7, Blocks.SPRUCE_PLANKS.defaultBlockState(), Blocks.SPRUCE_PLANKS.defaultBlockState(), false);
+            this.generateBox(level, box, 1, 0, 2, 1, 3, 2, Blocks.OAK_LOG.defaultBlockState(), Blocks.OAK_LOG.defaultBlockState(), false);
+            this.generateBox(level, box, 5, 0, 2, 5, 3, 2, Blocks.OAK_LOG.defaultBlockState(), Blocks.OAK_LOG.defaultBlockState(), false);
+            this.generateBox(level, box, 1, 0, 7, 1, 3, 7, Blocks.OAK_LOG.defaultBlockState(), Blocks.OAK_LOG.defaultBlockState(), false);
+            this.generateBox(level, box, 5, 0, 7, 5, 3, 7, Blocks.OAK_LOG.defaultBlockState(), Blocks.OAK_LOG.defaultBlockState(), false);
+            this.placeBlock(level, Blocks.OAK_FENCE.defaultBlockState(), 2, 3, 2, box);
+            this.placeBlock(level, Blocks.OAK_FENCE.defaultBlockState(), 3, 3, 7, box);
+            this.placeBlock(level, Blocks.AIR.defaultBlockState(), 1, 3, 4, box);
+            this.placeBlock(level, Blocks.AIR.defaultBlockState(), 5, 3, 4, box);
+            this.placeBlock(level, Blocks.AIR.defaultBlockState(), 5, 3, 5, box);
+            this.placeBlock(level, Blocks.POTTED_RED_MUSHROOM.defaultBlockState(), 1, 3, 5, box);
+            this.placeBlock(level, Blocks.CRAFTING_TABLE.defaultBlockState(), 3, 2, 6, box);
+            this.placeBlock(level, Blocks.CAULDRON.defaultBlockState(), 4, 2, 6, box);
+            this.placeBlock(level, Blocks.OAK_FENCE.defaultBlockState(), 1, 2, 1, box);
+            this.placeBlock(level, Blocks.OAK_FENCE.defaultBlockState(), 5, 2, 1, box);
+            IBlockData iblockdata = (IBlockData) Blocks.SPRUCE_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.NORTH);
+            IBlockData iblockdata1 = (IBlockData) Blocks.SPRUCE_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.EAST);
+            IBlockData iblockdata2 = (IBlockData) Blocks.SPRUCE_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.WEST);
+            IBlockData iblockdata3 = (IBlockData) Blocks.SPRUCE_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.SOUTH);
 
-            this.generateBox(worldgenlevel, boundingbox, 0, 4, 1, 6, 4, 1, blockstate, blockstate, false);
-            this.generateBox(worldgenlevel, boundingbox, 0, 4, 2, 0, 4, 7, blockstate1, blockstate1, false);
-            this.generateBox(worldgenlevel, boundingbox, 6, 4, 2, 6, 4, 7, blockstate2, blockstate2, false);
-            this.generateBox(worldgenlevel, boundingbox, 0, 4, 8, 6, 4, 8, blockstate3, blockstate3, false);
-            this.placeBlock(worldgenlevel, (BlockState) blockstate.setValue(StairBlock.SHAPE, StairsShape.OUTER_RIGHT), 0, 4, 1, boundingbox);
-            this.placeBlock(worldgenlevel, (BlockState) blockstate.setValue(StairBlock.SHAPE, StairsShape.OUTER_LEFT), 6, 4, 1, boundingbox);
-            this.placeBlock(worldgenlevel, (BlockState) blockstate3.setValue(StairBlock.SHAPE, StairsShape.OUTER_LEFT), 0, 4, 8, boundingbox);
-            this.placeBlock(worldgenlevel, (BlockState) blockstate3.setValue(StairBlock.SHAPE, StairsShape.OUTER_RIGHT), 6, 4, 8, boundingbox);
+            this.generateBox(level, box, 0, 4, 1, 6, 4, 1, iblockdata, iblockdata, false);
+            this.generateBox(level, box, 0, 4, 2, 0, 4, 7, iblockdata1, iblockdata1, false);
+            this.generateBox(level, box, 6, 4, 2, 6, 4, 7, iblockdata2, iblockdata2, false);
+            this.generateBox(level, box, 0, 4, 8, 6, 4, 8, iblockdata3, iblockdata3, false);
+            this.placeBlock(level, (IBlockData) iblockdata.setValue(StairBlock.SHAPE, StairsShape.OUTER_RIGHT), 0, 4, 1, box);
+            this.placeBlock(level, (IBlockData) iblockdata.setValue(StairBlock.SHAPE, StairsShape.OUTER_LEFT), 6, 4, 1, box);
+            this.placeBlock(level, (IBlockData) iblockdata3.setValue(StairBlock.SHAPE, StairsShape.OUTER_LEFT), 0, 4, 8, box);
+            this.placeBlock(level, (IBlockData) iblockdata3.setValue(StairBlock.SHAPE, StairsShape.OUTER_RIGHT), 6, 4, 8, box);
 
             for (int i = 2; i <= 7; i += 5) {
                 for (int j = 1; j <= 5; j += 4) {
-                    this.fillColumnDown(worldgenlevel, Blocks.OAK_LOG.defaultBlockState(), j, -1, i, boundingbox);
+                    this.fillColumnDown(level, Blocks.OAK_LOG.defaultBlockState(), j, -1, i, box);
                 }
             }
 
             if (!this.spawnedWitch) {
-                BlockPos.MutableBlockPos blockpos_mutableblockpos = this.getWorldPos(2, 2, 5);
+                BlockPos.MutableBlockPos blockposition_mutableblockposition = this.getWorldPos(2, 2, 5);
 
-                if (boundingbox.isInside(blockpos_mutableblockpos)) {
+                if (box.isInside(blockposition_mutableblockposition)) {
                     this.spawnedWitch = true;
-                    Witch witch = (Witch) EntityType.WITCH.create(worldgenlevel.getLevel());
+                    Witch entitywitch = (Witch) EntityType.WITCH.create(level.getLevel());
 
-                    if (witch != null) {
-                        witch.setPersistenceRequired();
-                        witch.moveTo((double) blockpos_mutableblockpos.getX() + 0.5D, (double) blockpos_mutableblockpos.getY(), (double) blockpos_mutableblockpos.getZ() + 0.5D, 0.0F, 0.0F);
-                        witch.finalizeSpawn(worldgenlevel, worldgenlevel.getCurrentDifficultyAt(blockpos_mutableblockpos), MobSpawnType.STRUCTURE, (SpawnGroupData) null, (CompoundTag) null);
-                        worldgenlevel.addFreshEntityWithPassengers(witch);
+                    if (entitywitch != null) {
+                        entitywitch.setPersistenceRequired();
+                        entitywitch.moveTo((double) blockposition_mutableblockposition.getX() + 0.5D, (double) blockposition_mutableblockposition.getY(), (double) blockposition_mutableblockposition.getZ() + 0.5D, 0.0F, 0.0F);
+                        entitywitch.finalizeSpawn(level, level.getCurrentDifficultyAt(blockposition_mutableblockposition), EnumMobSpawn.STRUCTURE, (GroupDataEntity) null, (CompoundTag) null);
+                        level.addFreshEntityWithPassengers(entitywitch, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.CHUNK_GEN); // CraftBukkit - add SpawnReason
                     }
                 }
             }
 
-            this.spawnCat(worldgenlevel, boundingbox);
+            this.spawnCat(level, box);
         }
     }
 
-    private void spawnCat(ServerLevelAccessor serverlevelaccessor, BoundingBox boundingbox) {
+    private void spawnCat(ServerLevelAccessor level, BoundingBox box) {
         if (!this.spawnedCat) {
-            BlockPos.MutableBlockPos blockpos_mutableblockpos = this.getWorldPos(2, 2, 5);
+            BlockPos.MutableBlockPos blockposition_mutableblockposition = this.getWorldPos(2, 2, 5);
 
-            if (boundingbox.isInside(blockpos_mutableblockpos)) {
+            if (box.isInside(blockposition_mutableblockposition)) {
                 this.spawnedCat = true;
-                Cat cat = (Cat) EntityType.CAT.create(serverlevelaccessor.getLevel());
+                Cat entitycat = (Cat) EntityType.CAT.create(level.getLevel());
 
-                if (cat != null) {
-                    cat.setPersistenceRequired();
-                    cat.moveTo((double) blockpos_mutableblockpos.getX() + 0.5D, (double) blockpos_mutableblockpos.getY(), (double) blockpos_mutableblockpos.getZ() + 0.5D, 0.0F, 0.0F);
-                    cat.finalizeSpawn(serverlevelaccessor, serverlevelaccessor.getCurrentDifficultyAt(blockpos_mutableblockpos), MobSpawnType.STRUCTURE, (SpawnGroupData) null, (CompoundTag) null);
-                    serverlevelaccessor.addFreshEntityWithPassengers(cat);
+                if (entitycat != null) {
+                    entitycat.setPersistenceRequired();
+                    entitycat.moveTo((double) blockposition_mutableblockposition.getX() + 0.5D, (double) blockposition_mutableblockposition.getY(), (double) blockposition_mutableblockposition.getZ() + 0.5D, 0.0F, 0.0F);
+                    entitycat.finalizeSpawn(level, level.getCurrentDifficultyAt(blockposition_mutableblockposition), EnumMobSpawn.STRUCTURE, (GroupDataEntity) null, (CompoundTag) null);
+                    level.addFreshEntityWithPassengers(entitycat, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.CHUNK_GEN); // CraftBukkit - add SpawnReason
                 }
             }
         }
