--- a/net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure.java
+++ b/net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure.java
@@ -28,15 +28,14 @@
 
     public static final Codec<DesertPyramidStructure> CODEC = simpleCodec(DesertPyramidStructure::new);
 
-    public DesertPyramidStructure(Structure.StructureSettings structure_structuresettings) {
-        super(DesertPyramidPiece::new, 21, 21, structure_structuresettings);
+    public DesertPyramidStructure(Structure.c settings) {
+        super(DesertPyramidPiece::new, 21, 21, settings);
     }
 
     @Override
-    @Override
-    public void afterPlace(WorldGenLevel worldgenlevel, StructureManager structuremanager, ChunkGenerator chunkgenerator, RandomSource randomsource, BoundingBox boundingbox, ChunkPos chunkpos, PiecesContainer piecescontainer) {
+    public void afterPlace(WorldGenLevel level, StructureManager structureManager, ChunkGenerator chunkGenerator, RandomSource random, BoundingBox boundingBox, ChunkPos chunkPos, PiecesContainer pieces) {
         Set<BlockPos> set = SortedArraySet.create(Vec3i::compareTo);
-        Iterator iterator = piecescontainer.pieces().iterator();
+        Iterator iterator = pieces.pieces().iterator();
 
         while (iterator.hasNext()) {
             StructurePiece structurepiece = (StructurePiece) iterator.next();
@@ -45,42 +44,50 @@
                 DesertPyramidPiece desertpyramidpiece = (DesertPyramidPiece) structurepiece;
 
                 set.addAll(desertpyramidpiece.getPotentialSuspiciousSandWorldPositions());
-                placeSuspiciousSand(boundingbox, worldgenlevel, desertpyramidpiece.getRandomCollapsedRoofPos());
+                placeSuspiciousSand(boundingBox, level, desertpyramidpiece.getRandomCollapsedRoofPos());
             }
         }
 
         ObjectArrayList<BlockPos> objectarraylist = new ObjectArrayList(set.stream().toList());
-        RandomSource randomsource1 = RandomSource.create(worldgenlevel.getSeed()).forkPositional().at(piecescontainer.calculateBoundingBox().getCenter());
+        RandomSource randomsource1 = RandomSource.create(level.getSeed()).forkPositional().at(pieces.calculateBoundingBox().getCenter());
 
         Util.shuffle(objectarraylist, randomsource1);
         int i = Math.min(set.size(), randomsource1.nextInt(5, 8));
         ObjectListIterator objectlistiterator = objectarraylist.iterator();
 
         while (objectlistiterator.hasNext()) {
-            BlockPos blockpos = (BlockPos) objectlistiterator.next();
+            BlockPos blockposition = (BlockPos) objectlistiterator.next();
 
             if (i > 0) {
                 --i;
-                placeSuspiciousSand(boundingbox, worldgenlevel, blockpos);
-            } else if (boundingbox.isInside(blockpos)) {
-                worldgenlevel.setBlock(blockpos, Blocks.SAND.defaultBlockState(), 2);
+                placeSuspiciousSand(boundingBox, level, blockposition);
+            } else if (boundingBox.isInside(blockposition)) {
+                level.setBlock(blockposition, Blocks.SAND.defaultBlockState(), 2);
             }
         }
 
     }
 
-    private static void placeSuspiciousSand(BoundingBox boundingbox, WorldGenLevel worldgenlevel, BlockPos blockpos) {
-        if (boundingbox.isInside(blockpos)) {
-            worldgenlevel.setBlock(blockpos, Blocks.SUSPICIOUS_SAND.defaultBlockState(), 2);
-            worldgenlevel.getBlockEntity(blockpos, BlockEntityType.BRUSHABLE_BLOCK).ifPresent((brushableblockentity) -> {
-                brushableblockentity.setLootTable(BuiltInLootTables.DESERT_PYRAMID_ARCHAEOLOGY, blockpos.asLong());
+    private static void placeSuspiciousSand(BoundingBox boundingBox, WorldGenLevel worldGenLevel, BlockPos pos) {
+        if (boundingBox.isInside(pos)) {
+            // CraftBukkit start
+            if (worldGenLevel instanceof org.bukkit.craftbukkit.util.TransformerGeneratorAccess transformerAccess) {
+                org.bukkit.craftbukkit.block.CraftBrushableBlock brushableState = (org.bukkit.craftbukkit.block.CraftBrushableBlock) org.bukkit.craftbukkit.block.CraftBlockStates.getBlockState(pos, Blocks.SUSPICIOUS_SAND.defaultBlockState(), null);
+                brushableState.setLootTable(org.bukkit.Bukkit.getLootTable(org.bukkit.craftbukkit.util.CraftNamespacedKey.fromMinecraft(BuiltInLootTables.DESERT_PYRAMID_ARCHAEOLOGY)));
+                brushableState.setSeed(pos.asLong());
+                transformerAccess.setCraftBlock(pos, brushableState, 2);
+                return;
+            }
+            // CraftBukkit end
+            worldGenLevel.setBlock(pos, Blocks.SUSPICIOUS_SAND.defaultBlockState(), 2);
+            worldGenLevel.getBlockEntity(pos, BlockEntityType.BRUSHABLE_BLOCK).ifPresent((brushableblockentity) -> {
+                brushableblockentity.setLootTable(BuiltInLootTables.DESERT_PYRAMID_ARCHAEOLOGY, pos.asLong());
             });
         }
 
     }
 
     @Override
-    @Override
     public StructureType<?> type() {
         return StructureType.DESERT_PYRAMID;
     }
