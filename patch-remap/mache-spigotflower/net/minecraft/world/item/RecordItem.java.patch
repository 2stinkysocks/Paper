--- a/net/minecraft/world/item/RecordItem.java
+++ b/net/minecraft/world/item/RecordItem.java
@@ -18,7 +18,7 @@
 import net.minecraft.world.level.block.JukeboxBlock;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.entity.JukeboxBlockEntity;
-import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.block.state.IBlockData;
 import net.minecraft.world.level.gameevent.GameEvent;
 
 public class RecordItem extends Item {
@@ -28,42 +28,42 @@
     private final SoundEvent sound;
     private final int lengthInTicks;
 
-    protected RecordItem(int i, SoundEvent soundevent, Item.Properties item_properties, int j) {
-        super(item_properties);
-        this.analogOutput = i;
-        this.sound = soundevent;
-        this.lengthInTicks = j * 20;
+    protected RecordItem(int analogOutput, SoundEvent sound, Item.Properties properties, int lengthInSeconds) {
+        super(properties);
+        this.analogOutput = analogOutput;
+        this.sound = sound;
+        this.lengthInTicks = lengthInSeconds * 20;
         RecordItem.BY_NAME.put(this.sound, this);
     }
 
     @Override
-    @Override
-    public InteractionResult useOn(UseOnContext useoncontext) {
-        Level level = useoncontext.getLevel();
-        BlockPos blockpos = useoncontext.getClickedPos();
-        BlockState blockstate = level.getBlockState(blockpos);
+    public InteractionResult useOn(UseOnContext context) {
+        Level world = context.getLevel();
+        BlockPos blockposition = context.getClickedPos();
+        IBlockData iblockdata = world.getBlockState(blockposition);
 
-        if (blockstate.is(Blocks.JUKEBOX) && !(Boolean) blockstate.getValue(JukeboxBlock.HAS_RECORD)) {
-            ItemStack itemstack = useoncontext.getItemInHand();
+        if (iblockdata.is(Blocks.JUKEBOX) && !(Boolean) iblockdata.getValue(JukeboxBlock.HAS_RECORD)) {
+            ItemStack itemstack = context.getItemInHand();
 
-            if (!level.isClientSide) {
-                Player player = useoncontext.getPlayer();
-                BlockEntity blockentity = level.getBlockEntity(blockpos);
+            if (!world.isClientSide) {
+                if (true) return InteractionResult.SUCCESS; // CraftBukkit - handled in ItemStack
+                Player entityhuman = context.getPlayer();
+                BlockEntity tileentity = world.getBlockEntity(blockposition);
 
-                if (blockentity instanceof JukeboxBlockEntity) {
-                    JukeboxBlockEntity jukeboxblockentity = (JukeboxBlockEntity) blockentity;
+                if (tileentity instanceof JukeboxBlockEntity) {
+                    JukeboxBlockEntity tileentityjukebox = (JukeboxBlockEntity) tileentity;
 
-                    jukeboxblockentity.setTheItem(itemstack.copy());
-                    level.gameEvent(GameEvent.BLOCK_CHANGE, blockpos, GameEvent.Context.of(player, blockstate));
+                    tileentityjukebox.setTheItem(itemstack.copy());
+                    world.gameEvent(GameEvent.BLOCK_CHANGE, blockposition, GameEvent.Context.of(entityhuman, iblockdata));
                 }
 
                 itemstack.shrink(1);
-                if (player != null) {
-                    player.awardStat(Stats.PLAY_RECORD);
+                if (entityhuman != null) {
+                    entityhuman.awardStat(Stats.PLAY_RECORD);
                 }
             }
 
-            return InteractionResult.sidedSuccess(level.isClientSide);
+            return InteractionResult.sidedSuccess(world.isClientSide);
         } else {
             return InteractionResult.PASS;
         }
@@ -74,9 +74,8 @@
     }
 
     @Override
-    @Override
-    public void appendHoverText(ItemStack itemstack, @Nullable Level level, List<Component> list, TooltipFlag tooltipflag) {
-        list.add(this.getDisplayName().withStyle(ChatFormatting.GRAY));
+    public void appendHoverText(ItemStack stack, @Nullable Level level, List<Component> tooltip, TooltipFlag flag) {
+        tooltip.add(this.getDisplayName().withStyle(ChatFormatting.GRAY));
     }
 
     public MutableComponent getDisplayName() {
@@ -84,8 +83,8 @@
     }
 
     @Nullable
-    public static RecordItem getBySound(SoundEvent soundevent) {
-        return (RecordItem) RecordItem.BY_NAME.get(soundevent);
+    public static RecordItem getBySound(SoundEvent sound) {
+        return (RecordItem) RecordItem.BY_NAME.get(sound);
     }
 
     public SoundEvent getSound() {
