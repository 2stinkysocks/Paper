--- a/net/minecraft/world/item/MilkBucketItem.java
+++ b/net/minecraft/world/item/MilkBucketItem.java
@@ -3,7 +3,7 @@
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.stats.Stats;
-import net.minecraft.world.InteractionHand;
+import net.minecraft.world.EnumHand;
 import net.minecraft.world.InteractionResultHolder;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.player.Player;
@@ -13,46 +13,42 @@
 
     private static final int DRINK_DURATION = 32;
 
-    public MilkBucketItem(Item.Properties item_properties) {
-        super(item_properties);
+    public MilkBucketItem(Item.Properties properties) {
+        super(properties);
     }
 
     @Override
-    @Override
-    public ItemStack finishUsingItem(ItemStack itemstack, Level level, LivingEntity livingentity) {
-        if (livingentity instanceof ServerPlayer) {
-            ServerPlayer serverplayer = (ServerPlayer) livingentity;
+    public ItemStack finishUsingItem(ItemStack stack, Level level, LivingEntity entityLiving) {
+        if (entityLiving instanceof ServerPlayer) {
+            ServerPlayer entityplayer = (ServerPlayer) entityLiving;
 
-            CriteriaTriggers.CONSUME_ITEM.trigger(serverplayer, itemstack);
-            serverplayer.awardStat(Stats.ITEM_USED.get(this));
+            CriteriaTriggers.CONSUME_ITEM.trigger(entityplayer, stack);
+            entityplayer.awardStat(Stats.ITEM_USED.get(this));
         }
 
-        if (livingentity instanceof Player && !((Player) livingentity).getAbilities().instabuild) {
-            itemstack.shrink(1);
+        if (entityLiving instanceof Player && !((Player) entityLiving).getAbilities().instabuild) {
+            stack.shrink(1);
         }
 
         if (!level.isClientSide) {
-            livingentity.removeAllEffects();
+            entityLiving.removeAllEffects(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.MILK); // CraftBukkit
         }
 
-        return itemstack.isEmpty() ? new ItemStack(Items.BUCKET) : itemstack;
+        return stack.isEmpty() ? new ItemStack(Items.BUCKET) : stack;
     }
 
     @Override
-    @Override
-    public int getUseDuration(ItemStack itemstack) {
+    public int getUseDuration(ItemStack stack) {
         return 32;
     }
 
     @Override
-    @Override
-    public UseAnim getUseAnimation(ItemStack itemstack) {
-        return UseAnim.DRINK;
+    public EnumAnimation getUseAnimation(ItemStack stack) {
+        return EnumAnimation.DRINK;
     }
 
     @Override
-    @Override
-    public InteractionResultHolder<ItemStack> use(Level level, Player player, InteractionHand interactionhand) {
-        return ItemUtils.startUsingInstantly(level, player, interactionhand);
+    public InteractionResultHolder<ItemStack> use(Level level, Player player, EnumHand hand) {
+        return ItemUtils.startUsingInstantly(level, player, hand);
     }
 }
