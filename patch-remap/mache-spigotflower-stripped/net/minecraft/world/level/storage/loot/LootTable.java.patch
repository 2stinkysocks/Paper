--- a/net/minecraft/world/level/storage/loot/LootTable.java
+++ b/net/minecraft/world/level/storage/loot/LootTable.java
@@ -28,6 +29,13 @@
 import net.minecraft.world.level.storage.loot.parameters.LootContextParamSets;
 import org.slf4j.Logger;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.CraftLootTable;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.world.LootGenerateEvent;
+// CraftBukkit end
+
 public class LootTable {
 
     private static final Logger LOGGER = LogUtils.getLogger();
@@ -49,6 +57,7 @@
     private final List<LootPool> pools;
     private final List<LootItemFunction> functions;
     private final BiFunction<ItemStack, LootContext, ItemStack> compositeFunction;
+    public CraftLootTable craftLootTable; // CraftBukkit
 
     LootTable(LootContextParamSet lootcontextparamset, Optional<ResourceLocation> optional, List<LootPool> list, List<LootItemFunction> list1) {
         this.paramSet = lootcontextparamset;
@@ -147,12 +156,25 @@
 
     }
 
-    public void fill(Container container, LootParams lootparams, long i) {
-        LootContext lootcontext = (new LootContext.Builder(lootparams)).withOptionalRandomSeed(i).create(this.randomSequence);
-        ObjectArrayList<ItemStack> objectarraylist = this.getRandomItems(lootcontext);
-        RandomSource randomsource = lootcontext.getRandom();
-        List<Integer> list = this.getAvailableSlots(container, randomsource);
+    public void fill(Container container, LootParams params, long seed) {
+        // CraftBukkit start
+        this.fillInventory(container, params, seed, false);
+    }
 
+    public void fillInventory(Container iinventory, LootParams lootparams, long i, boolean plugin) {
+        // CraftBukkit end
+        LootContext loottableinfo = (new LootContext.Builder(lootparams)).withOptionalRandomSeed(i).create(this.randomSequence);
+        ObjectArrayList<ItemStack> objectarraylist = this.getRandomItems(loottableinfo);
+        RandomSource randomsource = loottableinfo.getRandom();
+        // CraftBukkit start
+        LootGenerateEvent event = CraftEventFactory.callLootGenerateEvent(iinventory, this, loottableinfo, objectarraylist, plugin);
+        if (event.isCancelled()) {
+            return;
+        }
+        objectarraylist = event.getLoot().stream().map(CraftItemStack::asNMSCopy).collect(ObjectArrayList.toList());
+        // CraftBukkit end
+        List<Integer> list = this.getAvailableSlots(iinventory, randomsource);
+
         this.shuffleAndSplitItems(objectarraylist, list.size(), randomsource);
         ObjectListIterator objectlistiterator = objectarraylist.iterator();
 
