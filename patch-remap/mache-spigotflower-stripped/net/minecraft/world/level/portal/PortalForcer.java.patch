--- a/net/minecraft/world/level/portal/PortalForcer.java
+++ b/net/minecraft/world/level/portal/PortalForcer.java
@@ -41,12 +41,18 @@
         this.level = serverlevel;
     }
 
-    public Optional<BlockUtil.FoundRectangle> findPortalAround(BlockPos blockpos, boolean flag, WorldBorder worldborder) {
-        PoiManager poimanager = this.level.getPoiManager();
-        int i = flag ? 16 : 128;
+    public Optional<BlockUtil.FoundRectangle> findPortalAround(BlockPos pos, boolean isNether, WorldBorder worldBorder) {
+        // CraftBukkit start
+        return findPortalAround(pos, worldBorder, isNether ? 16 : 128); // Search Radius
+    }
 
-        poimanager.ensureLoadedAndValid(this.level, blockpos, i);
-        Optional<PoiRecord> optional = poimanager.getInSquare((holder) -> {
+    public Optional<BlockUtil.FoundRectangle> findPortalAround(BlockPos blockposition, WorldBorder worldborder, int i) {
+        PoiManager villageplace = this.level.getPoiManager();
+        // int i = flag ? 16 : 128;
+        // CraftBukkit end
+
+        villageplace.ensureLoadedAndValid(this.level, blockposition, i);
+        Optional<PoiRecord> optional = villageplace.getInSquare((holder) -> {
             return holder.is(PoiTypes.NETHER_PORTAL);
         }, blockpos, i, PoiManager.Occupancy.ANY).filter((poirecord) -> {
             return worldborder.isWithinBounds(poirecord.getPos());
@@ -70,16 +76,22 @@
         });
     }
 
-    public Optional<BlockUtil.FoundRectangle> createPortal(BlockPos blockpos, Direction.Axis direction_axis) {
-        Direction direction = Direction.get(Direction.AxisDirection.POSITIVE, direction_axis);
+    public Optional<BlockUtil.FoundRectangle> createPortal(BlockPos pos, Direction.Axis axis) {
+        // CraftBukkit start
+        return this.createPortal(pos, axis, null, 16);
+    }
+
+    public Optional<BlockUtil.FoundRectangle> createPortal(BlockPos blockposition, Direction.Axis enumdirection_enumaxis, net.minecraft.world.entity.Entity entity, int createRadius) {
+        // CraftBukkit end
+        Direction enumdirection = Direction.get(Direction.AxisDirection.POSITIVE, enumdirection_enumaxis);
         double d0 = -1.0D;
         BlockPos blockpos1 = null;
         double d1 = -1.0D;
         BlockPos blockpos2 = null;
         WorldBorder worldborder = this.level.getWorldBorder();
         int i = Math.min(this.level.getMaxBuildHeight(), this.level.getMinBuildHeight() + this.level.getLogicalHeight()) - 1;
-        BlockPos.MutableBlockPos blockpos_mutableblockpos = blockpos.mutable();
-        Iterator iterator = BlockPos.spiralAround(blockpos, 16, Direction.EAST, Direction.SOUTH).iterator();
+        BlockPos.MutableBlockPos blockposition_mutableblockposition = blockposition.mutable();
+        Iterator iterator = BlockPos.spiralAround(blockposition, createRadius, Direction.EAST, Direction.SOUTH).iterator(); // CraftBukkit
 
         int j;
         int k;
@@ -134,6 +146,7 @@
         int j1;
         int k1;
 
+        org.bukkit.craftbukkit.util.BlockStateListPopulator blockList = new org.bukkit.craftbukkit.util.BlockStateListPopulator(this.level); // CraftBukkit - Use BlockStateListPopulator
         if (d0 == -1.0D) {
             j1 = Math.max(this.level.getMinBuildHeight() - -1, 70);
             k1 = i - 9;
@@ -153,8 +166,8 @@
                     for (l = -1; l < 3; ++l) {
                         BlockState blockstate = l < 0 ? Blocks.OBSIDIAN.defaultBlockState() : Blocks.AIR.defaultBlockState();
 
-                        blockpos_mutableblockpos.setWithOffset(blockpos1, k * direction.getStepX() + l1 * direction1.getStepX(), l, k * direction.getStepZ() + l1 * direction1.getStepZ());
-                        this.level.setBlockAndUpdate(blockpos_mutableblockpos, blockstate);
+                        blockposition_mutableblockposition.setWithOffset(blockposition1, k * enumdirection.getStepX() + l1 * enumdirection1.getStepX(), l, k * enumdirection.getStepZ() + l1 * enumdirection1.getStepZ());
+                        blockList.setBlock(blockposition_mutableblockposition, iblockdata, 3); // CraftBukkit
                     }
                 }
             }
@@ -163,8 +176,8 @@
         for (j1 = -1; j1 < 3; ++j1) {
             for (k1 = -1; k1 < 4; ++k1) {
                 if (j1 == -1 || j1 == 2 || k1 == -1 || k1 == 3) {
-                    blockpos_mutableblockpos.setWithOffset(blockpos1, j1 * direction.getStepX(), k1, j1 * direction.getStepZ());
-                    this.level.setBlock(blockpos_mutableblockpos, Blocks.OBSIDIAN.defaultBlockState(), 3);
+                    blockposition_mutableblockposition.setWithOffset(blockposition1, j1 * enumdirection.getStepX(), k1, j1 * enumdirection.getStepZ());
+                    blockList.setBlock(blockposition_mutableblockposition, Blocks.OBSIDIAN.defaultBlockState(), 3); // CraftBukkit
                 }
             }
         }
@@ -173,12 +186,22 @@
 
         for (k1 = 0; k1 < 2; ++k1) {
             for (j = 0; j < 3; ++j) {
-                blockpos_mutableblockpos.setWithOffset(blockpos1, k1 * direction.getStepX(), j, k1 * direction.getStepZ());
-                this.level.setBlock(blockpos_mutableblockpos, blockstate1, 18);
+                blockposition_mutableblockposition.setWithOffset(blockposition1, k1 * enumdirection.getStepX(), j, k1 * enumdirection.getStepZ());
+                blockList.setBlock(blockposition_mutableblockposition, iblockdata1, 18); // CraftBukkit
             }
         }
 
-        return Optional.of(new BlockUtil.FoundRectangle(blockpos1.immutable(), 2, 3));
+        // CraftBukkit start
+        org.bukkit.World bworld = this.level.getWorld();
+        org.bukkit.event.world.PortalCreateEvent event = new org.bukkit.event.world.PortalCreateEvent((java.util.List<org.bukkit.block.BlockState>) (java.util.List) blockList.getList(), bworld, (entity == null) ? null : entity.getBukkitEntity(), org.bukkit.event.world.PortalCreateEvent.CreateReason.NETHER_PAIR);
+
+        this.level.getCraftServer().getPluginManager().callEvent(event);
+        if (event.isCancelled()) {
+            return Optional.empty();
+        }
+        blockList.updateList();
+        // CraftBukkit end
+        return Optional.of(new BlockUtil.FoundRectangle(blockposition1.immutable(), 2, 3));
     }
 
     private boolean canPortalReplaceBlock(BlockPos.MutableBlockPos blockpos_mutableblockpos) {
