--- a/net/minecraft/world/level/block/BasePressurePlateBlock.java
+++ b/net/minecraft/world/level/block/BasePressurePlateBlock.java
@@ -21,6 +21,7 @@
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.bukkit.event.block.BlockRedstoneEvent; // CraftBukkit
 
 public abstract class BasePressurePlateBlock extends Block {
 
@@ -97,13 +91,15 @@
         boolean flag = i > 0;
         boolean flag1 = j > 0;
 
-        if (i != j) {
-            BlockState blockstate1 = this.setSignalForState(blockstate, j);
+        // CraftBukkit start - Interact Pressure Plate
+        org.bukkit.World bworld = level.getWorld();
+        org.bukkit.plugin.PluginManager manager = level.getCraftServer().getPluginManager();
 
             level.setBlock(blockpos, blockstate1, 2);
             this.updateNeighbours(level, blockpos);
             level.setBlocksDirty(blockpos, blockstate, blockstate1);
         }
+        // CraftBukkit end
 
         if (!flag1 && flag) {
             level.playSound((Player) null, blockpos, this.type.pressurePlateClickOff(), SoundSource.BLOCKS);
@@ -154,10 +157,16 @@
         return true;
     }
 
-    protected static int getEntityCount(Level level, AABB aabb, Class<? extends Entity> oclass) {
-        return level.getEntitiesOfClass(oclass, aabb, EntitySelector.NO_SPECTATORS.and((entity) -> {
+    protected static int getEntityCount(Level level, AABB box, Class<? extends Entity> entityClass) {
+        // CraftBukkit start
+        return getEntities(level, box, entityClass).size();
+    }
+
+    protected static <T extends Entity> java.util.List<T> getEntities(Level world, AABB axisalignedbb, Class<T> oclass) {
+        // CraftBukkit end
+        return world.getEntitiesOfClass(oclass, axisalignedbb, EntitySelector.NO_SPECTATORS.and((entity) -> {
             return !entity.isIgnoringBlockTriggers();
-        })).size();
+        })); // CraftBukkit
     }
 
     protected abstract int getSignalStrength(Level level, BlockPos pos);
