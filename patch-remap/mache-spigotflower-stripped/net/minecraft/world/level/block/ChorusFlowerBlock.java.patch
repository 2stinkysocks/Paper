--- a/net/minecraft/world/level/block/ChorusFlowerBlock.java
+++ b/net/minecraft/world/level/block/ChorusFlowerBlock.java
@@ -22,6 +22,8 @@
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory; // CraftBukkit
+
 public class ChorusFlowerBlock extends Block {
 
     public static final MapCodec<ChorusFlowerBlock> CODEC = RecordCodecBuilder.mapCodec((instance) -> {
@@ -106,9 +103,13 @@
                     flag = true;
                 }
 
-                if (flag && allNeighborsEmpty(serverlevel, blockpos1, (Direction) null) && serverlevel.isEmptyBlock(blockpos.above(2))) {
-                    serverlevel.setBlock(blockpos, ChorusPlantBlock.getStateWithConnections(serverlevel, blockpos, this.plant.defaultBlockState()), 2);
-                    this.placeGrownFlower(serverlevel, blockpos1, i);
+                if (flag && allNeighborsEmpty(level, blockposition1, (Direction) null) && level.isEmptyBlock(pos.above(2))) {
+                    // CraftBukkit start - add event
+                    if (CraftEventFactory.handleBlockSpreadEvent(level, pos, blockposition1, this.defaultBlockState().setValue(ChorusFlowerBlock.AGE, Integer.valueOf(i)), 2)) {
+                        level.setBlock(pos, ChorusPlantBlock.getStateWithConnections(level, pos, this.plant.defaultBlockState()), 2);
+                        this.placeGrownFlower(level, blockposition1, i);
+                    }
+                    // CraftBukkit end
                 } else if (i < 4) {
                     j = randomsource.nextInt(4);
                     if (flag1) {
@@ -121,19 +122,31 @@
                         Direction direction = Direction.Plane.HORIZONTAL.getRandomDirection(randomsource);
                         BlockPos blockpos2 = blockpos.relative(direction);
 
-                        if (serverlevel.isEmptyBlock(blockpos2) && serverlevel.isEmptyBlock(blockpos2.below()) && allNeighborsEmpty(serverlevel, blockpos2, direction.getOpposite())) {
-                            this.placeGrownFlower(serverlevel, blockpos2, i + 1);
-                            flag2 = true;
+                        if (level.isEmptyBlock(blockposition2) && level.isEmptyBlock(blockposition2.below()) && allNeighborsEmpty(level, blockposition2, enumdirection.getOpposite())) {
+                            // CraftBukkit start - add event
+                            if (CraftEventFactory.handleBlockSpreadEvent(level, pos, blockposition2, this.defaultBlockState().setValue(ChorusFlowerBlock.AGE, Integer.valueOf(i + 1)), 2)) {
+                                this.placeGrownFlower(level, blockposition2, i + 1);
+                                flag2 = true;
+                            }
+                            // CraftBukkit end
                         }
                     }
 
                     if (flag2) {
                         serverlevel.setBlock(blockpos, ChorusPlantBlock.getStateWithConnections(serverlevel, blockpos, this.plant.defaultBlockState()), 2);
                     } else {
-                        this.placeDeadFlower(serverlevel, blockpos);
+                        // CraftBukkit start - add event
+                        if (CraftEventFactory.handleBlockGrowEvent(level, pos, this.defaultBlockState().setValue(ChorusFlowerBlock.AGE, Integer.valueOf(5)), 2)) {
+                            this.placeDeadFlower(level, pos);
+                        }
+                        // CraftBukkit end
                     }
                 } else {
-                    this.placeDeadFlower(serverlevel, blockpos);
+                    // CraftBukkit start - add event
+                    if (CraftEventFactory.handleBlockGrowEvent(level, pos, this.defaultBlockState().setValue(ChorusFlowerBlock.AGE, Integer.valueOf(5)), 2)) {
+                        this.placeDeadFlower(level, pos);
+                    }
+                    // CraftBukkit end
                 }
 
             }
@@ -273,8 +282,13 @@
     public void onProjectileHit(Level level, BlockState blockstate, BlockHitResult blockhitresult, Projectile projectile) {
         BlockPos blockpos = blockhitresult.getBlockPos();
 
-        if (!level.isClientSide && projectile.mayInteract(level, blockpos) && projectile.mayBreak(level)) {
-            level.destroyBlock(blockpos, true, projectile);
+        if (!level.isClientSide && projectile.mayInteract(level, blockposition) && projectile.mayBreak(level)) {
+            // CraftBukkit
+            if (!CraftEventFactory.callEntityChangeBlockEvent(projectile, blockposition, Blocks.AIR.defaultBlockState())) {
+                return;
+            }
+            // CraftBukkit end
+            level.destroyBlock(blockposition, true, projectile);
         }
 
     }
