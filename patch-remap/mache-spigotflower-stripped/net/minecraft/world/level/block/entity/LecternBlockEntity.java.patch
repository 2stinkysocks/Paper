--- a/net/minecraft/world/level/block/entity/LecternBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/LecternBlockEntity.java
@@ -24,16 +24,69 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec2;
 import net.minecraft.world.phys.Vec3;
+// CraftBukkit start
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import org.bukkit.Location;
+import org.bukkit.block.Lectern;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.util.CraftLocation;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.inventory.InventoryHolder;
+// CraftBukkit end
 
-public class LecternBlockEntity extends BlockEntity implements Clearable, MenuProvider {
+public class LecternBlockEntity extends BlockEntity implements Clearable, ITileInventory, CommandSource { // CraftBukkit - ICommandListener
 
     public static final int DATA_PAGE = 0;
     public static final int NUM_DATA = 1;
     public static final int SLOT_BOOK = 0;
     public static final int NUM_SLOTS = 1;
-    private final Container bookAccess = new Container() {
+    // CraftBukkit start - add fields and methods
+    public final Container bookAccess = new LecternInventory();
+    public class LecternInventory implements Container {
+
+        public List<HumanEntity> transaction = new ArrayList<>();
+        private int maxStack = 1;
+
         @Override
         @Override
+        public void onOpen(CraftHumanEntity who) {
+            transaction.add(who);
+        }
+
+        @Override
+        public void onClose(CraftHumanEntity who) {
+            transaction.remove(who);
+        }
+
+        @Override
+        public List<HumanEntity> getViewers() {
+            return transaction;
+        }
+
+        @Override
+        public void setMaxStackSize(int i) {
+            maxStack = i;
+        }
+
+        @Override
+        public Location getLocation() {
+            if (level == null) return null;
+            return CraftLocation.toBukkit(worldPosition, level.getWorld());
+        }
+
+        @Override
+        public InventoryHolder getOwner() {
+            return (Lectern) LecternBlockEntity.this.getOwner();
+        }
+
+        public LecternBlockEntity getLectern() {
+            return LecternBlockEntity.this;
+        }
+        // CraftBukkit end
+
+        @Override
         public int getContainerSize() {
             return 1;
         }
@@ -81,13 +134,21 @@
         }
 
         @Override
-        @Override
-        public void setItem(int i, ItemStack itemstack) {}
+        // CraftBukkit start
+        public void setItem(int slot, ItemStack stack) {
+            if (slot == 0) {
+                LecternBlockEntity.this.setBook(stack);
+                if (LecternBlockEntity.this.getLevel() != null) {
+                    LecternBlock.resetBookState(null, LecternBlockEntity.this.getLevel(), LecternBlockEntity.this.getBlockPos(), LecternBlockEntity.this.getBlockState(), LecternBlockEntity.this.hasBook());
+                }
+            }
+        }
+        // CraftBukkit end
 
         @Override
         @Override
         public int getMaxStackSize() {
-            return 1;
+            return maxStack; // CraftBukkit
         }
 
         @Override
@@ -174,7 +227,7 @@
         if (j != this.page) {
             this.page = j;
             this.setChanged();
-            LecternBlock.signalPageChange(this.getLevel(), this.getBlockPos(), this.getBlockState());
+            if (this.level != null) LecternBlock.signalPageChange(this.getLevel(), this.getBlockPos(), this.getBlockState()); // CraftBukkit
         }
 
     }
@@ -197,6 +250,32 @@
         return itemstack;
     }
 
+    // CraftBukkit start
+    @Override
+    public void sendSystemMessage(Component component) {
+    }
+
+    @Override
+    public org.bukkit.command.CommandSender getBukkitSender(CommandSourceStack wrapper) {
+        return wrapper.getEntity() != null ? wrapper.getEntity().getBukkitSender(wrapper) : new org.bukkit.craftbukkit.command.CraftBlockCommandSender(wrapper, this);
+    }
+
+    @Override
+    public boolean acceptsSuccess() {
+        return false;
+    }
+
+    @Override
+    public boolean acceptsFailure() {
+        return false;
+    }
+
+    @Override
+    public boolean shouldInformAdmins() {
+        return false;
+    }
+
+    // CraftBukkit end
     private CommandSourceStack createCommandSourceStack(@Nullable Player player) {
         String s;
         Object object;
@@ -211,7 +290,8 @@
 
         Vec3 vec3 = Vec3.atCenterOf(this.worldPosition);
 
-        return new CommandSourceStack(CommandSource.NULL, vec3, Vec2.ZERO, (ServerLevel) this.level, 2, s, (Component) object, this.level.getServer(), player);
+        // CraftBukkit - this
+        return new CommandSourceStack(this, vec3d, Vec2.ZERO, (ServerLevel) this.level, 2, s, (Component) object, this.level.getServer(), player);
     }
 
     @Override
@@ -252,9 +328,8 @@
     }
 
     @Override
-    @Override
-    public AbstractContainerMenu createMenu(int i, Inventory inventory, Player player) {
-        return new LecternMenu(i, this.bookAccess, this.dataAccess);
+    public AbstractContainerMenu createMenu(int containerId, Inventory playerInventory, Player player) {
+        return new LecternMenu(containerId, this.bookAccess, this.dataAccess, playerInventory); // CraftBukkit
     }
 
     @Override
