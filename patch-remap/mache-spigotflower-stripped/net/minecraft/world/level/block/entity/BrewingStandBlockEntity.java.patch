--- a/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
@@ -25,6 +25,20 @@
 import net.minecraft.world.level.block.BrewingStandBlock;
 import net.minecraft.world.level.block.state.BlockState;
 
+// CraftBukkit start
+import java.util.ArrayList;
+import java.util.List;
+import net.minecraft.server.MinecraftServer;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.block.BrewingStartEvent;
+import org.bukkit.event.inventory.BrewEvent;
+import org.bukkit.event.inventory.BrewingStandFuelEvent;
+import org.bukkit.inventory.InventoryHolder;
+// CraftBukkit end
+
 public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements WorldlyContainer {
 
     private static final int INGREDIENT_SLOT = 3;
@@ -42,9 +56,39 @@
     private Item ingredient;
     int fuel;
     protected final ContainerData dataAccess;
+    // CraftBukkit start - add fields and methods
+    private int lastTick = MinecraftServer.currentTick;
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = 64;
 
-    public BrewingStandBlockEntity(BlockPos blockpos, BlockState blockstate) {
-        super(BlockEntityType.BREWING_STAND, blockpos, blockstate);
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    public List<ItemStack> getContents() {
+        return this.items;
+    }
+
+    @Override
+    public int getMaxStackSize() {
+        return maxStack;
+    }
+
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+    // CraftBukkit end
+
+    public BrewingStandBlockEntity(BlockPos pos, IBlockData state) {
+        super(BlockEntityType.BREWING_STAND, pos, state);
         this.items = NonNullList.withSize(5, ItemStack.EMPTY);
         this.dataAccess = new ContainerData() {
             @Override
@@ -114,32 +152,52 @@
     public static void serverTick(Level level, BlockPos blockpos, BlockState blockstate, BrewingStandBlockEntity brewingstandblockentity) {
         ItemStack itemstack = (ItemStack) brewingstandblockentity.items.get(4);
 
-        if (brewingstandblockentity.fuel <= 0 && itemstack.is(Items.BLAZE_POWDER)) {
-            brewingstandblockentity.fuel = 20;
-            itemstack.shrink(1);
-            setChanged(level, blockpos, blockstate);
+        if (blockEntity.fuel <= 0 && itemstack.is(Items.BLAZE_POWDER)) {
+            // CraftBukkit start
+            BrewingStandFuelEvent event = new BrewingStandFuelEvent(CraftBlock.at(level, pos), CraftItemStack.asCraftMirror(itemstack), 20);
+            level.getCraftServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return;
+            }
+
+            blockEntity.fuel = event.getFuelPower();
+            if (blockEntity.fuel > 0 && event.isConsuming()) {
+                itemstack.shrink(1);
+            }
+            // CraftBukkit end
+            setChanged(level, pos, state);
         }
 
         boolean flag = isBrewable(brewingstandblockentity.items);
         boolean flag1 = brewingstandblockentity.brewTime > 0;
         ItemStack itemstack1 = (ItemStack) brewingstandblockentity.items.get(3);
 
+        // CraftBukkit start - Use wall time instead of ticks for brewing
+        int elapsedTicks = MinecraftServer.currentTick - blockEntity.lastTick;
+        blockEntity.lastTick = MinecraftServer.currentTick;
+
         if (flag1) {
-            --brewingstandblockentity.brewTime;
-            boolean flag2 = brewingstandblockentity.brewTime == 0;
+            blockEntity.brewTime -= elapsedTicks;
+            boolean flag2 = blockEntity.brewTime <= 0; // == -> <=
+            // CraftBukkit end
 
             if (flag2 && flag) {
-                doBrew(level, blockpos, brewingstandblockentity.items);
-                setChanged(level, blockpos, blockstate);
-            } else if (!flag || !itemstack1.is(brewingstandblockentity.ingredient)) {
-                brewingstandblockentity.brewTime = 0;
-                setChanged(level, blockpos, blockstate);
+                doBrew(level, pos, blockEntity.items, blockEntity); // CraftBukkit
+                setChanged(level, pos, state);
+            } else if (!flag || !itemstack1.is(blockEntity.ingredient)) {
+                blockEntity.brewTime = 0;
+                setChanged(level, pos, state);
             }
-        } else if (flag && brewingstandblockentity.fuel > 0) {
-            --brewingstandblockentity.fuel;
-            brewingstandblockentity.brewTime = 400;
-            brewingstandblockentity.ingredient = itemstack1.getItem();
-            setChanged(level, blockpos, blockstate);
+        } else if (flag && blockEntity.fuel > 0) {
+            --blockEntity.fuel;
+            // CraftBukkit start
+            BrewingStartEvent event = new BrewingStartEvent(CraftBlock.at(level, pos), CraftItemStack.asCraftMirror(itemstack1), 400);
+            level.getCraftServer().getPluginManager().callEvent(event);
+            blockEntity.brewTime = event.getTotalBrewTime(); // 400 -> event.getTotalBrewTime()
+            // CraftBukkit end
+            blockEntity.ingredient = itemstack1.getItem();
+            setChanged(level, pos, state);
         }
 
         boolean[] aboolean = brewingstandblockentity.getPotionBits();
@@ -193,13 +251,33 @@
         }
     }
 
-    private static void doBrew(Level level, BlockPos blockpos, NonNullList<ItemStack> nonnulllist) {
+    // CraftBukkit start
+    private static void doBrew(Level world, BlockPos blockposition, NonNullList<ItemStack> nonnulllist, BrewingStandBlockEntity tileentitybrewingstand) {
         ItemStack itemstack = (ItemStack) nonnulllist.get(3);
 
         for (int i = 0; i < 3; ++i) {
             nonnulllist.set(i, PotionBrewing.mix(itemstack, (ItemStack) nonnulllist.get(i)));
         }
 
+        if (owner != null) {
+            BrewEvent event = new BrewEvent(CraftBlock.at(world, blockposition), (org.bukkit.inventory.BrewerInventory) owner.getInventory(), brewResults, tileentitybrewingstand.fuel);
+            org.bukkit.Bukkit.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                return;
+            }
+        }
+        // CraftBukkit end
+
+        for (int i = 0; i < 3; ++i) {
+            // CraftBukkit start - validate index in case it is cleared by plugins
+            if (i < brewResults.size()) {
+                nonnulllist.set(i, CraftItemStack.asNMSCopy(brewResults.get(i)));
+            } else {
+                nonnulllist.set(i, ItemStack.EMPTY);
+            }
+            // CraftBukkit end
+        }
+
         itemstack.shrink(1);
         if (itemstack.getItem().hasCraftingRemainingItem()) {
             ItemStack itemstack1 = new ItemStack(itemstack.getItem().getCraftingRemainingItem());
