--- a/net/minecraft/world/level/chunk/storage/RegionFileStorage.java
+++ b/net/minecraft/world/level/chunk/storage/RegionFileStorage.java
@@ -30,8 +30,8 @@
         this.sync = flag;
     }
 
-    private RegionFile getRegionFile(ChunkPos chunkpos) throws IOException {
-        long i = ChunkPos.asLong(chunkpos.getRegionX(), chunkpos.getRegionZ());
+    private RegionFile getRegionFile(ChunkPos chunkcoordintpair, boolean existingOnly) throws IOException { // CraftBukkit
+        long i = ChunkPos.asLong(chunkcoordintpair.getRegionX(), chunkcoordintpair.getRegionZ());
         RegionFile regionfile = (RegionFile) this.regionCache.getAndMoveToFirst(i);
 
         if (regionfile != null) {
@@ -43,8 +43,9 @@
 
             FileUtil.createDirectoriesSafe(this.folder);
             Path path = this.folder;
-            int j = chunkpos.getRegionX();
-            Path path1 = path.resolve("r." + j + "." + chunkpos.getRegionZ() + ".mca");
+            int j = chunkcoordintpair.getRegionX();
+            Path path1 = path.resolve("r." + j + "." + chunkcoordintpair.getRegionZ() + ".mca");
+            if (existingOnly && !java.nio.file.Files.exists(path1)) return null; // CraftBukkit
             RegionFile regionfile1 = new RegionFile(path1, this.folder, this.sync);
 
             this.regionCache.putAndMoveToFirst(i, regionfile1);
@@ -53,9 +54,14 @@
     }
 
     @Nullable
-    public CompoundTag read(ChunkPos chunkpos) throws IOException {
-        RegionFile regionfile = this.getRegionFile(chunkpos);
-        DataInputStream datainputstream = regionfile.getChunkDataInputStream(chunkpos);
+    public CompoundTag read(ChunkPos chunkPos) throws IOException {
+        // CraftBukkit start - SPIGOT-5680: There's no good reason to preemptively create files on read, save that for writing
+        RegionFile regionfile = this.getRegionFile(chunkPos, true);
+        if (regionfile == null) {
+            return null;
+        }
+        // CraftBukkit end
+        DataInputStream datainputstream = regionfile.getChunkDataInputStream(chunkPos);
 
         CompoundTag compoundtag;
         label43:
@@ -93,9 +99,14 @@
         return compoundtag;
     }
 
-    public void scanChunk(ChunkPos chunkpos, StreamTagVisitor streamtagvisitor) throws IOException {
-        RegionFile regionfile = this.getRegionFile(chunkpos);
-        DataInputStream datainputstream = regionfile.getChunkDataInputStream(chunkpos);
+    public void scanChunk(ChunkPos chunkPos, StreamTagVisitor visitor) throws IOException {
+        // CraftBukkit start - SPIGOT-5680: There's no good reason to preemptively create files on read, save that for writing
+        RegionFile regionfile = this.getRegionFile(chunkPos, true);
+        if (regionfile == null) {
+            return;
+        }
+        // CraftBukkit end
+        DataInputStream datainputstream = regionfile.getChunkDataInputStream(chunkPos);
 
         try {
             if (datainputstream != null) {
@@ -119,8 +130,8 @@
 
     }
 
-    protected void write(ChunkPos chunkpos, @Nullable CompoundTag compoundtag) throws IOException {
-        RegionFile regionfile = this.getRegionFile(chunkpos);
+    protected void write(ChunkPos chunkPos, @Nullable CompoundTag chunkData) throws IOException {
+        RegionFile regionfile = this.getRegionFile(chunkPos, false); // CraftBukkit
 
         if (compoundtag == null) {
             regionfile.clear(chunkpos);
