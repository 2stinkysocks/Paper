--- a/net/minecraft/world/level/chunk/LevelChunkSection.java
+++ b/net/minecraft/world/level/chunk/LevelChunkSection.java
@@ -22,11 +22,13 @@
     private short nonEmptyBlockCount;
     private short tickingBlockCount;
     private short tickingFluidCount;
-    private final PalettedContainer<BlockState> states;
-    private PalettedContainerRO<Holder<Biome>> biomes;
+    private final PalettedContainer<IBlockData> states;
+    // CraftBukkit start - read/write
+    private PalettedContainer<Holder<Biome>> biomes;
 
-    public LevelChunkSection(PalettedContainer<BlockState> palettedcontainer, PalettedContainerRO<Holder<Biome>> palettedcontainerro) {
-        this.states = palettedcontainer;
+    public LevelChunkSection(PalettedContainer<IBlockData> datapaletteblock, PalettedContainer<Holder<Biome>> palettedcontainerro) {
+        // CraftBukkit end
+        this.states = datapaletteblock;
         this.biomes = palettedcontainerro;
         this.recalcBlockCounts();
     }
@@ -189,8 +190,14 @@
         return (Holder) this.biomes.get(i, j, k);
     }
 
-    public void fillBiomesFromNoise(BiomeResolver biomeresolver, Climate.Sampler climate_sampler, int i, int j, int k) {
-        PalettedContainer<Holder<Biome>> palettedcontainer = this.biomes.recreate();
+    // CraftBukkit start
+    public void setBiome(int i, int j, int k, Holder<Biome> biome) {
+        this.biomes.set(i, j, k, biome);
+    }
+    // CraftBukkit end
+
+    public void fillBiomesFromNoise(BiomeResolver biomeResolver, Climate.Sampler climateSampler, int x, int y, int z) {
+        PalettedContainer<Holder<Biome>> datapaletteblock = this.biomes.recreate();
         boolean flag = true;
 
         for (int l = 0; l < 4; ++l) {
