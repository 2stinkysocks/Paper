--- a/net/minecraft/world/entity/monster/EnderMan.java
+++ b/net/minecraft/world/entity/monster/EnderMan.java
@@ -71,6 +71,11 @@
 import net.minecraft.world.phys.Vec3;
 import org.joml.Vector3f;
 
+// CraftBukkit start;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+// CraftBukkit end
+
 public class EnderMan extends Monster implements NeutralMob {
 
     private static final UUID SPEED_MODIFIER_ATTACKING_UUID = UUID.fromString("020E0DFB-87AE-4653-9556-831010E291A0");
@@ -115,10 +119,19 @@
     }
 
     @Override
+    public void setTarget(@Nullable LivingEntity livingEntity) {
+        // CraftBukkit start - fire event
+        setTarget(livingEntity, EntityTargetEvent.TargetReason.UNKNOWN, true);
+    }
+
     @Override
-    public void setTarget(@Nullable LivingEntity livingentity) {
-        super.setTarget(livingentity);
-        AttributeInstance attributeinstance = this.getAttribute(Attributes.MOVEMENT_SPEED);
+    public boolean setTarget(LivingEntity entityliving, EntityTargetEvent.TargetReason reason, boolean fireEvent) {
+        if (!super.setTarget(entityliving, reason, fireEvent)) {
+            return false;
+        }
+        entityliving = getTarget();
+        // CraftBukkit end
+        AttributeInstance attributemodifiable = this.getAttribute(Attributes.MOVEMENT_SPEED);
 
         if (livingentity == null) {
             this.targetChangeTime = 0;
@@ -517,12 +506,14 @@
             BlockState blockstate1 = level.getBlockState(blockpos1);
             BlockState blockstate2 = this.enderman.getCarriedBlock();
 
-            if (blockstate2 != null) {
-                blockstate2 = Block.updateFromNeighbourShapes(blockstate2, this.enderman.level(), blockpos);
-                if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1)) {
-                    level.setBlock(blockpos, blockstate2, 3);
-                    level.gameEvent(GameEvent.BLOCK_PLACE, blockpos, GameEvent.Context.of(this.enderman, blockstate2));
-                    this.enderman.setCarriedBlock((BlockState) null);
+            if (iblockdata2 != null) {
+                iblockdata2 = Block.updateFromNeighbourShapes(iblockdata2, this.enderman.level(), blockposition);
+                if (this.canPlaceBlock(world, blockposition, iblockdata2, iblockdata, iblockdata1, blockposition1)) {
+                    if (CraftEventFactory.callEntityChangeBlockEvent(this.enderman, blockposition, iblockdata2)) { // CraftBukkit - Place event
+                    world.setBlock(blockposition, iblockdata2, 3);
+                    world.gameEvent(GameEvent.BLOCK_PLACE, blockposition, GameEvent.Context.of(this.enderman, iblockdata2));
+                    this.enderman.setCarriedBlock((IBlockData) null);
+                    } // CraftBukkit
                 }
 
             }
@@ -562,10 +551,12 @@
             BlockHitResult blockhitresult = level.clip(new ClipContext(vec3, vec31, ClipContext.Block.OUTLINE, ClipContext.Fluid.NONE, this.enderman));
             boolean flag = blockhitresult.getBlockPos().equals(blockpos);
 
-            if (blockstate.is(BlockTags.ENDERMAN_HOLDABLE) && flag) {
-                level.removeBlock(blockpos, false);
-                level.gameEvent(GameEvent.BLOCK_DESTROY, blockpos, GameEvent.Context.of(this.enderman, blockstate));
-                this.enderman.setCarriedBlock(blockstate.getBlock().defaultBlockState());
+            if (iblockdata.is(BlockTags.ENDERMAN_HOLDABLE) && flag) {
+                if (CraftEventFactory.callEntityChangeBlockEvent(this.enderman, blockposition, Blocks.AIR.defaultBlockState())) { // CraftBukkit - Place event
+                world.removeBlock(blockposition, false);
+                world.gameEvent(GameEvent.BLOCK_DESTROY, blockposition, GameEvent.Context.of(this.enderman, iblockdata));
+                this.enderman.setCarriedBlock(iblockdata.getBlock().defaultBlockState());
+                } // CraftBukkit
             }
 
         }
