--- a/net/minecraft/world/entity/npc/Villager.java
+++ b/net/minecraft/world/entity/npc/Villager.java
@@ -92,6 +92,13 @@
 import net.minecraft.world.phys.AABB;
 import org.slf4j.Logger;
 
+// CraftBukkit start
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTransformEvent;
+import org.bukkit.event.entity.VillagerReplenishTradeEvent;
+// CraftBukkit end
+
 public class Villager extends AbstractVillager implements ReputationEventHandler, VillagerDataHolder {
 
     private static final Logger LOGGER = LogUtils.getLogger();
@@ -238,7 +240,7 @@
                     this.increaseProfessionLevelOnUpdate = false;
                 }
 
-                this.addEffect(new MobEffectInstance(MobEffects.REGENERATION, 200, 0));
+                this.addEffect(new MobEffectInstance(MobEffects.REGENERATION, 200, 0), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.VILLAGER_TRADE); // CraftBukkit
             }
         }
 
@@ -372,7 +368,13 @@
         while (iterator.hasNext()) {
             MerchantOffer merchantoffer = (MerchantOffer) iterator.next();
 
-            merchantoffer.resetUses();
+            // CraftBukkit start
+            VillagerReplenishTradeEvent event = new VillagerReplenishTradeEvent((org.bukkit.entity.Villager) this.getBukkitEntity(), merchantrecipe.asBukkit());
+            Bukkit.getPluginManager().callEvent(event);
+            if (!event.isCancelled()) {
+                merchantrecipe.resetUses();
+            }
+            // CraftBukkit end
         }
 
         this.resendOffersToTradingPlayer();
@@ -441,7 +443,13 @@
             while (iterator.hasNext()) {
                 MerchantOffer merchantoffer = (MerchantOffer) iterator.next();
 
-                merchantoffer.resetUses();
+                // CraftBukkit start
+                VillagerReplenishTradeEvent event = new VillagerReplenishTradeEvent((org.bukkit.entity.Villager) this.getBukkitEntity(), merchantrecipe.asBukkit());
+                Bukkit.getPluginManager().callEvent(event);
+                if (!event.isCancelled()) {
+                    merchantrecipe.resetUses();
+                }
+                // CraftBukkit end
             }
         }
 
@@ -862,8 +852,13 @@
                     witch.setCustomNameVisible(this.isCustomNameVisible());
                 }
 
-                witch.setPersistenceRequired();
-                serverlevel.addFreshEntityWithPassengers(witch);
+                entitywitch.setPersistenceRequired();
+                // CraftBukkit start
+                if (CraftEventFactory.callEntityTransformEvent(this, entitywitch, EntityTransformEvent.TransformReason.LIGHTNING).isCancelled()) {
+                    return;
+                }
+                level.addFreshEntityWithPassengers(entitywitch, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.LIGHTNING);
+                // CraftBukkit end
                 this.releaseAllPois();
                 this.discard();
             } else {
@@ -965,7 +957,7 @@
             }).limit(5L).collect(Collectors.toList());
 
             if (list1.size() >= j) {
-                if (!SpawnUtil.trySpawnMob(EntityType.IRON_GOLEM, MobSpawnType.MOB_SUMMONED, serverlevel, this.blockPosition(), 10, 8, 6, SpawnUtil.Strategy.LEGACY_IRON_GOLEM).isEmpty()) {
+                if (!SpawnUtil.trySpawnMob(EntityType.IRON_GOLEM, EnumMobSpawn.MOB_SUMMONED, serverLevel, this.blockPosition(), 10, 8, 6, SpawnUtil.Strategy.LEGACY_IRON_GOLEM, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.VILLAGE_DEFENSE).isEmpty()) { // CraftBukkit
                     list.forEach(GolemSensor::golemDetected);
                 }
             }
