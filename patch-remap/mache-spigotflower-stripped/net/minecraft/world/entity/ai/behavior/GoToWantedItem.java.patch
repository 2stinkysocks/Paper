--- a/net/minecraft/world/entity/ai/behavior/GoToWantedItem.java
+++ b/net/minecraft/world/entity/ai/behavior/GoToWantedItem.java
@@ -27,11 +27,25 @@
                 return (serverlevel, livingentity, j) -> {
                     ItemEntity itementity = (ItemEntity) behaviorbuilder_instance.get(memoryaccessor2);
 
-                    if (behaviorbuilder_instance.tryGet(memoryaccessor3).isEmpty() && predicate.test(livingentity) && itementity.closerThan(livingentity, (double) i) && livingentity.level().getWorldBorder().isWithinBounds(itementity.blockPosition())) {
-                        WalkTarget walktarget = new WalkTarget(new EntityTracker(itementity, false), f, 0);
+                    if (behaviorbuilder_b.tryGet(memoryaccessor3).isEmpty() && canWalkToItem.test(entityliving) && entityitem.closerThan(entityliving, (double) maxDistToWalk) && entityliving.level().getWorldBorder().isWithinBounds(entityitem.blockPosition())) {
+                        // CraftBukkit start
+                        if (entityliving instanceof net.minecraft.world.entity.animal.allay.Allay) {
+                            org.bukkit.event.entity.EntityTargetEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTargetEvent(entityliving, entityitem, org.bukkit.event.entity.EntityTargetEvent.TargetReason.CLOSEST_ENTITY);
 
-                        memoryaccessor.set(new EntityTracker(itementity, true));
-                        memoryaccessor1.set(walktarget);
+                            if (event.isCancelled()) {
+                                return false;
+                            }
+                            if (!(event.getTarget() instanceof ItemEntity)) {
+                                memoryaccessor2.erase();
+                            }
+
+                            entityitem = (ItemEntity) ((org.bukkit.craftbukkit.entity.CraftEntity) event.getTarget()).getHandle();
+                        }
+                        // CraftBukkit end
+                        WalkTarget memorytarget = new WalkTarget(new EntityTracker(entityitem, false), speedModifier, 0);
+
+                        memoryaccessor.set(new EntityTracker(entityitem, true));
+                        memoryaccessor1.set(memorytarget);
                         return true;
                     } else {
                         return false;
