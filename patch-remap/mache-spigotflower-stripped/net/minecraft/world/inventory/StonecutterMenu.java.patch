--- a/net/minecraft/world/inventory/StonecutterMenu.java
+++ b/net/minecraft/world/inventory/StonecutterMenu.java
@@ -16,6 +15,13 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.Blocks;
 
+// CraftBukkit start
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.inventory.CraftInventoryStonecutter;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.entity.Player;
+// CraftBukkit end
+
 public class StonecutterMenu extends AbstractContainerMenu {
 
     public static final int INPUT_SLOT = 0;
@@ -35,10 +41,14 @@
     Runnable slotUpdateListener;
     public final Container container;
     final ResultContainer resultContainer;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private Player player;
 
     public StonecutterMenu(int i, Inventory inventory) {
         this(i, inventory, ContainerLevelAccess.NULL);
     }
+    // CraftBukkit end
 
     public StonecutterMenu(int i, Inventory inventory, final ContainerLevelAccess containerlevelaccess) {
         super(MenuType.STONECUTTER, i);
@@ -55,6 +75,13 @@
                 StonecutterMenu.this.slotsChanged(this);
                 StonecutterMenu.this.slotUpdateListener.run();
             }
+
+            // CraftBukkit start
+            @Override
+            public Location getLocation() {
+                return access.getLocation();
+            }
+            // CraftBukkit end
         };
         this.resultContainer = new ResultContainer();
         this.access = containerlevelaccess;
@@ -108,6 +133,7 @@
         }
 
         this.addDataSlot(this.selectedRecipeIndex);
+        player = (Player) playerInventory.player.getBukkitEntity(); // CraftBukkit
     }
 
     public int getSelectedRecipeIndex() {
@@ -127,8 +153,8 @@
     }
 
     @Override
-    @Override
-    public boolean stillValid(Player player) {
+    public boolean stillValid(net.minecraft.world.entity.player.Player player) {
+        if (!this.checkReachable) return true; // CraftBukkit
         return stillValid(this.access, player, Blocks.STONECUTTER);
     }
 
