--- a/net/minecraft/network/chat/TextColor.java
+++ b/net/minecraft/network/chat/TextColor.java
@@ -15,15 +16,18 @@
 public final class TextColor {
     private static final String CUSTOM_COLOR_PREFIX = "#";
     public static final Codec<TextColor> CODEC = Codec.STRING.comapFlatMap(TextColor::parseColor, TextColor::serialize);
-    private static final Map<ChatFormatting, TextColor> LEGACY_FORMAT_TO_COLOR = Stream.of(ChatFormatting.values())
-        .filter(ChatFormatting::isColor)
-        .collect(ImmutableMap.toImmutableMap(Function.identity(), chatFormatting -> new TextColor(chatFormatting.getColor(), chatFormatting.getName())));
-    private static final Map<String, TextColor> NAMED_COLORS = LEGACY_FORMAT_TO_COLOR.values()
-        .stream()
-        .collect(ImmutableMap.toImmutableMap(textColor -> textColor.name, Function.identity()));
+    private static final Map<ChatFormatting, TextColor> LEGACY_FORMAT_TO_COLOR = (Map) Stream.of(ChatFormatting.values()).filter(ChatFormatting::isColor).collect(ImmutableMap.toImmutableMap(Function.identity(), (enumchatformat) -> {
+        return new TextColor(enumchatformat.getColor(), enumchatformat.getName(), enumchatformat); // CraftBukkit
+    }));
+    private static final Map<String, TextColor> NAMED_COLORS = (Map) TextColor.LEGACY_FORMAT_TO_COLOR.values().stream().collect(ImmutableMap.toImmutableMap((chathexcolor) -> {
+        return chathexcolor.name;
+    }, Function.identity()));
     private final int value;
     @Nullable
-    private final String name;
+    public final String name;
+    // CraftBukkit start
+    @Nullable
+    public final ChatFormatting format;
 
     private TextColor(int value, String name) {
         this.value = value & 16777215;
@@ -34,6 +40,7 @@
         this.value = value & 16777215;
         this.name = null;
     }
+    // CraftBukkit end
 
     public int getValue() {
         return this.value;
