--- a/net/minecraft/server/network/ServerConfigurationPacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerConfigurationPacketListenerImpl.java
@@ -42,10 +44,10 @@
     private ConfigurationTask currentTask;
     private ClientInformation clientInformation;
 
-    public ServerConfigurationPacketListenerImpl(MinecraftServer minecraftServer, Connection connection, CommonListenerCookie commonListenerCookie) {
-        super(minecraftServer, connection, commonListenerCookie);
-        this.gameProfile = commonListenerCookie.gameProfile();
-        this.clientInformation = commonListenerCookie.clientInformation();
+    public ServerConfigurationPacketListenerImpl(MinecraftServer minecraftserver, Connection networkmanager, CommonListenerCookie commonlistenercookie, ServerPlayer player) { // CraftBukkit
+        super(minecraftserver, networkmanager, commonlistenercookie, player); // CraftBukkit
+        this.gameProfile = commonlistenercookie.gameProfile();
+        this.clientInformation = commonlistenercookie.clientInformation();
     }
 
     @Override
@@ -116,14 +117,16 @@
                 return;
             }
 
-            Component component = playerList.canPlayerLogin(this.connection.getRemoteAddress(), this.gameProfile);
-            if (component != null) {
-                this.disconnect(component);
+            Component ichatbasecomponent = null; // CraftBukkit - login checks already completed
+
+            if (ichatbasecomponent != null) {
+                this.disconnect(ichatbasecomponent);
                 return;
             }
 
-            ServerPlayer playerForLogin = playerList.getPlayerForLogin(this.gameProfile, this.clientInformation);
-            playerList.placeNewPlayer(this.connection, playerForLogin, this.createCookie(this.clientInformation));
+            ServerPlayer entityplayer = playerlist.getPlayerForLogin(this.gameProfile, this.clientInformation, this.player); // CraftBukkit
+
+            playerlist.placeNewPlayer(this.connection, entityplayer, this.createCookie(this.clientInformation));
             this.connection.resumeInboundAfterProtocolChange();
         } catch (Exception var5) {
             LOGGER.error("Couldn't place player in world", (Throwable)var5);
