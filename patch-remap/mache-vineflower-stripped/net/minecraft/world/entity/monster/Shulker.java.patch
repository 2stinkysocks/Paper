--- a/net/minecraft/world/entity/monster/Shulker.java
+++ b/net/minecraft/world/entity/monster/Shulker.java
@@ -56,7 +59,14 @@
 import net.minecraft.world.phys.Vec3;
 import org.joml.Vector3f;
 
-public class Shulker extends AbstractGolem implements VariantHolder<Optional<DyeColor>>, Enemy {
+// CraftBukkit start
+import org.bukkit.craftbukkit.util.CraftLocation;
+import org.bukkit.event.entity.EntityTeleportEvent;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+// CraftBukkit end
+
+public class Shulker extends AbstractGolem implements VariantHolder<Optional<DyeColor>>, IMonster {
+
     private static final UUID COVERED_ARMOR_MODIFIER_UUID = UUID.fromString("7E0292F2-9434-48D5-A29F-9583AF7DF27F");
     private static final AttributeModifier COVERED_ARMOR_MODIFIER = new AttributeModifier(
         COVERED_ARMOR_MODIFIER_UUID, "Covered armor bonus", 20.0, AttributeModifier.Operation.ADDITION
@@ -373,18 +399,21 @@
         if (!this.isNoAi() && this.isAlive()) {
             BlockPos blockPos = this.blockPosition();
 
-            for (int i = 0; i < 5; i++) {
-                BlockPos blockPos1 = blockPos.offset(
-                    Mth.randomBetweenInclusive(this.random, -8, 8),
-                    Mth.randomBetweenInclusive(this.random, -8, 8),
-                    Mth.randomBetweenInclusive(this.random, -8, 8)
-                );
-                if (blockPos1.getY() > this.level().getMinBuildHeight()
-                    && this.level().isEmptyBlock(blockPos1)
-                    && this.level().getWorldBorder().isWithinBounds(blockPos1)
-                    && this.level().noCollision(this, new AABB(blockPos1).deflate(1.0E-6))) {
-                    Direction direction = this.findAttachableSurface(blockPos1);
-                    if (direction != null) {
+            for (int i = 0; i < 5; ++i) {
+                BlockPos blockposition1 = blockposition.offset(Mth.randomBetweenInclusive(this.random, -8, 8), Mth.randomBetweenInclusive(this.random, -8, 8), Mth.randomBetweenInclusive(this.random, -8, 8));
+
+                if (blockposition1.getY() > this.level().getMinBuildHeight() && this.level().isEmptyBlock(blockposition1) && this.level().getWorldBorder().isWithinBounds(blockposition1) && this.level().noCollision(this, (new AABB(blockposition1)).deflate(1.0E-6D))) {
+                    Direction enumdirection = this.findAttachableSurface(blockposition1);
+
+                    if (enumdirection != null) {
+                        // CraftBukkit start
+                        EntityTeleportEvent teleportEvent = CraftEventFactory.callEntityTeleportEvent(this, blockposition1.getX(), blockposition1.getY(), blockposition1.getZ());
+                        if (teleportEvent.isCancelled()) {
+                            return false;
+                        } else {
+                            blockposition1 = CraftLocation.toBlockPosition(teleportEvent.getTo());
+                        }
+                        // CraftBukkit end
                         this.unRide();
                         this.setAttachFace(direction);
                         this.playSound(SoundEvents.SHULKER_TELEPORT, 1.0F, 1.0F);
@@ -443,14 +475,16 @@
         Vec3 vec3 = this.position();
         AABB boundingBox = this.getBoundingBox();
         if (!this.isClosed() && this.teleportSomewhere()) {
-            int size = this.level().getEntities(EntityType.SHULKER, boundingBox.inflate(8.0), Entity::isAlive).size();
-            float f = (float)(size - 1) / 5.0F;
-            if (!(this.level().random.nextFloat() < f)) {
-                Shulker shulker = EntityType.SHULKER.create(this.level());
-                if (shulker != null) {
-                    shulker.setVariant(this.getVariant());
-                    shulker.moveTo(vec3);
-                    this.level().addFreshEntity(shulker);
+            int i = this.level().getEntities((EntityTypeTest) EntityType.SHULKER, axisalignedbb.inflate(8.0D), Entity::isAlive).size();
+            float f = (float) (i - 1) / 5.0F;
+
+            if (this.level().random.nextFloat() >= f) {
+                Shulker entityshulker = (Shulker) EntityType.SHULKER.create(this.level());
+
+                if (entityshulker != null) {
+                    entityshulker.setVariant(this.getVariant());
+                    entityshulker.moveTo(vec3d);
+                    this.level().addFreshEntity(entityshulker, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.BREEDING); // CraftBukkit - the mysteries of life
                 }
             }
         }
