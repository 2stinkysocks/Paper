--- a/net/minecraft/world/entity/AreaEffectCloud.java
+++ b/net/minecraft/world/entity/AreaEffectCloud.java
@@ -28,6 +30,9 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.material.PushReaction;
 import org.slf4j.Logger;
+import org.bukkit.craftbukkit.entity.CraftLivingEntity;
+import org.bukkit.entity.LivingEntity;
+// CraftBukkit end
 
 public class AreaEffectCloud extends Entity implements TraceableEntity {
     private static final Logger LOGGER = LogUtils.getLogger();
@@ -251,12 +264,40 @@
                                 if (d7 <= (double)(radius * radius)) {
                                     this.victims.put(livingEntity, this.tickCount + this.reapplicationDelay);
 
-                                    for (MobEffectInstance mobEffectInstance1 : list) {
-                                        if (mobEffectInstance1.getEffect().isInstantenous()) {
-                                            mobEffectInstance1.getEffect()
-                                                .applyInstantenousEffect(this, this.getOwner(), livingEntity, mobEffectInstance1.getAmplifier(), 0.5);
+                    if (!list1.isEmpty()) {
+                        Iterator iterator1 = list1.iterator();
+
+                        List<LivingEntity> entities = new java.util.ArrayList<LivingEntity>(); // CraftBukkit
+                        while (iterator1.hasNext()) {
+                            net.minecraft.world.entity.LivingEntity entityliving = (net.minecraft.world.entity.LivingEntity) iterator1.next();
+
+                            if (!this.victims.containsKey(entityliving) && entityliving.isAffectedByPotions()) {
+                                double d6 = entityliving.getX() - this.getX();
+                                double d7 = entityliving.getZ() - this.getZ();
+                                double d8 = d6 * d6 + d7 * d7;
+
+                                if (d8 <= (double) (f * f)) {
+                                    // CraftBukkit start
+                                    entities.add((LivingEntity) entityliving.getBukkitEntity());
+                                }
+                            }
+                        }
+                        org.bukkit.event.entity.AreaEffectCloudApplyEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callAreaEffectCloudApplyEvent(this, entities);
+                        if (!event.isCancelled()) {
+                            for (LivingEntity entity : event.getAffectedEntities()) {
+                                if (entity instanceof CraftLivingEntity) {
+                                    net.minecraft.world.entity.LivingEntity entityliving = ((CraftLivingEntity) entity).getHandle();
+                                    // CraftBukkit end
+                                    this.victims.put(entityliving, this.tickCount + this.reapplicationDelay);
+                                    Iterator iterator2 = list.iterator();
+
+                                    while (iterator2.hasNext()) {
+                                        MobEffectInstance mobeffect1 = (MobEffectInstance) iterator2.next();
+
+                                        if (mobeffect1.getEffect().isInstantenous()) {
+                                            mobeffect1.getEffect().applyInstantenousEffect(this, this.getOwner(), entityliving, mobeffect1.getAmplifier(), 0.5D);
                                         } else {
-                                            livingEntity.addEffect(new MobEffectInstance(mobEffectInstance1), this);
+                                            entityliving.addEffect(new MobEffectInstance(mobeffect1), this, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.AREA_EFFECT_CLOUD); // CraftBukkit
                                         }
                                     }
 
