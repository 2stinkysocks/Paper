--- a/net/minecraft/world/entity/EntityType.java
+++ b/net/minecraft/world/entity/EntityType.java
@@ -168,26 +170,11 @@
     private final Holder.Reference<EntityType<?>> builtInRegistryHolder = BuiltInRegistries.ENTITY_TYPE.createIntrusiveHolder(this);
     private static final float MAGIC_HORSE_WIDTH = 1.3964844F;
     private static final int DISPLAY_TRACKING_RANGE = 10;
-    public static final EntityType<Allay> ALLAY = register(
-        "allay", EntityType.Builder.of(Allay::new, MobCategory.CREATURE).sized(0.35F, 0.6F).clientTrackingRange(8).updateInterval(2)
-    );
-    public static final EntityType<AreaEffectCloud> AREA_EFFECT_CLOUD = register(
-        "area_effect_cloud",
-        EntityType.Builder.<AreaEffectCloud>of(AreaEffectCloud::new, MobCategory.MISC)
-            .fireImmune()
-            .sized(6.0F, 0.5F)
-            .clientTrackingRange(10)
-            .updateInterval(Integer.MAX_VALUE)
-    );
-    public static final EntityType<ArmorStand> ARMOR_STAND = register(
-        "armor_stand", EntityType.Builder.<ArmorStand>of(ArmorStand::new, MobCategory.MISC).sized(0.5F, 1.975F).clientTrackingRange(10)
-    );
-    public static final EntityType<Arrow> ARROW = register(
-        "arrow", EntityType.Builder.<Arrow>of(Arrow::new, MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20)
-    );
-    public static final EntityType<Axolotl> AXOLOTL = register(
-        "axolotl", EntityType.Builder.of(Axolotl::new, MobCategory.AXOLOTLS).sized(0.75F, 0.42F).clientTrackingRange(10)
-    );
+    public static final EntityType<Allay> ALLAY = register("allay", EntityType.Builder.of(Allay::new, MobCategory.CREATURE).sized(0.35F, 0.6F).clientTrackingRange(8).updateInterval(2));
+    public static final EntityType<AreaEffectCloud> AREA_EFFECT_CLOUD = register("area_effect_cloud", EntityType.Builder.of(AreaEffectCloud::new, MobCategory.MISC).fireImmune().sized(6.0F, 0.5F).clientTrackingRange(10).updateInterval(10)); // CraftBukkit - SPIGOT-3729: track area effect clouds
+    public static final EntityType<ArmorStand> ARMOR_STAND = register("armor_stand", EntityType.Builder.of(ArmorStand::new, MobCategory.MISC).sized(0.5F, 1.975F).clientTrackingRange(10));
+    public static final EntityType<Arrow> ARROW = register("arrow", EntityType.Builder.of(Arrow::new, MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20));
+    public static final EntityType<Axolotl> AXOLOTL = register("axolotl", EntityType.Builder.of(Axolotl::new, MobCategory.AXOLOTLS).sized(0.75F, 0.42F).clientTrackingRange(10));
     public static final EntityType<Bat> BAT = register("bat", EntityType.Builder.of(Bat::new, MobCategory.AMBIENT).sized(0.5F, 0.9F).clientTrackingRange(5));
     public static final EntityType<Bee> BEE = register("bee", EntityType.Builder.of(Bee::new, MobCategory.CREATURE).sized(0.7F, 0.6F).clientTrackingRange(8));
     public static final EntityType<Blaze> BLAZE = register(
@@ -627,27 +342,27 @@
     }
 
     @Nullable
-    public T spawn(
-        ServerLevel serverLevel,
-        @Nullable ItemStack stack,
-        @Nullable Player player,
-        BlockPos pos,
-        MobSpawnType spawnType,
-        boolean shouldOffsetY,
-        boolean shouldOffsetYMore
-    ) {
-        Consumer<T> consumer;
-        CompoundTag tag;
-        if (stack != null) {
-            tag = stack.getTag();
-            consumer = createDefaultStackConfig(serverLevel, stack, player);
+    public T spawn(ServerLevel serverLevel, @Nullable ItemStack stack, @Nullable Player player, BlockPos pos, EnumMobSpawn spawnType, boolean shouldOffsetY, boolean shouldOffsetYMore) {
+        // CraftBukkit start
+        return this.spawn(serverLevel, stack, player, pos, spawnType, shouldOffsetY, shouldOffsetYMore, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SPAWNER_EGG);
+    }
+
+    @Nullable
+    public T spawn(ServerLevel worldserver, @Nullable ItemStack itemstack, @Nullable Player entityhuman, BlockPos blockposition, EnumMobSpawn enummobspawn, boolean flag, boolean flag1, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason spawnReason) {
+        // CraftBukkit end
+        CompoundTag nbttagcompound;
+        Consumer<T> consumer; // CraftBukkit - decompile error
+
+        if (itemstack != null) {
+            nbttagcompound = itemstack.getTag();
+            consumer = createDefaultStackConfig(worldserver, itemstack, entityhuman);
         } else {
             consumer = entity -> {
             };
             tag = null;
         }
 
-        return this.spawn(serverLevel, tag, consumer, pos, spawnType, shouldOffsetY, shouldOffsetYMore);
+        return this.spawn(worldserver, nbttagcompound, consumer, blockposition, enummobspawn, flag, flag1, spawnReason); // CraftBukkit
     }
 
     public static <T extends Entity> Consumer<T> createDefaultStackConfig(ServerLevel serverLevel, ItemStack stack, @Nullable Player player) {
@@ -665,31 +380,41 @@
         return stack.hasCustomHoverName() ? consumer.andThen(entity -> entity.setCustomName(stack.getHoverName())) : consumer;
     }
 
-    public static <T extends Entity> Consumer<T> appendCustomEntityStackConfig(
-        Consumer<T> consumer, ServerLevel level, ItemStack stack, @Nullable Player player
-    ) {
-        CompoundTag tag = stack.getTag();
-        return tag != null ? consumer.andThen(spawnedEntity -> updateCustomEntityTag(level, player, spawnedEntity, tag)) : consumer;
+    public static <T extends Entity> Consumer<T> appendCustomEntityStackConfig(Consumer<T> consumer, ServerLevel level, ItemStack stack, @Nullable Player player) {
+        CompoundTag nbttagcompound = stack.getTag();
+
+        return nbttagcompound != null ? consumer.andThen((entity) -> {
+            try { updateCustomEntityTag(level, player, entity, nbttagcompound); } catch (Throwable t) { LOGGER.warn("Error loading spawn egg NBT", t); } // CraftBukkit - SPIGOT-5665
+        }) : consumer;
     }
 
     @Nullable
-    public T spawn(ServerLevel level, BlockPos pos, MobSpawnType spawnType) {
-        return this.spawn(level, (CompoundTag)null, null, pos, spawnType, false, false);
+    public T spawn(ServerLevel level, BlockPos pos, EnumMobSpawn spawnType) {
+        // CraftBukkit start
+        return this.spawn(level, pos, spawnType, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DEFAULT);
     }
 
     @Nullable
-    public T spawn(
-        ServerLevel level,
-        @Nullable CompoundTag compound,
-        @Nullable Consumer<T> consumer,
-        BlockPos pos,
-        MobSpawnType spawnType,
-        boolean shouldOffsetY,
-        boolean shouldOffsetYMore
-    ) {
-        T entity = this.create(level, compound, consumer, pos, spawnType, shouldOffsetY, shouldOffsetYMore);
-        if (entity != null) {
-            level.addFreshEntityWithPassengers(entity);
+    public T spawn(ServerLevel worldserver, BlockPos blockposition, EnumMobSpawn enummobspawn, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason spawnReason) {
+        return this.spawn(worldserver, (CompoundTag) null, null, blockposition, enummobspawn, false, false, spawnReason); // CraftBukkit - decompile error
+        // CraftBukkit end
+    }
+
+    @Nullable
+    public T spawn(ServerLevel level, @Nullable CompoundTag compound, @Nullable Consumer<T> consumer, BlockPos pos, EnumMobSpawn spawnType, boolean shouldOffsetY, boolean shouldOffsetYMore) {
+        // CraftBukkit start
+        return this.spawn(level, compound, consumer, pos, spawnType, shouldOffsetY, shouldOffsetYMore, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DEFAULT);
+    }
+
+    @Nullable
+    public T spawn(ServerLevel worldserver, @Nullable CompoundTag nbttagcompound, @Nullable Consumer<T> consumer, BlockPos blockposition, EnumMobSpawn enummobspawn, boolean flag, boolean flag1, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason spawnReason) {
+        // CraftBukkit end
+        T t0 = this.create(worldserver, nbttagcompound, consumer, blockposition, enummobspawn, flag, flag1);
+
+        if (t0 != null) {
+            worldserver.addFreshEntityWithPassengers(t0, spawnReason);
+            return !t0.isRemoved() ? t0 : null; // Don't return an entity when CreatureSpawnEvent is canceled
+            // CraftBukkit end
         }
 
         return entity;
