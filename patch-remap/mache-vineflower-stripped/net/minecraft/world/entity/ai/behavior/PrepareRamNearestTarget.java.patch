--- a/net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget.java
+++ b/net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget.java
@@ -25,6 +30,10 @@
 import net.minecraft.world.level.pathfinder.Path;
 import net.minecraft.world.level.pathfinder.WalkNodeEvaluator;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.craftbukkit.entity.CraftLivingEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+// CraftBukkit end
 
 public class PrepareRamNearestTarget<E extends PathfinderMob> extends Behavior<E> {
     public static final int TIME_OUT_DURATION = 160;
@@ -71,10 +60,22 @@
 
     @Override
     protected void start(ServerLevel level, PathfinderMob entity, long gameTime) {
-        Brain<?> brain = entity.getBrain();
-        brain.getMemory(MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES)
-            .flatMap(memory -> memory.findClosest(entity1 -> this.ramTargeting.test(entity, entity1)))
-            .ifPresent(entity1 -> this.chooseRamPosition(entity, entity1));
+        Brain<?> behaviorcontroller = entity.getBrain();
+
+        behaviorcontroller.getMemory(MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).flatMap((nearestvisiblelivingentities) -> {
+            return nearestvisiblelivingentities.findClosest((entityliving) -> {
+                return this.ramTargeting.test(entity, entityliving);
+            });
+        }).ifPresent((entityliving) -> {
+            // CraftBukkit start
+            EntityTargetEvent event = CraftEventFactory.callEntityTargetLivingEvent(entity, entityliving, (entityliving instanceof ServerPlayer) ? EntityTargetEvent.TargetReason.CLOSEST_PLAYER : EntityTargetEvent.TargetReason.CLOSEST_ENTITY);
+            if (event.isCancelled() || event.getTarget() == null) {
+                return;
+            }
+            entityliving = ((CraftLivingEntity) event.getTarget()).getHandle();
+            // CraftBukkit end
+            this.chooseRamPosition(entity, entityliving);
+        });
     }
 
     @Override
