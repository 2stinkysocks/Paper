--- a/net/minecraft/world/entity/boss/enderdragon/EndCrystal.java
+++ b/net/minecraft/world/entity/boss/enderdragon/EndCrystal.java
@@ -18,6 +19,10 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.BaseFireBlock;
 import net.minecraft.world.level.dimension.end.EndDragonFight;
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
+// CraftBukkit end
 
 public class EndCrystal extends Entity {
     private static final EntityDataAccessor<Optional<BlockPos>> DATA_BEAM_TARGET = SynchedEntityData.defineId(
@@ -52,9 +56,14 @@
     public void tick() {
         this.time++;
         if (this.level() instanceof ServerLevel) {
-            BlockPos blockPos = this.blockPosition();
-            if (((ServerLevel)this.level()).getDragonFight() != null && this.level().getBlockState(blockPos).isAir()) {
-                this.level().setBlockAndUpdate(blockPos, BaseFireBlock.getState(this.level(), blockPos));
+            BlockPos blockposition = this.blockPosition();
+
+            if (((ServerLevel) this.level()).getDragonFight() != null && this.level().getBlockState(blockposition).isAir()) {
+                // CraftBukkit start
+                if (!CraftEventFactory.callBlockIgniteEvent(this.level(), blockposition, this).isCancelled()) {
+                    this.level().setBlockAndUpdate(blockposition, BaseFireBlock.getState(this.level(), blockposition));
+                }
+                // CraftBukkit end
             }
         }
     }
@@ -92,10 +103,23 @@
             return false;
         } else {
             if (!this.isRemoved() && !this.level().isClientSide) {
+                // CraftBukkit start - All non-living entities need this
+                if (CraftEventFactory.handleNonLivingEntityDamageEvent(this, source, amount, false)) {
+                    return false;
+                }
+                // CraftBukkit end
                 this.remove(Entity.RemovalReason.KILLED);
                 if (!source.is(DamageTypeTags.IS_EXPLOSION)) {
-                    DamageSource damageSource = source.getEntity() != null ? this.damageSources().explosion(this, source.getEntity()) : null;
-                    this.level().explode(this, damageSource, null, this.getX(), this.getY(), this.getZ(), 6.0F, false, Level.ExplosionInteraction.BLOCK);
+                    DamageSource damagesource1 = source.getEntity() != null ? this.damageSources().explosion(this, source.getEntity()) : null;
+
+                    // CraftBukkit start
+                    ExplosionPrimeEvent event = CraftEventFactory.callExplosionPrimeEvent(this, 6.0F, false);
+                    if (event.isCancelled()) {
+                        this.unsetRemoved();
+                        return false;
+                    }
+                    this.level().explode(this, damagesource1, (ExplosionDamageCalculator) null, this.getX(), this.getY(), this.getZ(), event.getRadius(), event.getFire(), Level.a.BLOCK);
+                    // CraftBukkit end
                 }
 
                 this.onDestroyedBy(source);
