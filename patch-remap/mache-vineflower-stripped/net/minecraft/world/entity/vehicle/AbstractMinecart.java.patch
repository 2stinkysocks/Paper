--- a/net/minecraft/world/entity/vehicle/AbstractMinecart.java
+++ b/net/minecraft/world/entity/vehicle/AbstractMinecart.java
@@ -46,6 +48,14 @@
 import net.minecraft.world.phys.Vec3;
 import org.joml.Vector3f;
 
+// CraftBukkit start
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.util.CraftLocation;
+import org.bukkit.entity.Vehicle;
+import org.bukkit.event.vehicle.VehicleEntityCollisionEvent;
+import org.bukkit.util.Vector;
+// CraftBukkit end
+
 public abstract class AbstractMinecart extends VehicleEntity {
     private static final float LOWERED_PASSENGER_ATTACHMENT_Y = 0.0F;
     private static final float PASSENGER_ATTACHMENT_Y = 0.1875F;
@@ -86,6 +96,17 @@
         map.put(RailShape.NORTH_EAST, Pair.of(normal2, normal1));
     });
 
+    // CraftBukkit start
+    public boolean slowWhenEmpty = true;
+    private double derailedX = 0.5;
+    private double derailedY = 0.5;
+    private double derailedZ = 0.5;
+    private double flyingX = 0.95;
+    private double flyingY = 0.95;
+    private double flyingZ = 0.95;
+    public double maxSpeed = 0.4D;
+    // CraftBukkit end
+
     protected AbstractMinecart(EntityType<?> entityType, Level level) {
         super(entityType, level);
         this.blocksBuilding = true;
@@ -230,6 +286,14 @@
 
     @Override
     public void tick() {
+        // CraftBukkit start
+        double prevX = this.getX();
+        double prevY = this.getY();
+        double prevZ = this.getZ();
+        float prevYaw = this.getYRot();
+        float prevPitch = this.getXRot();
+        // CraftBukkit end
+
         if (this.getHurtTime() > 0) {
             this.setHurtTime(this.getHurtTime() - 1);
         }
@@ -239,7 +303,7 @@
         }
 
         this.checkBelowWorld();
-        this.handleNetherPortal();
+        // this.handleNetherPortal(); // CraftBukkit - handled in postTick
         if (this.level().isClientSide) {
             if (this.lerpSteps > 0) {
                 this.lerpPositionAndRotationStep(this.lerpSteps, this.lerpX, this.lerpY, this.lerpZ, this.lerpYRot, this.lerpXRot);
@@ -291,17 +361,48 @@
             }
 
             this.setRot(this.getYRot(), this.getXRot());
-            if (this.getMinecartType() == AbstractMinecart.Type.RIDEABLE && this.getDeltaMovement().horizontalDistanceSqr() > 0.01) {
-                List<Entity> entities = this.level().getEntities(this, this.getBoundingBox().inflate(0.2F, 0.0, 0.2F), EntitySelector.pushableBy(this));
-                if (!entities.isEmpty()) {
-                    for (Entity entity : entities) {
-                        if (!(entity instanceof Player)
-                            && !(entity instanceof IronGolem)
-                            && !(entity instanceof AbstractMinecart)
-                            && !this.isVehicle()
-                            && !entity.isPassenger()) {
+            // CraftBukkit start
+            org.bukkit.World bworld = this.level().getWorld();
+            Location from = new Location(bworld, prevX, prevY, prevZ, prevYaw, prevPitch);
+            Location to = CraftLocation.toBukkit(this.position(), bworld, this.getYRot(), this.getXRot());
+            Vehicle vehicle = (Vehicle) this.getBukkitEntity();
+
+            this.level().getCraftServer().getPluginManager().callEvent(new org.bukkit.event.vehicle.VehicleUpdateEvent(vehicle));
+
+            if (!from.equals(to)) {
+                this.level().getCraftServer().getPluginManager().callEvent(new org.bukkit.event.vehicle.VehicleMoveEvent(vehicle, from, to));
+            }
+            // CraftBukkit end
+            if (this.getMinecartType() == AbstractMinecart.EnumMinecartType.RIDEABLE && this.getDeltaMovement().horizontalDistanceSqr() > 0.01D) {
+                List<Entity> list = this.level().getEntities((Entity) this, this.getBoundingBox().inflate(0.20000000298023224D, 0.0D, 0.20000000298023224D), EntitySelector.pushableBy(this));
+
+                if (!list.isEmpty()) {
+                    Iterator iterator = list.iterator();
+
+                    while (iterator.hasNext()) {
+                        Entity entity = (Entity) iterator.next();
+
+                        if (!(entity instanceof Player) && !(entity instanceof IronGolem) && !(entity instanceof AbstractMinecart) && !this.isVehicle() && !entity.isPassenger()) {
+                            // CraftBukkit start
+                            VehicleEntityCollisionEvent collisionEvent = new VehicleEntityCollisionEvent(vehicle, entity.getBukkitEntity());
+                            this.level().getCraftServer().getPluginManager().callEvent(collisionEvent);
+
+                            if (collisionEvent.isCancelled()) {
+                                continue;
+                            }
+                            // CraftBukkit end
                             entity.startRiding(this);
                         } else {
+                            // CraftBukkit start
+                            if (!this.isPassengerOfSameVehicle(entity)) {
+                                VehicleEntityCollisionEvent collisionEvent = new VehicleEntityCollisionEvent(vehicle, entity.getBukkitEntity());
+                                this.level().getCraftServer().getPluginManager().callEvent(collisionEvent);
+
+                                if (collisionEvent.isCancelled()) {
+                                    continue;
+                                }
+                            }
+                            // CraftBukkit end
                             entity.push(this);
                         }
                     }
@@ -309,6 +414,14 @@
             } else {
                 for (Entity entity1 : this.level().getEntities(this, this.getBoundingBox().inflate(0.2F, 0.0, 0.2F))) {
                     if (!this.hasPassenger(entity1) && entity1.isPushable() && entity1 instanceof AbstractMinecart) {
+                        // CraftBukkit start
+                        VehicleEntityCollisionEvent collisionEvent = new VehicleEntityCollisionEvent(vehicle, entity1.getBukkitEntity());
+                        this.level().getCraftServer().getPluginManager().callEvent(collisionEvent);
+
+                        if (collisionEvent.isCancelled()) {
+                            continue;
+                        }
+                        // CraftBukkit end
                         entity1.push(this);
                     }
                 }
@@ -325,7 +438,7 @@
     }
 
     protected double getMaxSpeed() {
-        return (this.isInWater() ? 4.0 : 8.0) / 20.0;
+        return (this.isInWater() ? this.maxSpeed / 2.0D: this.maxSpeed); // CraftBukkit
     }
 
     public void activateMinecart(int x, int y, int z, boolean powered) {
@@ -336,12 +449,16 @@
         Vec3 deltaMovement = this.getDeltaMovement();
         this.setDeltaMovement(Mth.clamp(deltaMovement.x, -maxSpeed, maxSpeed), deltaMovement.y, Mth.clamp(deltaMovement.z, -maxSpeed, maxSpeed));
         if (this.onGround()) {
-            this.setDeltaMovement(this.getDeltaMovement().scale(0.5));
+            // CraftBukkit start - replace magic numbers with our variables
+            this.setDeltaMovement(new Vec3(this.getDeltaMovement().x * this.derailedX, this.getDeltaMovement().y * this.derailedY, this.getDeltaMovement().z * this.derailedZ));
+            // CraftBukkit end
         }
 
         this.move(MoverType.SELF, this.getDeltaMovement());
         if (!this.onGround()) {
-            this.setDeltaMovement(this.getDeltaMovement().scale(0.95));
+            // CraftBukkit start - replace magic numbers with our variables
+            this.setDeltaMovement(new Vec3(this.getDeltaMovement().x * this.flyingX, this.getDeltaMovement().y * this.flyingY, this.getDeltaMovement().z * this.flyingZ));
+            // CraftBukkit end
         }
     }
 
@@ -514,9 +654,10 @@
     }
 
     protected void applyNaturalSlowdown() {
-        double d = this.isVehicle() ? 0.997 : 0.96;
-        Vec3 deltaMovement = this.getDeltaMovement();
-        Vec3 var4 = deltaMovement.multiply(d, 0.0, d);
+        double d0 = this.isVehicle() || !this.slowWhenEmpty ? 0.997D : 0.96D; // CraftBukkit - add !this.slowWhenEmpty
+        Vec3 vec3d = this.getDeltaMovement();
+
+        vec3d = vec3d.multiply(d0, 0.0D, d0);
         if (this.isInWater()) {
             var4 = var4.scale(0.95F);
         }
@@ -641,7 +793,15 @@
         if (!this.level().isClientSide) {
             if (!entity.noPhysics && !this.noPhysics) {
                 if (!this.hasPassenger(entity)) {
-                    double d = entity.getX() - this.getX();
+                    // CraftBukkit start
+                    VehicleEntityCollisionEvent collisionEvent = new VehicleEntityCollisionEvent((Vehicle) this.getBukkitEntity(), entity.getBukkitEntity());
+                    this.level().getCraftServer().getPluginManager().callEvent(collisionEvent);
+
+                    if (collisionEvent.isCancelled()) {
+                        return;
+                    }
+                    // CraftBukkit end
+                    double d0 = entity.getX() - this.getX();
                     double d1 = entity.getZ() - this.getZ();
                     double d2 = d * d + d1 * d1;
                     if (d2 >= 1.0E-4F) {
@@ -803,4 +975,26 @@
         HOPPER,
         COMMAND_BLOCK;
     }
+
+    // CraftBukkit start - Methods for getting and setting flying and derailed velocity modifiers
+    public Vector getFlyingVelocityMod() {
+        return new Vector(flyingX, flyingY, flyingZ);
+    }
+
+    public void setFlyingVelocityMod(Vector flying) {
+        flyingX = flying.getX();
+        flyingY = flying.getY();
+        flyingZ = flying.getZ();
+    }
+
+    public Vector getDerailedVelocityMod() {
+        return new Vector(derailedX, derailedY, derailedZ);
+    }
+
+    public void setDerailedVelocityMod(Vector derailed) {
+        derailedX = derailed.getX();
+        derailedY = derailed.getY();
+        derailedZ = derailed.getZ();
+    }
+    // CraftBukkit end
 }
