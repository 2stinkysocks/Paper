--- a/net/minecraft/world/level/block/DispenserBlock.java
+++ b/net/minecraft/world/level/block/DispenserBlock.java
@@ -48,6 +49,7 @@
         new Object2ObjectOpenHashMap<>(), map -> map.defaultReturnValue(new DefaultDispenseItemBehavior())
     );
     private static final int TRIGGER_DURATION = 4;
+    public static boolean eventFired = false; // CraftBukkit
 
     @Override
     public MapCodec<? extends DispenserBlock> codec() {
@@ -93,10 +98,12 @@
                 serverLevel.levelEvent(1001, blockPos, 0);
                 serverLevel.gameEvent(GameEvent.BLOCK_ACTIVATE, blockPos, GameEvent.Context.of(dispenserBlockEntity.getBlockState()));
             } else {
-                ItemStack item = dispenserBlockEntity.getItem(randomSlot);
-                DispenseItemBehavior dispenseMethod = this.getDispenseMethod(item);
-                if (dispenseMethod != DispenseItemBehavior.NOOP) {
-                    dispenserBlockEntity.setItem(randomSlot, dispenseMethod.dispense(blockSource, item));
+                ItemStack itemstack = tileentitydispenser.getItem(i);
+                DispenseItemBehavior idispensebehavior = this.getDispenseMethod(itemstack);
+
+                if (idispensebehavior != DispenseItemBehavior.NOOP) {
+                    eventFired = false; // CraftBukkit - reset event status
+                    tileentitydispenser.setItem(i, idispensebehavior.dispense(sourceblock, itemstack));
                 }
             }
         }
