--- a/net/minecraft/world/level/block/RedstoneTorchBlock.java
+++ b/net/minecraft/world/level/block/RedstoneTorchBlock.java
@@ -17,6 +18,7 @@
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
+import org.bukkit.event.block.BlockRedstoneEvent; // CraftBukkit
 
 public class RedstoneTorchBlock extends BaseTorchBlock {
     public static final MapCodec<RedstoneTorchBlock> CODEC = simpleCodec(RedstoneTorchBlock::new);
@@ -71,16 +86,41 @@
             list.remove(0);
         }
 
-        if (state.getValue(LIT)) {
-            if (hasNeighborSignal) {
-                level.setBlock(pos, state.setValue(LIT, Boolean.valueOf(false)), 3);
+        // CraftBukkit start
+        org.bukkit.plugin.PluginManager manager = level.getCraftServer().getPluginManager();
+        org.bukkit.block.Block block = level.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+        int oldCurrent = ((Boolean) state.getValue(RedstoneTorchBlock.LIT)).booleanValue() ? 15 : 0;
+
+        BlockRedstoneEvent event = new BlockRedstoneEvent(block, oldCurrent, oldCurrent);
+        // CraftBukkit end
+        if ((Boolean) state.getValue(RedstoneTorchBlock.LIT)) {
+            if (flag) {
+                // CraftBukkit start
+                if (oldCurrent != 0) {
+                    event.setNewCurrent(0);
+                    manager.callEvent(event);
+                    if (event.getNewCurrent() != 0) {
+                        return;
+                    }
+                }
+                // CraftBukkit end
+                level.setBlock(pos, (IBlockData) state.setValue(RedstoneTorchBlock.LIT, false), 3);
                 if (isToggledTooFrequently(level, pos, true)) {
                     level.levelEvent(1502, pos, 0);
                     level.scheduleTick(pos, level.getBlockState(pos).getBlock(), 160);
                 }
             }
-        } else if (!hasNeighborSignal && !isToggledTooFrequently(level, pos, false)) {
-            level.setBlock(pos, state.setValue(LIT, Boolean.valueOf(true)), 3);
+        } else if (!flag && !isToggledTooFrequently(level, pos, false)) {
+            // CraftBukkit start
+            if (oldCurrent != 15) {
+                event.setNewCurrent(15);
+                manager.callEvent(event);
+                if (event.getNewCurrent() != 15) {
+                    return;
+                }
+            }
+            // CraftBukkit end
+            level.setBlock(pos, (IBlockData) state.setValue(RedstoneTorchBlock.LIT, true), 3);
         }
     }
 
