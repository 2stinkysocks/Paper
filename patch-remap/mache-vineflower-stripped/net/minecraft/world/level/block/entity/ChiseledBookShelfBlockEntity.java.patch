--- a/net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity.java
@@ -17,13 +18,55 @@
 import net.minecraft.world.level.gameevent.GameEvent;
 import org.slf4j.Logger;
 
+// CraftBukkit start
+import java.util.List;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
+// CraftBukkit end
+
 public class ChiseledBookShelfBlockEntity extends BlockEntity implements Container {
     public static final int MAX_BOOKS_IN_STORAGE = 6;
     private static final Logger LOGGER = LogUtils.getLogger();
-    private final NonNullList<ItemStack> items = NonNullList.withSize(6, ItemStack.EMPTY);
-    private int lastInteractedSlot = -1;
+    private final NonNullList<ItemStack> items;
+    public int lastInteractedSlot;
+    // CraftBukkit start - add fields and methods
+    public List<HumanEntity> transaction = new java.util.ArrayList<>();
+    private int maxStack = 1;
 
-    public ChiseledBookShelfBlockEntity(BlockPos pos, BlockState state) {
+    @Override
+    public List<ItemStack> getContents() {
+        return this.items;
+    }
+
+    @Override
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    @Override
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    @Override
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    @Override
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+
+    @Override
+    public Location getLocation() {
+        if (level == null) return null;
+        return new org.bukkit.Location(level.getWorld(), worldPosition.getX(), worldPosition.getY(), worldPosition.getZ());
+    }
+    // CraftBukkit end
+
+    public ChiseledBookShelfBlockEntity(BlockPos pos, IBlockData state) {
         super(BlockEntityType.CHISELED_BOOKSHELF, pos, state);
     }
 
@@ -47,6 +94,7 @@
 
     @Override
     public void load(CompoundTag tag) {
+        super.load(tag); // CraftBukkit - SPIGOT-7393: Load super Bukkit data
         this.items.clear();
         ContainerHelper.loadAllItems(tag, this.items);
         this.lastInteractedSlot = tag.getInt("last_interacted_slot");
@@ -86,8 +135,8 @@
     public ItemStack removeItem(int slot, int amount) {
         ItemStack itemStack = Objects.requireNonNullElse(this.items.get(slot), ItemStack.EMPTY);
         this.items.set(slot, ItemStack.EMPTY);
-        if (!itemStack.isEmpty()) {
-            this.updateState(slot);
+        if (!itemstack.isEmpty()) {
+            if (level != null) this.updateState(slot); // CraftBukkit - SPIGOT-7381: check for null world
         }
 
         return itemStack;
@@ -102,7 +151,7 @@
     public void setItem(int slot, ItemStack stack) {
         if (stack.is(ItemTags.BOOKSHELF_BOOKS)) {
             this.items.set(slot, stack);
-            this.updateState(slot);
+            if (level != null) this.updateState(slot); // CraftBukkit - SPIGOT-7381: check for null world
         } else if (stack.isEmpty()) {
             this.removeItem(slot, 1);
         }
@@ -119,7 +167,7 @@
 
     @Override
     public int getMaxStackSize() {
-        return 1;
+        return maxStack; // CraftBukkit
     }
 
     @Override
