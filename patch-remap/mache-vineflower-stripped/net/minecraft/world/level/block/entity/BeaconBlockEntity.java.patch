--- a/net/minecraft/world/level/block/entity/BeaconBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BeaconBlockEntity.java
@@ -38,6 +39,10 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.phys.AABB;
+// CraftBukkit start
+import org.bukkit.craftbukkit.potion.CraftPotionUtil;
+import org.bukkit.potion.PotionEffect;
+// CraftBukkit end
 
 public class BeaconBlockEntity extends BlockEntity implements MenuProvider, Nameable {
     private static final int MAX_LEVELS = 4;
@@ -65,29 +66,18 @@
     @Nullable
     MobEffect secondaryPower;
     @Nullable
-    private Component name;
-    private LockCode lockKey = LockCode.NO_LOCK;
-    private final ContainerData dataAccess = new ContainerData() {
-        @Override
-        public int get(int index) {
-            return switch (index) {
-                case 0 -> BeaconBlockEntity.this.levels;
-                case 1 -> BeaconMenu.encodeEffect(BeaconBlockEntity.this.primaryPower);
-                case 2 -> BeaconMenu.encodeEffect(BeaconBlockEntity.this.secondaryPower);
-                default -> 0;
-            };
-        }
+    public Component name;
+    public LockCode lockKey;
+    private final ContainerData dataAccess;
+    // CraftBukkit start - add fields and methods
+    public PotionEffect getPrimaryEffect() {
+        return (this.primaryPower != null) ? CraftPotionUtil.toBukkit(new MobEffectInstance(this.primaryPower, getLevel(this.levels), getAmplification(levels, primaryPower, secondaryPower), true, true)) : null;
+    }
 
-        @Override
-        public void set(int index, int value) {
-            switch (index) {
-                case 0:
-                    BeaconBlockEntity.this.levels = value;
-                    break;
-                case 1:
-                    if (!BeaconBlockEntity.this.level.isClientSide && !BeaconBlockEntity.this.beamSections.isEmpty()) {
-                        BeaconBlockEntity.playSound(BeaconBlockEntity.this.level, BeaconBlockEntity.this.worldPosition, SoundEvents.BEACON_POWER_SELECT);
-                    }
+    public PotionEffect getSecondaryEffect() {
+        return (hasSecondaryEffect(levels, primaryPower, secondaryPower)) ? CraftPotionUtil.toBukkit(new MobEffectInstance(this.secondaryPower, getLevel(this.levels), getAmplification(levels, primaryPower, secondaryPower), true, true)) : null;
+    }
+    // CraftBukkit end
 
                     BeaconBlockEntity.this.primaryPower = BeaconBlockEntity.filterEffect(BeaconMenu.decodeEffect(value));
                     break;
@@ -232,12 +258,13 @@
         super.setRemoved();
     }
 
-    private static void applyEffects(Level level, BlockPos pos, int levels, @Nullable MobEffect primary, @Nullable MobEffect secondary) {
-        if (!level.isClientSide && primary != null) {
-            double d = (double)(levels * 10 + 10);
-            int i = 0;
-            if (levels >= 4 && primary == secondary) {
-                i = 1;
+    // CraftBukkit start - split into components
+    private static byte getAmplification(int i, @Nullable MobEffect mobeffectlist, @Nullable MobEffect mobeffectlist1) {
+        {
+            byte b0 = 0;
+
+            if (i >= 4 && mobeffectlist == mobeffectlist1) {
+                b0 = 1;
             }
 
             int i1 = (9 + levels * 2) * 20;
@@ -256,6 +312,24 @@
         }
     }
 
+    private static void applyEffects(Level level, BlockPos pos, int levels, @Nullable MobEffect primary, @Nullable MobEffect secondary) {
+        if (!level.isClientSide && primary != null) {
+            double d0 = (double) (levels * 10 + 10);
+            byte b0 = getAmplification(levels, primary, secondary);
+
+            int j = getLevel(levels);
+            List list = getHumansInRange(level, pos, levels);
+
+            applyEffect(list, primary, j, b0);
+
+            if (hasSecondaryEffect(levels, primary, secondary)) {
+                applyEffect(list, secondary, j, 0);
+            }
+        }
+
+    }
+    // CraftBukkit end
+
     public static void playSound(Level level, BlockPos pos, SoundEvent sound) {
         level.playSound(null, pos, sound, SoundSource.BLOCKS, 1.0F, 1.0F);
     }
@@ -284,10 +360,11 @@
     }
 
     @Nullable
-    private static MobEffect loadEffect(CompoundTag compoundTag, String string) {
-        if (compoundTag.contains(string, 8)) {
-            ResourceLocation resourceLocation = ResourceLocation.tryParse(compoundTag.getString(string));
-            return filterEffect(BuiltInRegistries.MOB_EFFECT.get(resourceLocation));
+    private static MobEffect loadEffect(CompoundTag nbttagcompound, String s) {
+        if (nbttagcompound.contains(s, 8)) {
+            ResourceLocation minecraftkey = ResourceLocation.tryParse(nbttagcompound.getString(s));
+
+            return (MobEffect) BuiltInRegistries.MOB_EFFECT.get(minecraftkey); // CraftBukkit - persist manually set non-default beacon effects (SPIGOT-3598)
         } else {
             return null;
         }
@@ -298,6 +375,7 @@
         super.load(tag);
         this.primaryPower = loadEffect(tag, "primary_effect");
         this.secondaryPower = loadEffect(tag, "secondary_effect");
+        this.levels = tag.getInt("Levels"); // CraftBukkit - SPIGOT-5053, use where available
         if (tag.contains("CustomName", 8)) {
             this.name = Component.Serializer.fromJson(tag.getString("CustomName"));
         }
