--- a/net/minecraft/world/level/block/entity/CrafterBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/CrafterBlockEntity.java
@@ -20,7 +21,14 @@
 import net.minecraft.world.level.block.CrafterBlock;
 import net.minecraft.world.level.block.state.BlockState;
 
-public class CrafterBlockEntity extends RandomizableContainerBlockEntity implements CraftingContainer {
+// CraftBukkit start
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
+// CraftBukkit end
+
+public class CrafterBlockEntity extends RandomizableContainerBlockEntity implements InventoryCrafting {
+
     public static final int CONTAINER_WIDTH = 3;
     public static final int CONTAINER_HEIGHT = 3;
     public static final int CONTAINER_SIZE = 9;
@@ -28,23 +36,61 @@
     public static final int SLOT_ENABLED = 0;
     public static final int DATA_TRIGGERED = 9;
     public static final int NUM_DATA = 10;
-    private NonNullList<ItemStack> items = NonNullList.withSize(9, ItemStack.EMPTY);
-    private int craftingTicksRemaining = 0;
-    protected final ContainerData containerData = new ContainerData() {
-        private final int[] slotStates = new int[9];
-        private int triggered = 0;
+    private NonNullList<ItemStack> items;
+    public int craftingTicksRemaining;
+    protected final ContainerData containerData;
+    // CraftBukkit start - add fields and methods
+    public List<HumanEntity> transaction = new java.util.ArrayList<>();
+    private int maxStack = 1;
 
         @Override
         public int get(int index) {
             return index == 9 ? this.triggered : this.slotStates[index];
         }
 
-        @Override
-        public void set(int index, int value) {
-            if (index == 9) {
-                this.triggered = value;
-            } else {
-                this.slotStates[index] = value;
+    @Override
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    @Override
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    @Override
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    @Override
+    public int getMaxStackSize() {
+        return maxStack;
+    }
+
+    @Override
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+
+    @Override
+    public Location getLocation() {
+        if (level == null) return null;
+        return new org.bukkit.Location(level.getWorld(), worldPosition.getX(), worldPosition.getY(), worldPosition.getZ());
+    }
+    // CraftBukkit end
+
+    public CrafterBlockEntity(BlockPos blockposition, IBlockData iblockdata) {
+        super(BlockEntityType.CRAFTER, blockposition, iblockdata);
+        this.items = NonNullList.withSize(9, ItemStack.EMPTY);
+        this.craftingTicksRemaining = 0;
+        this.containerData = new ContainerData() {
+            private final int[] slotStates = new int[9];
+            private int triggered = 0;
+
+            @Override
+            public int get(int index) {
+                return index == 9 ? this.triggered : this.slotStates[index];
             }
         }
 
