--- a/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BrewingStandBlockEntity.java
@@ -24,6 +25,20 @@
 import net.minecraft.world.level.block.BrewingStandBlock;
 import net.minecraft.world.level.block.state.BlockState;
 
+// CraftBukkit start
+import java.util.ArrayList;
+import java.util.List;
+import net.minecraft.server.MinecraftServer;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.block.BrewingStartEvent;
+import org.bukkit.event.inventory.BrewEvent;
+import org.bukkit.event.inventory.BrewingStandFuelEvent;
+import org.bukkit.inventory.InventoryHolder;
+// CraftBukkit end
+
 public class BrewingStandBlockEntity extends BaseContainerBlockEntity implements WorldlyContainer {
     private static final int INGREDIENT_SLOT = 3;
     private static final int FUEL_SLOT = 4;
@@ -38,19 +54,12 @@
     int brewTime;
     private boolean[] lastPotionCount;
     private Item ingredient;
-    int fuel;
-    protected final ContainerData dataAccess = new ContainerData() {
-        @Override
-        public int get(int index) {
-            switch (index) {
-                case 0:
-                    return BrewingStandBlockEntity.this.brewTime;
-                case 1:
-                    return BrewingStandBlockEntity.this.fuel;
-                default:
-                    return 0;
-            }
-        }
+    public int fuel;
+    protected final ContainerData dataAccess;
+    // CraftBukkit start - add fields and methods
+    private int lastTick = MinecraftServer.currentTick;
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = 64;
 
         @Override
         public void set(int index, int value) {
@@ -69,7 +69,25 @@
         }
     };
 
-    public BrewingStandBlockEntity(BlockPos pos, BlockState state) {
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    public List<ItemStack> getContents() {
+        return this.items;
+    }
+
+    @Override
+    public int getMaxStackSize() {
+        return maxStack;
+    }
+
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+    // CraftBukkit end
+
+    public BrewingStandBlockEntity(BlockPos pos, IBlockData state) {
         super(BlockEntityType.BREWING_STAND, pos, state);
     }
 
@@ -94,31 +149,54 @@
         return true;
     }
 
-    public static void serverTick(Level level, BlockPos pos, BlockState state, BrewingStandBlockEntity blockEntity) {
-        ItemStack itemStack = blockEntity.items.get(4);
-        if (blockEntity.fuel <= 0 && itemStack.is(Items.BLAZE_POWDER)) {
-            blockEntity.fuel = 20;
-            itemStack.shrink(1);
+    public static void serverTick(Level level, BlockPos pos, IBlockData state, BrewingStandBlockEntity blockEntity) {
+        ItemStack itemstack = (ItemStack) blockEntity.items.get(4);
+
+        if (blockEntity.fuel <= 0 && itemstack.is(Items.BLAZE_POWDER)) {
+            // CraftBukkit start
+            BrewingStandFuelEvent event = new BrewingStandFuelEvent(CraftBlock.at(level, pos), CraftItemStack.asCraftMirror(itemstack), 20);
+            level.getCraftServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return;
+            }
+
+            blockEntity.fuel = event.getFuelPower();
+            if (blockEntity.fuel > 0 && event.isConsuming()) {
+                itemstack.shrink(1);
+            }
+            // CraftBukkit end
             setChanged(level, pos, state);
         }
 
-        boolean isBrewable = isBrewable(blockEntity.items);
-        boolean flag = blockEntity.brewTime > 0;
-        ItemStack itemStack1 = blockEntity.items.get(3);
-        if (flag) {
-            blockEntity.brewTime--;
-            boolean flag1 = blockEntity.brewTime == 0;
-            if (flag1 && isBrewable) {
-                doBrew(level, pos, blockEntity.items);
+        boolean flag = isBrewable(blockEntity.items);
+        boolean flag1 = blockEntity.brewTime > 0;
+        ItemStack itemstack1 = (ItemStack) blockEntity.items.get(3);
+
+        // CraftBukkit start - Use wall time instead of ticks for brewing
+        int elapsedTicks = MinecraftServer.currentTick - blockEntity.lastTick;
+        blockEntity.lastTick = MinecraftServer.currentTick;
+
+        if (flag1) {
+            blockEntity.brewTime -= elapsedTicks;
+            boolean flag2 = blockEntity.brewTime <= 0; // == -> <=
+            // CraftBukkit end
+
+            if (flag2 && flag) {
+                doBrew(level, pos, blockEntity.items, blockEntity); // CraftBukkit
                 setChanged(level, pos, state);
             } else if (!isBrewable || !itemStack1.is(blockEntity.ingredient)) {
                 blockEntity.brewTime = 0;
                 setChanged(level, pos, state);
             }
-        } else if (isBrewable && blockEntity.fuel > 0) {
-            blockEntity.fuel--;
-            blockEntity.brewTime = 400;
-            blockEntity.ingredient = itemStack1.getItem();
+        } else if (flag && blockEntity.fuel > 0) {
+            --blockEntity.fuel;
+            // CraftBukkit start
+            BrewingStartEvent event = new BrewingStartEvent(CraftBlock.at(level, pos), CraftItemStack.asCraftMirror(itemstack1), 400);
+            level.getCraftServer().getPluginManager().callEvent(event);
+            blockEntity.brewTime = event.getTotalBrewTime(); // 400 -> event.getTotalBrewTime()
+            // CraftBukkit end
+            blockEntity.ingredient = itemstack1.getItem();
             setChanged(level, pos, state);
         }
 
@@ -168,21 +251,33 @@
         }
     }
 
-    private static void doBrew(Level level, BlockPos pos, NonNullList<ItemStack> items) {
-        ItemStack itemStack = items.get(3);
+    // CraftBukkit start
+    private static void doBrew(Level world, BlockPos blockposition, NonNullList<ItemStack> nonnulllist, BrewingStandBlockEntity tileentitybrewingstand) {
+        ItemStack itemstack = (ItemStack) nonnulllist.get(3);
+        InventoryHolder owner = tileentitybrewingstand.getOwner();
+        List<org.bukkit.inventory.ItemStack> brewResults = new ArrayList<>(3);
 
         for (int i = 0; i < 3; i++) {
             items.set(i, PotionBrewing.mix(itemStack, items.get(i)));
         }
 
-        itemStack.shrink(1);
-        if (itemStack.getItem().hasCraftingRemainingItem()) {
-            ItemStack itemStack1 = new ItemStack(itemStack.getItem().getCraftingRemainingItem());
-            if (itemStack.isEmpty()) {
-                itemStack = itemStack1;
+        if (owner != null) {
+            BrewEvent event = new BrewEvent(CraftBlock.at(world, blockposition), (org.bukkit.inventory.BrewerInventory) owner.getInventory(), brewResults, tileentitybrewingstand.fuel);
+            org.bukkit.Bukkit.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                return;
+            }
+        }
+        // CraftBukkit end
+
+        for (int i = 0; i < 3; ++i) {
+            // CraftBukkit start - validate index in case it is cleared by plugins
+            if (i < brewResults.size()) {
+                nonnulllist.set(i, CraftItemStack.asNMSCopy(brewResults.get(i)));
             } else {
                 Containers.dropItemStack(level, (double)pos.getX(), (double)pos.getY(), (double)pos.getZ(), itemStack1);
             }
+            // CraftBukkit end
         }
 
         items.set(3, itemStack);
