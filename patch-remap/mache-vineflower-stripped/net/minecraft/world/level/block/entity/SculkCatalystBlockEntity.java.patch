--- a/net/minecraft/world/level/block/entity/SculkCatalystBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/SculkCatalystBlockEntity.java
@@ -29,14 +32,18 @@
     public SculkCatalystBlockEntity(BlockPos pos, BlockState blockState) {
         super(BlockEntityType.SCULK_CATALYST, pos, blockState);
         this.catalystListener = new SculkCatalystBlockEntity.CatalystListener(blockState, new BlockPositionSource(pos));
+        catalystListener.level = level; // CraftBukkit
     }
 
-    public static void serverTick(Level level, BlockPos pos, BlockState state, SculkCatalystBlockEntity sculkCatalyst) {
+    public static void serverTick(Level level, BlockPos pos, IBlockData state, SculkCatalystBlockEntity sculkCatalyst) {
+        org.bukkit.craftbukkit.event.CraftEventFactory.sourceBlockOverride = sculkCatalyst.getBlockPos(); // CraftBukkit - SPIGOT-7068: Add source block override, not the most elegant way but better than passing down a BlockPosition up to five methods deep.
         sculkCatalyst.catalystListener.getSculkSpreader().updateCursors(level, pos, level.getRandom(), true);
+        org.bukkit.craftbukkit.event.CraftEventFactory.sourceBlockOverride = null; // CraftBukkit
     }
 
     @Override
     public void load(CompoundTag tag) {
+        super.load(tag); // CraftBukkit - SPIGOT-7393: Load super Bukkit data
         this.catalystListener.sculkSpreader.load(tag);
     }
 
@@ -56,11 +64,13 @@
         final SculkSpreader sculkSpreader;
         private final BlockState blockState;
         private final PositionSource positionSource;
+        private Level level; // CraftBukkit
 
         public CatalystListener(BlockState blockState, PositionSource positionSource) {
             this.blockState = blockState;
             this.positionSource = positionSource;
             this.sculkSpreader = SculkSpreader.createLevelSpreader();
+            this.sculkSpreader.level = level; // CraftBukkit
         }
 
         @Override
