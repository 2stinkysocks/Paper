--- a/net/minecraft/world/level/block/Block.java
+++ b/net/minecraft/world/level/block/Block.java
@@ -328,9 +346,16 @@
 
     private static void popResource(Level level, Supplier<ItemEntity> itemEntitySupplier, ItemStack stack) {
         if (!level.isClientSide && !stack.isEmpty() && level.getGameRules().getBoolean(GameRules.RULE_DOBLOCKDROPS)) {
-            ItemEntity itemEntity = itemEntitySupplier.get();
-            itemEntity.setDefaultPickUpDelay();
-            level.addFreshEntity(itemEntity);
+            ItemEntity entityitem = (ItemEntity) itemEntitySupplier.get();
+
+            entityitem.setDefaultPickUpDelay();
+            // CraftBukkit start
+            if (level.captureDrops != null) {
+                level.captureDrops.add(entityitem);
+            } else {
+                level.addFreshEntity(entityitem);
+            }
+            // CraftBukkit end
         }
     }
 
@@ -357,7 +381,7 @@
 
     public void playerDestroy(Level level, Player player, BlockPos pos, BlockState state, @Nullable BlockEntity blockEntity, ItemStack tool) {
         player.awardStat(Stats.BLOCK_MINED.get(this));
-        player.causeFoodExhaustion(0.005F);
+        player.causeFoodExhaustion(0.005F, org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.BLOCK_MINED); // CraftBukkit - EntityExhaustionEvent
         dropResources(state, level, pos, blockEntity, player, tool);
     }
 
@@ -495,15 +518,22 @@
         return this.builtInRegistryHolder;
     }
 
-    protected void tryDropExperience(ServerLevel level, BlockPos pos, ItemStack heldItem, IntProvider amount) {
-        if (EnchantmentHelper.getItemEnchantmentLevel(Enchantments.SILK_TOUCH, heldItem) == 0) {
-            int i = amount.sample(level.random);
+    // CraftBukkit start
+    protected int tryDropExperience(ServerLevel worldserver, BlockPos blockposition, ItemStack itemstack, IntProvider intprovider) {
+        if (EnchantmentHelper.getItemEnchantmentLevel(Enchantments.SILK_TOUCH, itemstack) == 0) {
+            int i = intprovider.sample(worldserver.random);
+
             if (i > 0) {
                 this.popExperience(level, pos, i);
             }
         }
     }
 
+    public int getExpDrop(IBlockData iblockdata, ServerLevel worldserver, BlockPos blockposition, ItemStack itemstack, boolean flag) {
+        return 0;
+    }
+    // CraftBukkit end
+
     public static final class BlockStatePairKey {
         private final BlockState first;
         private final BlockState second;
