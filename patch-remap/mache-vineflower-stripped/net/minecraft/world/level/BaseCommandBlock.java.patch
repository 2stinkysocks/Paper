--- a/net/minecraft/world/level/BaseCommandBlock.java
+++ b/net/minecraft/world/level/BaseCommandBlock.java
@@ -28,7 +29,11 @@
     @Nullable
     private Component lastOutput;
     private String command = "";
-    private Component name = DEFAULT_NAME;
+    private Component name;
+    // CraftBukkit start
+    @Override
+    public abstract org.bukkit.command.CommandSender getBukkitSender(CommandSourceStack wrapper);
+    // CraftBukkit end
 
     public int getSuccessCount() {
         return this.successCount;
@@ -101,30 +111,36 @@
     }
 
     public boolean performCommand(Level level) {
-        if (level.isClientSide || level.getGameTime() == this.lastExecution) {
-            return false;
-        } else if ("Searge".equalsIgnoreCase(this.command)) {
-            this.lastOutput = Component.literal("#itzlipofutzli");
-            this.successCount = 1;
-            return true;
-        } else {
-            this.successCount = 0;
-            MinecraftServer server = this.getLevel().getServer();
-            if (server.isCommandBlockEnabled() && !StringUtil.isNullOrEmpty(this.command)) {
-                try {
-                    this.lastOutput = null;
-                    CommandSourceStack commandSourceStack = this.createCommandSourceStack().withCallback((flag, i) -> {
-                        if (flag) {
-                            this.successCount++;
-                        }
-                    });
-                    server.getCommands().performPrefixedCommand(commandSourceStack, this.command);
-                } catch (Throwable var6) {
-                    CrashReport crashReport = CrashReport.forThrowable(var6, "Executing command block");
-                    CrashReportCategory crashReportCategory = crashReport.addCategory("Command to be executed");
-                    crashReportCategory.setDetail("Command", this::getCommand);
-                    crashReportCategory.setDetail("Name", () -> this.getName().getString());
-                    throw new ReportedException(crashReport);
+        if (!level.isClientSide && level.getGameTime() != this.lastExecution) {
+            if ("Searge".equalsIgnoreCase(this.command)) {
+                this.lastOutput = Component.literal("#itzlipofutzli");
+                this.successCount = 1;
+                return true;
+            } else {
+                this.successCount = 0;
+                MinecraftServer minecraftserver = this.getLevel().getServer();
+
+                if (minecraftserver.isCommandBlockEnabled() && !StringUtil.isNullOrEmpty(this.command)) {
+                    try {
+                        this.lastOutput = null;
+                        CommandSourceStack commandlistenerwrapper = this.createCommandSourceStack().withCallback((flag, i) -> {
+                            if (flag) {
+                                ++this.successCount;
+                            }
+
+                        });
+
+                        minecraftserver.getCommands().dispatchServerCommand(commandlistenerwrapper, this.command); // CraftBukkit
+                    } catch (Throwable throwable) {
+                        CrashReport crashreport = CrashReport.forThrowable(throwable, "Executing command block");
+                        CrashReportCategory crashreportsystemdetails = crashreport.addCategory("Command to be executed");
+
+                        crashreportsystemdetails.setDetail("Command", this::getCommand);
+                        crashreportsystemdetails.setDetail("Name", () -> {
+                            return this.getName().getString();
+                        });
+                        throw new ReportedException(crashreport);
+                    }
                 }
             }
 
