--- a/net/minecraft/world/item/ArmorItem.java
+++ b/net/minecraft/world/item/ArmorItem.java
@@ -25,6 +26,11 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.DispenserBlock;
 import net.minecraft.world.phys.AABB;
+// CraftBukkit start
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseArmorEvent;
+// CraftBukkit end
 
 public class ArmorItem extends Item implements Equipable {
     private static final EnumMap<ArmorItem.Type, UUID> ARMOR_MODIFIER_UUID_PER_TYPE = Util.make(new EnumMap<>(ArmorItem.Type.class), map -> {
@@ -55,15 +60,42 @@
         if (entitiesOfClass.isEmpty()) {
             return false;
         } else {
-            LivingEntity livingEntity = entitiesOfClass.get(0);
-            EquipmentSlot equipmentSlotForItem = Mob.getEquipmentSlotForItem(itemStack);
-            ItemStack itemStack1 = itemStack.split(1);
-            livingEntity.setItemSlot(equipmentSlotForItem, itemStack1);
-            if (livingEntity instanceof Mob) {
-                ((Mob)livingEntity).setDropChance(equipmentSlotForItem, 2.0F);
-                ((Mob)livingEntity).setPersistenceRequired();
+            LivingEntity entityliving = (LivingEntity) list.get(0);
+            EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(itemstack);
+            ItemStack itemstack1 = itemstack.split(1);
+            // CraftBukkit start
+            Level world = sourceblock.level();
+            org.bukkit.block.Block block = CraftBlock.at(world, sourceblock.pos());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+
+            BlockDispenseArmorEvent event = new BlockDispenseArmorEvent(block, craftItem.clone(), (org.bukkit.craftbukkit.entity.CraftLivingEntity) entityliving.getBukkitEntity());
+            if (!DispenserBlock.eventFired) {
+                world.getCraftServer().getPluginManager().callEvent(event);
             }
 
+            if (event.isCancelled()) {
+                itemstack.grow(1);
+                return false;
+            }
+
+            if (!event.getItem().equals(craftItem)) {
+                itemstack.grow(1);
+                // Chain to handler for new item
+                ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+                DispenseItemBehavior idispensebehavior = (DispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+                if (idispensebehavior != DispenseItemBehavior.NOOP && idispensebehavior != ArmorItem.DISPENSE_ITEM_BEHAVIOR) {
+                    idispensebehavior.dispense(sourceblock, eventStack);
+                    return true;
+                }
+            }
+
+            entityliving.setItemSlot(enumitemslot, CraftItemStack.asNMSCopy(event.getItem()));
+            // CraftBukkit end
+            if (entityliving instanceof Mob) {
+                ((Mob) entityliving).setDropChance(enumitemslot, 2.0F);
+                ((Mob) entityliving).setPersistenceRequired();
+            }
+
             return true;
         }
     }
