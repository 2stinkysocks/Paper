--- a/net/minecraft/world/item/MinecartItem.java
+++ b/net/minecraft/world/item/MinecartItem.java
@@ -17,6 +18,11 @@
 import net.minecraft.world.level.block.state.properties.RailShape;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.Vec3;
+// CraftBukkit start
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+// CraftBukkit end
 
 public class MinecartItem extends Item {
     private static final DispenseItemBehavior DISPENSE_ITEM_BEHAVIOR = new DefaultDispenseItemBehavior() {
@@ -58,12 +63,40 @@
                 }
             }
 
-            AbstractMinecart abstractMinecart = AbstractMinecart.createMinecart(
-                serverLevel, d, d1 + d3, d2, ((MinecartItem)itemStack.getItem()).type, itemStack, null
-            );
-            serverLevel.addFreshEntity(abstractMinecart);
-            itemStack.shrink(1);
-            return itemStack;
+            // CraftBukkit start
+            // EntityMinecartAbstract entityminecartabstract = EntityMinecartAbstract.createMinecart(worldserver, d0, d1 + d3, d2, ((ItemMinecart) itemstack.getItem()).type);
+            ItemStack itemstack1 = itemstack.split(1);
+            org.bukkit.block.Block block2 = CraftBlock.at(worldserver, sourceblock.pos());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+
+            BlockDispenseEvent event = new BlockDispenseEvent(block2, craftItem.clone(), new org.bukkit.util.Vector(d0, d1 + d3, d2));
+            if (!DispenserBlock.eventFired) {
+                worldserver.getCraftServer().getPluginManager().callEvent(event);
+            }
+
+            if (event.isCancelled()) {
+                itemstack.grow(1);
+                return itemstack;
+            }
+
+            if (!event.getItem().equals(craftItem)) {
+                itemstack.grow(1);
+                // Chain to handler for new item
+                ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+                DispenseItemBehavior idispensebehavior = (DispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+                if (idispensebehavior != DispenseItemBehavior.NOOP && idispensebehavior != this) {
+                    idispensebehavior.dispense(sourceblock, eventStack);
+                    return itemstack;
+                }
+            }
+
+            itemstack1 = CraftItemStack.asNMSCopy(event.getItem());
+            AbstractMinecart entityminecartabstract = AbstractMinecart.createMinecart(worldserver, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), ((MinecartItem) itemstack1.getItem()).type, itemstack1, (Player) null);
+
+            if (!worldserver.addFreshEntity(entityminecartabstract)) itemstack.grow(1);
+            // itemstack.shrink(1); // CraftBukkit - handled during event processing
+            // CraftBukkit end
+            return itemstack;
         }
 
         @Override
@@ -97,19 +132,15 @@
                     d = 0.5;
                 }
 
-                AbstractMinecart abstractMinecart = AbstractMinecart.createMinecart(
-                    serverLevel,
-                    (double)clickedPos.getX() + 0.5,
-                    (double)clickedPos.getY() + 0.0625 + d,
-                    (double)clickedPos.getZ() + 0.5,
-                    this.type,
-                    itemInHand,
-                    context.getPlayer()
-                );
-                serverLevel.addFreshEntity(abstractMinecart);
-                serverLevel.gameEvent(
-                    GameEvent.ENTITY_PLACE, clickedPos, GameEvent.Context.of(context.getPlayer(), serverLevel.getBlockState(clickedPos.below()))
-                );
+                AbstractMinecart entityminecartabstract = AbstractMinecart.createMinecart(worldserver, (double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.0625D + d0, (double) blockposition.getZ() + 0.5D, this.type, itemstack, context.getPlayer());
+
+                // CraftBukkit start
+                if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityPlaceEvent(context, entityminecartabstract).isCancelled()) {
+                    return InteractionResult.FAIL;
+                }
+                // CraftBukkit end
+                if (!worldserver.addFreshEntity(entityminecartabstract)) return InteractionResult.PASS; // CraftBukkit
+                worldserver.gameEvent(GameEvent.ENTITY_PLACE, blockposition, GameEvent.Context.of(context.getPlayer(), worldserver.getBlockState(blockposition.below())));
             }
 
             itemInHand.shrink(1);
