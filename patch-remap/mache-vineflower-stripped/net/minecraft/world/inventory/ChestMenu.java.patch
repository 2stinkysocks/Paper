--- a/net/minecraft/world/inventory/ChestMenu.java
+++ b/net/minecraft/world/inventory/ChestMenu.java
@@ -5,12 +6,38 @@
 import net.minecraft.world.entity.player.Inventory;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+// CraftBukkit end
 
 public class ChestMenu extends AbstractContainerMenu {
     private static final int SLOTS_PER_ROW = 9;
     private final Container container;
     private final int containerRows;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private Inventory player;
 
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        CraftInventory inventory;
+        if (this.container instanceof Inventory) {
+            inventory = new org.bukkit.craftbukkit.inventory.CraftInventoryPlayer((Inventory) this.container);
+        } else if (this.container instanceof CompoundContainer) {
+            inventory = new org.bukkit.craftbukkit.inventory.CraftInventoryDoubleChest((CompoundContainer) this.container);
+        } else {
+            inventory = new CraftInventory(this.container);
+        }
+
+        bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
+
     private ChestMenu(MenuType<?> type, int containerId, Inventory playerInventory, int rows) {
         this(type, containerId, playerInventory, new SimpleContainer(9 * rows), rows);
     }
@@ -55,9 +83,16 @@
         container.startOpen(playerInventory.player);
         int i = (this.containerRows - 4) * 18;
 
-        for (int i1 = 0; i1 < this.containerRows; i1++) {
-            for (int i2 = 0; i2 < 9; i2++) {
-                this.addSlot(new Slot(container, i2 + i1 * 9, 8 + i2 * 18, 18 + i1 * 18));
+        // CraftBukkit start - Save player
+        this.player = playerInventory;
+        // CraftBukkit end
+
+        int l;
+        int i1;
+
+        for (l = 0; l < this.containerRows; ++l) {
+            for (i1 = 0; i1 < 9; ++i1) {
+                this.addSlot(new Slot(container, i1 + l * 9, 8 + i1 * 18, 18 + l * 18));
             }
         }
 
@@ -74,6 +110,7 @@
 
     @Override
     public boolean stillValid(Player player) {
+        if (!this.checkReachable) return true; // CraftBukkit
         return this.container.stillValid(player);
     }
 
