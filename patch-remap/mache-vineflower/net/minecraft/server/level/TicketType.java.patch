--- a/net/minecraft/server/level/TicketType.java
+++ b/net/minecraft/server/level/TicketType.java
@@ -7,24 +7,31 @@
 import net.minecraft.world.level.ChunkPos;
 
 public class TicketType<T> {
+
     private final String name;
     private final Comparator<T> comparator;
-    private final long timeout;
-    public static final TicketType<Unit> START = create("start", (unit, unit1) -> 0);
-    public static final TicketType<Unit> DRAGON = create("dragon", (unit, unit1) -> 0);
+    public long timeout;
+    public static final TicketType<Unit> START = create("start", (unit, unit1) -> {
+        return 0;
+    });
+    public static final TicketType<Unit> DRAGON = create("dragon", (unit, unit1) -> {
+        return 0;
+    });
     public static final TicketType<ChunkPos> PLAYER = create("player", Comparator.comparingLong(ChunkPos::toLong));
     public static final TicketType<ChunkPos> FORCED = create("forced", Comparator.comparingLong(ChunkPos::toLong));
     public static final TicketType<ChunkPos> LIGHT = create("light", Comparator.comparingLong(ChunkPos::toLong));
     public static final TicketType<BlockPos> PORTAL = create("portal", Vec3i::compareTo, 300);
     public static final TicketType<Integer> POST_TELEPORT = create("post_teleport", Integer::compareTo, 5);
     public static final TicketType<ChunkPos> UNKNOWN = create("unknown", Comparator.comparingLong(ChunkPos::toLong), 1);
+    public static final TicketType<Unit> PLUGIN = create("plugin", (a, b) -> 0); // CraftBukkit
+    public static final TicketType<org.bukkit.plugin.Plugin> PLUGIN_TICKET = create("plugin_ticket", (plugin1, plugin2) -> plugin1.getClass().getName().compareTo(plugin2.getClass().getName())); // CraftBukkit
 
     public static <T> TicketType<T> create(String name, Comparator<T> comparator) {
         return new TicketType<>(name, comparator, 0L);
     }
 
     public static <T> TicketType<T> create(String name, Comparator<T> comparator, int lifespan) {
-        return new TicketType<>(name, comparator, (long)lifespan);
+        return new TicketType<>(name, comparator, (long) lifespan);
     }
 
     protected TicketType(String name, Comparator<T> comparator, long timeout) {
@@ -33,7 +40,6 @@
         this.timeout = timeout;
     }
 
-    @Override
     public String toString() {
         return this.name;
     }
