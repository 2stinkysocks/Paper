--- a/net/minecraft/world/entity/projectile/Fireball.java
+++ b/net/minecraft/world/entity/projectile/Fireball.java
@@ -11,54 +11,60 @@
 import net.minecraft.world.level.Level;
 
 public abstract class Fireball extends AbstractHurtingProjectile implements ItemSupplier {
+
     private static final EntityDataAccessor<ItemStack> DATA_ITEM_STACK = SynchedEntityData.defineId(Fireball.class, EntityDataSerializers.ITEM_STACK);
 
     public Fireball(EntityType<? extends Fireball> entityType, Level level) {
         super(entityType, level);
     }
 
-    public Fireball(EntityType<? extends Fireball> entityType, double x, double y, double z, double offsetX, double offsetY, double offsetZ, Level level) {
-        super(entityType, x, y, z, offsetX, offsetY, offsetZ, level);
+    public Fireball(EntityType<? extends Fireball> entityType, double x, double d1, double y, double d3, double z, double d5, Level offsetX) {
+        super(entityType, x, d1, y, d3, z, d5, offsetX);
     }
 
-    public Fireball(EntityType<? extends Fireball> entityType, LivingEntity shooter, double offsetX, double offsetY, double offsetZ, Level level) {
-        super(entityType, shooter, offsetX, offsetY, offsetZ, level);
+    public Fireball(EntityType<? extends Fireball> entityType, LivingEntity shooter, double offsetX, double d1, double offsetY, Level world) {
+        super(entityType, shooter, offsetX, d1, offsetY, world);
     }
 
     public void setItem(ItemStack stack) {
         if (!stack.is(Items.FIRE_CHARGE) || stack.hasTag()) {
-            this.getEntityData().set(DATA_ITEM_STACK, stack.copyWithCount(1));
+            this.getEntityData().set(Fireball.DATA_ITEM_STACK, stack.copyWithCount(1));
         }
+
     }
 
-    protected ItemStack getItemRaw() {
-        return this.getEntityData().get(DATA_ITEM_STACK);
+    public ItemStack getItemRaw() {
+        return (ItemStack) this.getEntityData().get(Fireball.DATA_ITEM_STACK);
     }
 
     @Override
     public ItemStack getItem() {
-        ItemStack itemRaw = this.getItemRaw();
-        return itemRaw.isEmpty() ? new ItemStack(Items.FIRE_CHARGE) : itemRaw;
+        ItemStack itemstack = this.getItemRaw();
+
+        return itemstack.isEmpty() ? new ItemStack(Items.FIRE_CHARGE) : itemstack;
     }
 
     @Override
     protected void defineSynchedData() {
-        this.getEntityData().define(DATA_ITEM_STACK, ItemStack.EMPTY);
+        this.getEntityData().define(Fireball.DATA_ITEM_STACK, ItemStack.EMPTY);
     }
 
     @Override
     public void addAdditionalSaveData(CompoundTag compound) {
         super.addAdditionalSaveData(compound);
-        ItemStack itemRaw = this.getItemRaw();
-        if (!itemRaw.isEmpty()) {
-            compound.put("Item", itemRaw.save(new CompoundTag()));
+        ItemStack itemstack = this.getItemRaw();
+
+        if (!itemstack.isEmpty()) {
+            compound.put("Item", itemstack.save(new CompoundTag()));
         }
+
     }
 
     @Override
     public void readAdditionalSaveData(CompoundTag compound) {
         super.readAdditionalSaveData(compound);
-        ItemStack itemStack = ItemStack.of(compound.getCompound("Item"));
-        this.setItem(itemStack);
+        ItemStack itemstack = ItemStack.of(compound.getCompound("Item"));
+
+        if (!itemstack.isEmpty()) this.setItem(itemstack); // CraftBukkit - SPIGOT-5474 probably came from bugged earlier versions
     }
 }
