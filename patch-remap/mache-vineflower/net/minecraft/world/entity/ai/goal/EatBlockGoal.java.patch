--- a/net/minecraft/world/entity/ai/goal/EatBlockGoal.java
+++ b/net/minecraft/world/entity/ai/goal/EatBlockGoal.java
@@ -8,12 +8,17 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
-import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.block.state.IBlockData;
 import net.minecraft.world.level.block.state.predicate.BlockStatePredicate;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+// CraftBukkit end
+
 public class EatBlockGoal extends Goal {
+
     private static final int EAT_ANIMATION_TICKS = 40;
-    private static final Predicate<BlockState> IS_TALL_GRASS = BlockStatePredicate.forBlock(Blocks.SHORT_GRASS);
+    private static final Predicate<IBlockData> IS_TALL_GRASS = BlockStatePredicate.forBlock(Blocks.SHORT_GRASS);
     private final Mob mob;
     private final Level level;
     private int eatAnimationTick;
@@ -21,7 +26,7 @@
     public EatBlockGoal(Mob mob) {
         this.mob = mob;
         this.level = mob.level();
-        this.setFlags(EnumSet.of(Goal.Flag.MOVE, Goal.Flag.LOOK, Goal.Flag.JUMP));
+        this.setFlags(EnumSet.of(Goal.Type.MOVE, Goal.Type.LOOK, Goal.Type.JUMP));
     }
 
     @Override
@@ -29,15 +34,16 @@
         if (this.mob.getRandom().nextInt(this.mob.isBaby() ? 50 : 1000) != 0) {
             return false;
         } else {
-            BlockPos blockPos = this.mob.blockPosition();
-            return IS_TALL_GRASS.test(this.level.getBlockState(blockPos)) || this.level.getBlockState(blockPos.below()).is(Blocks.GRASS_BLOCK);
+            BlockPos blockposition = this.mob.blockPosition();
+
+            return EatBlockGoal.IS_TALL_GRASS.test(this.level.getBlockState(blockposition)) ? true : this.level.getBlockState(blockposition.below()).is(Blocks.GRASS_BLOCK);
         }
     }
 
     @Override
     public void start() {
         this.eatAnimationTick = this.adjustedTickDelay(40);
-        this.level.broadcastEntityEvent(this.mob, (byte)10);
+        this.level.broadcastEntityEvent(this.mob, (byte) 10);
         this.mob.getNavigation().stop();
     }
 
@@ -59,24 +65,27 @@
     public void tick() {
         this.eatAnimationTick = Math.max(0, this.eatAnimationTick - 1);
         if (this.eatAnimationTick == this.adjustedTickDelay(4)) {
-            BlockPos blockPos = this.mob.blockPosition();
-            if (IS_TALL_GRASS.test(this.level.getBlockState(blockPos))) {
-                if (this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
-                    this.level.destroyBlock(blockPos, false);
+            BlockPos blockposition = this.mob.blockPosition();
+
+            if (EatBlockGoal.IS_TALL_GRASS.test(this.level.getBlockState(blockposition))) {
+                if (CraftEventFactory.callEntityChangeBlockEvent(this.mob, blockposition, Blocks.AIR.defaultBlockState(), !this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING))) { // CraftBukkit
+                    this.level.destroyBlock(blockposition, false);
                 }
 
                 this.mob.ate();
             } else {
-                BlockPos blockPos1 = blockPos.below();
-                if (this.level.getBlockState(blockPos1).is(Blocks.GRASS_BLOCK)) {
-                    if (this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
-                        this.level.levelEvent(2001, blockPos1, Block.getId(Blocks.GRASS_BLOCK.defaultBlockState()));
-                        this.level.setBlock(blockPos1, Blocks.DIRT.defaultBlockState(), 2);
+                BlockPos blockposition1 = blockposition.below();
+
+                if (this.level.getBlockState(blockposition1).is(Blocks.GRASS_BLOCK)) {
+                    if (CraftEventFactory.callEntityChangeBlockEvent(this.mob, blockposition1, Blocks.AIR.defaultBlockState(), !this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING))) { // CraftBukkit
+                        this.level.levelEvent(2001, blockposition1, Block.getId(Blocks.GRASS_BLOCK.defaultBlockState()));
+                        this.level.setBlock(blockposition1, Blocks.DIRT.defaultBlockState(), 2);
                     }
 
                     this.mob.ate();
                 }
             }
+
         }
     }
 }
