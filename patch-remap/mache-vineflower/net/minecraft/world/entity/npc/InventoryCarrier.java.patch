--- a/net/minecraft/world/entity/npc/InventoryCarrier.java
+++ b/net/minecraft/world/entity/npc/InventoryCarrier.java
@@ -7,35 +7,48 @@
 import net.minecraft.world.item.ItemStack;
 
 public interface InventoryCarrier {
+
     String TAG_INVENTORY = "Inventory";
 
     SimpleContainer getInventory();
 
     static void pickUpItem(Mob mob, InventoryCarrier carrier, ItemEntity itemEntity) {
-        ItemStack item = itemEntity.getItem();
-        if (mob.wantsToPickUp(item)) {
-            SimpleContainer inventory = carrier.getInventory();
-            boolean canAddItem = inventory.canAddItem(item);
-            if (!canAddItem) {
+        ItemStack itemstack = itemEntity.getItem();
+
+        if (mob.wantsToPickUp(itemstack)) {
+            SimpleContainer inventorysubcontainer = carrier.getInventory();
+            boolean flag = inventorysubcontainer.canAddItem(itemstack);
+
+            if (!flag) {
                 return;
             }
 
+            // CraftBukkit start
+            ItemStack remaining = new SimpleContainer(inventorysubcontainer).addItem(itemstack);
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityPickupItemEvent(mob, itemEntity, remaining.getCount(), false).isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
+
             mob.onItemPickup(itemEntity);
-            int count = item.getCount();
-            ItemStack itemStack = inventory.addItem(item);
-            mob.take(itemEntity, count - itemStack.getCount());
-            if (itemStack.isEmpty()) {
+            int i = itemstack.getCount();
+            ItemStack itemstack1 = inventorysubcontainer.addItem(itemstack);
+
+            mob.take(itemEntity, i - itemstack1.getCount());
+            if (itemstack1.isEmpty()) {
                 itemEntity.discard();
             } else {
-                item.setCount(itemStack.getCount());
+                itemstack.setCount(itemstack1.getCount());
             }
         }
+
     }
 
     default void readInventoryFromTag(CompoundTag tag) {
         if (tag.contains("Inventory", 9)) {
             this.getInventory().fromTag(tag.getList("Inventory", 10));
         }
+
     }
 
     default void writeInventoryToTag(CompoundTag tag) {
