--- a/net/minecraft/world/level/block/WitherSkullBlock.java
+++ b/net/minecraft/world/level/block/WitherSkullBlock.java
@@ -1,6 +1,7 @@
 package net.minecraft.world.level.block;
 
 import com.mojang.serialization.MapCodec;
+import java.util.Iterator;
 import javax.annotation.Nullable;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.core.BlockPos;
@@ -8,6 +9,7 @@
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.tags.BlockTags;
 import net.minecraft.world.Difficulty;
+import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.boss.wither.WitherBoss;
@@ -17,13 +19,18 @@
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.entity.SkullBlockEntity;
 import net.minecraft.world.level.block.state.BlockBehaviour;
-import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.block.state.IBlockData;
 import net.minecraft.world.level.block.state.pattern.BlockInWorld;
 import net.minecraft.world.level.block.state.pattern.BlockPattern;
 import net.minecraft.world.level.block.state.pattern.BlockPatternBuilder;
 import net.minecraft.world.level.block.state.predicate.BlockStatePredicate;
 
+// CraftBukkit start
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
+// CraftBukkit end
+
 public class WitherSkullBlock extends SkullBlock {
+
     public static final MapCodec<WitherSkullBlock> CODEC = simpleCodec(WitherSkullBlock::new);
     @Nullable
     private static BlockPattern witherPatternFull;
@@ -32,90 +39,91 @@
 
     @Override
     public MapCodec<WitherSkullBlock> codec() {
-        return CODEC;
+        return WitherSkullBlock.CODEC;
     }
 
     protected WitherSkullBlock(BlockBehaviour.Properties properties) {
-        super(SkullBlock.Types.WITHER_SKELETON, properties);
+        super(SkullBlock.Type.WITHER_SKELETON, properties);
     }
 
     @Override
-    public void setPlacedBy(Level level, BlockPos pos, BlockState state, @Nullable LivingEntity placer, ItemStack stack) {
+    public void setPlacedBy(Level level, BlockPos pos, IBlockData state, @Nullable LivingEntity placer, ItemStack stack) {
         super.setPlacedBy(level, pos, state, placer, stack);
-        BlockEntity blockEntity = level.getBlockEntity(pos);
-        if (blockEntity instanceof SkullBlockEntity) {
-            checkSpawn(level, pos, (SkullBlockEntity)blockEntity);
+        BlockEntity tileentity = level.getBlockEntity(pos);
+
+        if (tileentity instanceof SkullBlockEntity) {
+            checkSpawn(level, pos, (SkullBlockEntity) tileentity);
         }
+
     }
 
     public static void checkSpawn(Level level, BlockPos pos, SkullBlockEntity blockEntity) {
+        if (level.captureBlockStates) return; // CraftBukkit
         if (!level.isClientSide) {
-            BlockState blockState = blockEntity.getBlockState();
-            boolean flag = blockState.is(Blocks.WITHER_SKELETON_SKULL) || blockState.is(Blocks.WITHER_SKELETON_WALL_SKULL);
+            IBlockData iblockdata = blockEntity.getBlockState();
+            boolean flag = iblockdata.is(Blocks.WITHER_SKELETON_SKULL) || iblockdata.is(Blocks.WITHER_SKELETON_WALL_SKULL);
+
             if (flag && pos.getY() >= level.getMinBuildHeight() && level.getDifficulty() != Difficulty.PEACEFUL) {
-                BlockPattern.BlockPatternMatch blockPatternMatch = getOrCreateWitherFull().find(level, pos);
-                if (blockPatternMatch != null) {
-                    WitherBoss witherBoss = EntityType.WITHER.create(level);
-                    if (witherBoss != null) {
-                        CarvedPumpkinBlock.clearPatternBlocks(level, blockPatternMatch);
-                        BlockPos pos1 = blockPatternMatch.getBlock(1, 2, 0).getPos();
-                        witherBoss.moveTo(
-                            (double)pos1.getX() + 0.5,
-                            (double)pos1.getY() + 0.55,
-                            (double)pos1.getZ() + 0.5,
-                            blockPatternMatch.getForwards().getAxis() == Direction.Axis.X ? 0.0F : 90.0F,
-                            0.0F
-                        );
-                        witherBoss.yBodyRot = blockPatternMatch.getForwards().getAxis() == Direction.Axis.X ? 0.0F : 90.0F;
-                        witherBoss.makeInvulnerable();
+                BlockPattern.BlockPatternMatch shapedetector_shapedetectorcollection = getOrCreateWitherFull().find(level, pos);
 
-                        for (ServerPlayer serverPlayer : level.getEntitiesOfClass(ServerPlayer.class, witherBoss.getBoundingBox().inflate(50.0))) {
-                            CriteriaTriggers.SUMMONED_ENTITY.trigger(serverPlayer, witherBoss);
+                if (shapedetector_shapedetectorcollection != null) {
+                    WitherBoss entitywither = (WitherBoss) EntityType.WITHER.create(level);
+
+                    if (entitywither != null) {
+                        // BlockPumpkinCarved.clearPatternBlocks(world, shapedetector_shapedetectorcollection); // CraftBukkit - move down
+                        BlockPos blockposition1 = shapedetector_shapedetectorcollection.getBlock(1, 2, 0).getPos();
+
+                        entitywither.moveTo((double) blockposition1.getX() + 0.5D, (double) blockposition1.getY() + 0.55D, (double) blockposition1.getZ() + 0.5D, shapedetector_shapedetectorcollection.getForwards().getAxis() == Direction.Axis.X ? 0.0F : 90.0F, 0.0F);
+                        entitywither.yBodyRot = shapedetector_shapedetectorcollection.getForwards().getAxis() == Direction.Axis.X ? 0.0F : 90.0F;
+                        entitywither.makeInvulnerable();
+                        // CraftBukkit start
+                        if (!level.addFreshEntity(entitywither, SpawnReason.BUILD_WITHER)) {
+                            return;
                         }
+                        CarvedPumpkinBlock.clearPatternBlocks(level, shapedetector_shapedetectorcollection); // CraftBukkit - from above
+                        // CraftBukkit end
+                        Iterator iterator = level.getEntitiesOfClass(ServerPlayer.class, entitywither.getBoundingBox().inflate(50.0D)).iterator();
 
-                        level.addFreshEntity(witherBoss);
-                        CarvedPumpkinBlock.updatePatternBlocks(level, blockPatternMatch);
+                        while (iterator.hasNext()) {
+                            ServerPlayer entityplayer = (ServerPlayer) iterator.next();
+
+                            CriteriaTriggers.SUMMONED_ENTITY.trigger(entityplayer, (Entity) entitywither);
+                        }
+
+                        // world.addFreshEntity(entitywither); // CraftBukkit - moved up
+                        CarvedPumpkinBlock.updatePatternBlocks(level, shapedetector_shapedetectorcollection);
                     }
+
                 }
             }
         }
     }
 
     public static boolean canSpawnMob(Level level, BlockPos pos, ItemStack stack) {
-        return stack.is(Items.WITHER_SKELETON_SKULL)
-            && pos.getY() >= level.getMinBuildHeight() + 2
-            && level.getDifficulty() != Difficulty.PEACEFUL
-            && !level.isClientSide
-            && getOrCreateWitherBase().find(level, pos) != null;
+        return stack.is(Items.WITHER_SKELETON_SKULL) && pos.getY() >= level.getMinBuildHeight() + 2 && level.getDifficulty() != Difficulty.PEACEFUL && !level.isClientSide ? getOrCreateWitherBase().find(level, pos) != null : false;
     }
 
     private static BlockPattern getOrCreateWitherFull() {
-        if (witherPatternFull == null) {
-            witherPatternFull = BlockPatternBuilder.start()
-                .aisle("^^^", "###", "~#~")
-                .where('#', block -> block.getState().is(BlockTags.WITHER_SUMMON_BASE_BLOCKS))
-                .where(
-                    '^',
-                    BlockInWorld.hasState(
-                        BlockStatePredicate.forBlock(Blocks.WITHER_SKELETON_SKULL).or(BlockStatePredicate.forBlock(Blocks.WITHER_SKELETON_WALL_SKULL))
-                    )
-                )
-                .where('~', block -> block.getState().isAir())
-                .build();
+        if (WitherSkullBlock.witherPatternFull == null) {
+            WitherSkullBlock.witherPatternFull = BlockPatternBuilder.start().aisle("^^^", "###", "~#~").where('#', (shapedetectorblock) -> {
+                return shapedetectorblock.getState().is(BlockTags.WITHER_SUMMON_BASE_BLOCKS);
+            }).where('^', BlockInWorld.hasState(BlockStatePredicate.forBlock(Blocks.WITHER_SKELETON_SKULL).or(BlockStatePredicate.forBlock(Blocks.WITHER_SKELETON_WALL_SKULL)))).where('~', (shapedetectorblock) -> {
+                return shapedetectorblock.getState().isAir();
+            }).build();
         }
 
-        return witherPatternFull;
+        return WitherSkullBlock.witherPatternFull;
     }
 
     private static BlockPattern getOrCreateWitherBase() {
-        if (witherPatternBase == null) {
-            witherPatternBase = BlockPatternBuilder.start()
-                .aisle("   ", "###", "~#~")
-                .where('#', block -> block.getState().is(BlockTags.WITHER_SUMMON_BASE_BLOCKS))
-                .where('~', block -> block.getState().isAir())
-                .build();
+        if (WitherSkullBlock.witherPatternBase == null) {
+            WitherSkullBlock.witherPatternBase = BlockPatternBuilder.start().aisle("   ", "###", "~#~").where('#', (shapedetectorblock) -> {
+                return shapedetectorblock.getState().is(BlockTags.WITHER_SUMMON_BASE_BLOCKS);
+            }).where('~', (shapedetectorblock) -> {
+                return shapedetectorblock.getState().isAir();
+            }).build();
         }
 
-        return witherPatternBase;
+        return WitherSkullBlock.witherPatternBase;
     }
 }
