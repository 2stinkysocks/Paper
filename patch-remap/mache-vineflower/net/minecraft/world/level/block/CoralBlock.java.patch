--- a/net/minecraft/world/level/block/CoralBlock.java
+++ b/net/minecraft/world/level/block/CoralBlock.java
@@ -2,7 +2,6 @@
 
 import com.mojang.serialization.MapCodec;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
-import com.mojang.serialization.codecs.RecordCodecBuilder.Instance;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
@@ -14,14 +13,17 @@
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.state.BlockBehaviour;
-import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.block.state.IBlockData;
 import net.minecraft.world.level.material.FluidState;
 
 public class CoralBlock extends Block {
+
     public static final MapCodec<Block> DEAD_CORAL_FIELD = BuiltInRegistries.BLOCK.byNameCodec().fieldOf("dead");
-    public static final MapCodec<CoralBlock> CODEC = RecordCodecBuilder.mapCodec(
-        instance -> instance.group(DEAD_CORAL_FIELD.forGetter(coralBlock -> coralBlock.deadBlock), propertiesCodec()).apply(instance, CoralBlock::new)
-    );
+    public static final MapCodec<CoralBlock> CODEC = RecordCodecBuilder.mapCodec((instance) -> {
+        return instance.group(CoralBlock.DEAD_CORAL_FIELD.forGetter((blockcoral) -> {
+            return blockcoral.deadBlock;
+        }), propertiesCodec()).apply(instance, CoralBlock::new);
+    });
     private final Block deadBlock;
 
     public CoralBlock(Block deadBlock, BlockBehaviour.Properties properties) {
@@ -31,29 +33,40 @@
 
     @Override
     public MapCodec<CoralBlock> codec() {
-        return CODEC;
+        return CoralBlock.CODEC;
     }
 
     @Override
-    public void tick(BlockState state, ServerLevel level, BlockPos pos, RandomSource random) {
+    public void tick(IBlockData state, ServerLevel level, BlockPos pos, RandomSource random) {
         if (!this.scanForWater(level, pos)) {
+            // CraftBukkit start
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.callBlockFadeEvent(level, pos, this.deadBlock.defaultBlockState()).isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
             level.setBlock(pos, this.deadBlock.defaultBlockState(), 2);
         }
+
     }
 
     @Override
-    public BlockState updateShape(BlockState state, Direction facing, BlockState facingState, LevelAccessor level, BlockPos currentPos, BlockPos facingPos) {
+    public IBlockData updateShape(IBlockData state, Direction facing, IBlockData facingState, LevelAccessor level, BlockPos currentPos, BlockPos facingPos) {
         if (!this.scanForWater(level, currentPos)) {
-            level.scheduleTick(currentPos, this, 60 + level.getRandom().nextInt(40));
+            level.scheduleTick(currentPos, (Block) this, 60 + level.getRandom().nextInt(40));
         }
 
         return super.updateShape(state, facing, facingState, level, currentPos, facingPos);
     }
 
     protected boolean scanForWater(BlockGetter level, BlockPos pos) {
-        for (Direction direction : Direction.values()) {
-            FluidState fluidState = level.getFluidState(pos.relative(direction));
-            if (fluidState.is(FluidTags.WATER)) {
+        Direction[] aenumdirection = Direction.values();
+        int i = aenumdirection.length;
+
+        for (int j = 0; j < i; ++j) {
+            Direction enumdirection = aenumdirection[j];
+            FluidState fluid = level.getFluidState(pos.relative(enumdirection));
+
+            if (fluid.is(FluidTags.WATER)) {
                 return true;
             }
         }
@@ -63,9 +76,9 @@
 
     @Nullable
     @Override
-    public BlockState getStateForPlacement(BlockPlaceContext context) {
+    public IBlockData getStateForPlacement(BlockPlaceContext context) {
         if (!this.scanForWater(context.getLevel(), context.getClickedPos())) {
-            context.getLevel().scheduleTick(context.getClickedPos(), this, 60 + context.getLevel().getRandom().nextInt(40));
+            context.getLevel().scheduleTick(context.getClickedPos(), (Block) this, 60 + context.getLevel().getRandom().nextInt(40));
         }
 
         return this.defaultBlockState();
