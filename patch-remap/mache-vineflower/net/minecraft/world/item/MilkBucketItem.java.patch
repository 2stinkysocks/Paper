--- a/net/minecraft/world/item/MilkBucketItem.java
+++ b/net/minecraft/world/item/MilkBucketItem.java
@@ -3,13 +3,14 @@
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.stats.Stats;
-import net.minecraft.world.InteractionHand;
+import net.minecraft.world.EnumHand;
 import net.minecraft.world.InteractionResultHolder;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
 
 public class MilkBucketItem extends Item {
+
     private static final int DRINK_DURATION = 32;
 
     public MilkBucketItem(Item.Properties properties) {
@@ -18,17 +19,19 @@
 
     @Override
     public ItemStack finishUsingItem(ItemStack stack, Level level, LivingEntity entityLiving) {
-        if (entityLiving instanceof ServerPlayer serverPlayer) {
-            CriteriaTriggers.CONSUME_ITEM.trigger(serverPlayer, stack);
-            serverPlayer.awardStat(Stats.ITEM_USED.get(this));
+        if (entityLiving instanceof ServerPlayer) {
+            ServerPlayer entityplayer = (ServerPlayer) entityLiving;
+
+            CriteriaTriggers.CONSUME_ITEM.trigger(entityplayer, stack);
+            entityplayer.awardStat(Stats.ITEM_USED.get(this));
         }
 
-        if (entityLiving instanceof Player && !((Player)entityLiving).getAbilities().instabuild) {
+        if (entityLiving instanceof Player && !((Player) entityLiving).getAbilities().instabuild) {
             stack.shrink(1);
         }
 
         if (!level.isClientSide) {
-            entityLiving.removeAllEffects();
+            entityLiving.removeAllEffects(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.MILK); // CraftBukkit
         }
 
         return stack.isEmpty() ? new ItemStack(Items.BUCKET) : stack;
@@ -40,12 +43,12 @@
     }
 
     @Override
-    public UseAnim getUseAnimation(ItemStack stack) {
-        return UseAnim.DRINK;
+    public EnumAnimation getUseAnimation(ItemStack stack) {
+        return EnumAnimation.DRINK;
     }
 
     @Override
-    public InteractionResultHolder<ItemStack> use(Level level, Player player, InteractionHand hand) {
+    public InteractionResultHolder<ItemStack> use(Level level, Player player, EnumHand hand) {
         return ItemUtils.startUsingInstantly(level, player, hand);
     }
 }
